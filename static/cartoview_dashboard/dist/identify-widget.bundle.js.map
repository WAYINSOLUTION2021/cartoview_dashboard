{"version":3,"sources":["webpack:///./src/components/FieldSet.jsx","webpack:///./src/events/Events.jsx","webpack:///./~/events/events.js","webpack:///./~/boundless-sdk/util.js","webpack:///./src/components/identify/IdentifyWidget.jsx","webpack:///./~/boundless-sdk/services/SLDService.js","webpack:///./~/boundless-sdk/services/WMSService.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/identify/style.css","webpack:///./~/style-loader/addStyles.js","webpack:///./~/querystringify/index.js","webpack:///./~/ogc-schemas/lib/Filter_1_0_0.js","webpack:///./~/ogc-schemas/lib/GML_2_1_2.js","webpack:///./~/ogc-schemas/lib/SLD_1_0_0_GeoServer.js","webpack:///./~/requires-port/index.js","webpack:///./~/url-parse/index.js","webpack:///./src/components/identify/style.css?c0c6","webpack:///./src/identify-widget.jsx","webpack:///./~/jsonix/jsonix.js","webpack:///./~/w3c-schemas/lib/XLink_1_0.js"],"names":["JSONField","props","Object","defineProperty","get","JSON","parse","refs","textarea","value","set","newValue","stringify","enumerable","configurable","render","ref","FieldSet","state","schema","getSchema","data","getInitialData","fields","keys","map","field","key","getValue","name","className","f","fieldSet","indexOf","type","getSelectOptions","label","charAt","toUpperCase","slice","options","getData","IdentifyWidget","assign","ready","busy","features","activeFeature","setConfig","config","attachToMapWidget","prev","e","setState","next","length","resultItem","getKeys","geom","getGeometryName","getId","componentDidMount","mapWidget","context","configManager","getWidget","init","on","getLayers","getArray","forEach","layer","getFeatureInfo","coordinate","result","concat","isWMS","getSource","source","TileWMS","ImageWMS","layers","children","Group","getVisible","push","BaseWidget","displayName","ConfigForm","maps","lable","widget","getConfig","mapWidgets","getMapWidgets","filter","dash","widgets","widgetId","title","Dashboard","registerWidget"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;IAEMA,S;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,iDAChB,sBAAMA,KAAN,CADgB;;AAEhBC,WAAOC,cAAP,QAA4B,OAA5B,EAAqC;AACnCC,WAAK,eAAM;AAAE,eAAOC,KAAKC,KAAL,CAAW,MAAKC,IAAL,CAAUC,QAAV,CAAmBC,KAA9B,CAAP;AAA8C,OADxB;AAEnCC,WAAK,aAACC,QAAD,EAAc;AAAE,cAAKJ,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,GAA2BJ,KAAKO,SAAL,CAAeD,YAAY,EAA3B,CAA3B;AAA4D,OAF9C;AAGnCE,kBAAY,IAHuB;AAInCC,oBAAc;AAJqB,KAArC;AAFgB;AAQjB;;sBACDC,M,qBAAQ;AAAA,QACId,KADJ,4BACa,KAAKA,KADlB;;AAEN,WAAOA,MAAMe,GAAb;AACA,WAAO,uDAAcf,KAAd,IAAqB,KAAI,UAAzB,IAAP;AACD,G;;;;;IAEGgB,Q;;;AACJ,oBAAYhB,KAAZ,EAAkB;AAAA;;AAAA,kDAChB,uBAAMA,KAAN,CADgB;;AAEhB,WAAKiB,KAAL,GAAa;AACXC,cAAQlB,MAAMkB,MAAN,IAAgB,OAAKC,SAAL,CAAenB,KAAf,CADb;AAEXoB,YAAMpB,MAAMoB,IAAN,IAAc,OAAKC,cAAL,CAAoBrB,KAApB;AAFT,KAAb;AAIA,WAAKsB,MAAL,GAAc,EAAd;AANgB;AAOjB;;qBACDH,S,wBAAW;AACT,WAAO,EAAP;AACD,G;;qBACDE,c,6BAAgB;AACd,WAAO,EAAP;AACD,G;;qBACDP,M,qBAAQ;AAAA;;AAAA,iBACiB,KAAKG,KADtB;AAAA,QACCC,MADD,UACCA,MADD;AAAA,QACSE,IADT,UACSA,IADT;;AAEN,mCACGnB,OAAOsB,IAAP,CAAYL,MAAZ,EAAoBM,GAApB,CAAwB;AAAA,aAAO,OAAKC,KAAL,CAAWC,GAAX,EAAgBR,OAAOQ,GAAP,CAAhB,EAA6BR,OAAOQ,GAAP,EAAYC,QAAZ,GAAuBT,OAAOQ,GAAP,EAAYC,QAAZ,CAAqBP,IAArB,CAAvB,GAAoDA,KAAKM,GAAL,KAAa,IAA9F,CAAP;AAAA,KAAxB,CADH;AAGD,G;;qBAEDD,K,kBAAMG,I,EAAMV,M,EAAQV,K,EAAM;AAAA;;AAAA,wBACPU,MADO,CACnBlB,KADmB;AAAA,QACnBA,KADmB,iCACb,EADa;;AAExBA,UAAM6B,SAAN,GAAkB,cAAlB;AACA7B,UAAMe,GAAN,GAAY,UAACe,CAAD,EAAO;AACjB,UAAGA,CAAH,EAAK;AACHA,UAAEtB,KAAF,GAAUA,KAAV;AACA,eAAKc,MAAL,CAAYM,IAAZ,IAAoBE,CAApB;AACAA,UAAEC,QAAF;AACD;AACF,KAND;AAOA,QAAIN,QAAQ,IAAZ;;AAEA,QAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,OAA1B,EAAmCO,OAAnC,CAA2Cd,OAAOe,IAAlD,KAA2D,CAAC,CAA/D,EAAiE;AAC/DjC,YAAMiC,IAAN,GAAaf,OAAOe,IAApB;AACAR,cAAQ,uCAAWzB,KAAX,CAAR;AACD,KAHD,MAIK,IAAGkB,OAAOe,IAAP,IAAe,UAAlB,EAA6B;AAChCR,cAAQ,0CAAczB,KAAd,CAAR;AACD,KAFI,MAGA,IAAGkB,OAAOe,IAAP,IAAe,MAAlB,EAAyB;AAC5BR,cAAQ,8BAAC,SAAD,EAAezB,KAAf,CAAR;AACD,KAFI,MAGA,IAAGkB,OAAOe,IAAP,IAAe,QAAlB,EAA2B;AAC9BR,cAAS;AAAA;AAAYzB,aAAZ;AACN,aAAKkC,gBAAL,CAAsBN,IAAtB,EAA4BV,MAA5B,EAAoCV,KAApC;AADM,OAAT;AAGD;AACD,QAAI2B,QAAQjB,OAAOiB,KAAP,IAAiBP,KAAKQ,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BT,KAAKU,KAAL,CAAW,CAAX,CAA5D;AACA;AAAA,iBAAsB;AAAtB,yCACUH,KADV,GAEGV,KAFH;AAID,G;;qBACDS,gB,6BAAiBN,I,EAAMV,M,EAAQV,K,EAAM;AAAA,QAC9B+B,OAD8B,GACnBrB,MADmB,CAC9BqB,OAD8B;;AAEnC,QAAG,CAACA,OAAJ,EAAa,OAAO,IAAP;AACb,QAAG,QAAOA,OAAP,yCAAOA,OAAP,MAAkB,QAArB,EAA8B;AAC5B,aAAOtC,OAAOsB,IAAP,CAAYgB,OAAZ,EAAqBf,GAArB,CAAyB;AAAA;AAAA,iBAAsBE;AAAtB,mBAA4Ba,QAAQb,GAAR,CAA5B;AAAA,OAAzB,CAAP;AACD,KAFD,MAGK,IAAG,OAAOa,OAAP,IAAkB,UAArB,EAAiC;AACpC,aAAOA,QAAQ,IAAR,EAAc,KAAKtB,KAAL,CAAWG,IAAzB,CAAP;AACD;AACD,WAAO,IAAP;AACD,G;;qBACDoB,O,sBAAS;AAAA;;AACP,QAAIpB,OAAO,EAAX;AACAnB,WAAOsB,IAAP,CAAY,KAAKD,MAAjB,EAAyBE,GAAzB,CAA6B,UAACE,GAAD,EAAS;AAAEN,WAAKM,GAAL,IAAY,OAAKJ,MAAL,CAAYI,GAAZ,EAAiBlB,KAA7B;AAAqC,KAA7E;AACA,WAAOY,IAAP;AACD,G;;;;;kBAGYJ,Q;;;;;;;;;;;;AC3Ff;;kBACe,0B;;;;;;;ACDf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC7SA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,8BAA8B,EAAE,UAAU,EAAE,UAAU,EAAE;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;;;;;;;ACjIA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;IACMyB,c;;;AAEF,4BAAazC,KAAb,EAAqB;AAAA;;AAAA,qDACjB,uBAAOA,KAAP,CADiB;;AAEjB,cAAKiB,KAAL,GAAahB,OAAOyC,MAAP,CAAe,MAAKzB,KAApB,EAA2B;AACpC0B,mBAAO,KAD6B;AAEpCC,kBAAM,KAF8B;AAGpCC,sBAAU,EAH0B;AAIpCC,2BAAe;AAJqB,SAA3B,CAAb;AAFiB;AAQpB;;6BAEDC,S,sBAAUC,M,EAAO;AACb,8BAAMD,SAAN,YAAgBC,MAAhB;AACA,aAAKC,iBAAL,CAAuBD,MAAvB;AACH,K;;6BAEDlC,M,qBAAU;AAAA;;AAAA,qBACyC,KAAKG,KAD9C;AAAA,YACA0B,KADA,UACAA,KADA;AAAA,YACOC,IADP,UACOA,IADP;AAAA,YACaC,QADb,UACaA,QADb;AAAA,YACuBC,aADvB,UACuBA,aADvB;;AAEN,YAAMI,OAAO,SAAPA,IAAO,CAAEC,CAAF,EAAS;AAClB,gBAAKL,iBAAiB,CAAtB,EAA0B;AAC1BA;AACA,mBAAKM,QAAL,CAAe,EAAEN,4BAAF,EAAf;AACH,SAJD;AAKA,YAAMO,OAAO,SAAPA,IAAO,CAAEF,CAAF,EAAS;AAClB,gBAAKL,iBAAiBD,SAASS,MAAT,GAAkB,CAAxC,EAA4C;AAC5CR;AACA,mBAAKM,QAAL,CAAe,EAAEN,4BAAF,EAAf;AACH,SAJD;AAKA,uCAEDF;AAAA,uBAAuB;AAAvB,UAFC,EAGD,CAACA,IAAD,IAAUC,SAASS,MAAT,IAAmB,CAA7B;AAAA,uBAAkD;AAAlD,qEAHC,EAKA,CAACV,IAAD,IAAUC,SAASS,MAAT,GAAkB,CAA5B;AAAA,uBAEiB;AAFjB;AAAA,uBAGsB,qBAHtB;AAAA,qBAGqD;AAAA,uBAAKJ,KAAKC,CAAL,CAAL;AAAA,aAHrD;AAAA,sBAG6EL,iBAAiB;AAH9F;AAAA,uBAImB;AAJnB,aAMKA,gBAAgB,CANrB,SAM2BD,SAASS,MANpC;AAAA,uBAOsB,qBAPtB;AAAA,qBAOqD;AAAA,uBAAKD,KAAKF,CAAL,CAAL;AAAA,aAPrD;AAAA,sBAO6EL,iBAAiBD,SAASS,MAAT,GAAkB;AAPhH;AAAA,uBAQmB;AARnB,cAWG,KAAKC,UAAL,CAAgBV,SAASC,aAAT,CAAhB,CAXH,CALA;AAoBH,K;;6BACDS,U,uBAAYzB,C,EAAI;AACZ,YAAIP,OAAOO,EAAE0B,OAAF,EAAX;AACA,YAAIC,OAAO3B,EAAE4B,eAAF,EAAX;AACA;AAAA,uBACY;AADZ,mBAC2C5B,EAAE3B,GAAF,CAAM,aAAN,CAD3C;AAAA,uBAEa;AAFb;AAAA,uBAGiB;AAHjB,WAG8B2B,EAAE6B,KAAF,EAH9B,4BAMMpC,KAAKC,GAAL,CAAS,UAACE,GAAD,EAAS;AAChB,gBAAIA,OAAO+B,IAAP,IAAe/B,OAAO,aAA1B,EAAyC,OAAO,IAAP;AACzC,iEAAgBA,GAAhB,0BAA8BI,EAAE3B,GAAF,CAAMuB,GAAN,CAA9B;AACD,SAHD,CANN;AAeH,K;;6BAEDkC,iB,gCAAoB;AAChB,YAAI,KAAK3C,KAAL,CAAW+B,MAAX,CAAkBa,SAAtB,EAAiC;AAC7B,iBAAKZ,iBAAL,CAAuB,KAAKhC,KAAL,CAAW+B,MAAlC;AACH;AACD,8BAAMY,iBAAN;AACH,K;;6BAEDX,iB,8BAAkBD,M,EAAQ;AAAA;;AACtB,YAAIa,YAAY,KAAKC,OAAL,CAAaC,aAAb,CAA2BC,SAA3B,CAAqChB,OAAOa,SAA5C,CAAhB;AACA,YAAIA,aAAaA,UAAUlB,KAA3B,EAAkC;AAC9B,iBAAKsB,IAAL,CAAUJ,UAAUrC,GAApB;AACH,SAFD,MAEO;AACH,6BAAO0C,EAAP,CAAU,aAAa,GAAb,GAAmB,KAAKjD,KAAL,CAAW+B,MAAX,CAAkBa,SAA/C,EAA0D,UAACrC,GAAD,EAAS;AAC/D,uBAAKyC,IAAL,CAAUzC,GAAV;AACH,aAFD;AAGH;AACJ,K;;6BAEDyC,I,iBAAMzC,G,EAAM;AAAA;;AACR,aAAK4B,QAAL,CAAe,EAAET,OAAO,IAAT,EAAf;AACAnB,YAAI0C,EAAJ,CAAQ,aAAR,EAAuB,UAAEf,CAAF,EAAS;AAC5B,mBAAKgB,SAAL,CAAgB3C,IAAI2C,SAAJ,GAAiBC,QAAjB,EAAhB,EAA+CC,OAA/C,CACI,UAAEC,KAAF,EAAa;AACT,uBAAKlB,QAAL,CAAe,EAAER,MAAM,IAAR,EAAcC,UAAU,EAAxB;AACXC,mCAAe,CADJ,EAAf;AAEA,qCAAWyB,cAAX,CAA2BD,KAA3B,EAAkCnB,EAAEqB,UAApC,EACIhD,GADJ,EACS,kBADT,EAC6B,UAAEiD,MAAF,EAAc;AACnC,2BAAKxD,KAAL,CAAW4B,QAAX,GAAsB,OAAK5B,KAAL,CAAW4B,QAAX,CAAoB6B,MAApB,CAA4BD,OAAO5B,QAAnC,CAAtB;AACA4B,2BAAO5B,QAAP,CAAgBwB,OAAhB,CAAyB;AAAA,+BAAKvC,EAAErB,GAAF,CAAO,aAAP,EAAsBgE,OAAOH,KAAP,CAAanE,GAAb,CAAiB,OAAjB,CAAtB,CAAL;AAAA,qBAAzB;AACA,2BAAKiD,QAAL,CAAe,EAAEP,UAAU,OAAK5B,KAAL,CAAW4B,QAAvB,EAAiCD,MAAM,KAAvC,EAAf;AACH,iBALL;AAMH,aAVL;AAWH,SAZD;AAaH,K;;6BACD+B,K,kBAAOL,K,EAAQ;AACX,eAAOA,MAAMM,SAAN,cAA8B,qBAAGC,MAAH,CAAUC,OAAxC,IAAmDR,MAAMM,SAAN,cAA8B,qBACnFC,MADmF,CAC5EE,QADZ;AAEH,K;;6BACDZ,S,sBAAWa,M,EAAS;AAAA;;AAChB,YAAIC,WAAW,EAAf;AACAD,eAAOX,OAAP,CAAgB,UAAEC,KAAF,EAAa;AACzB,gBAAKA,iBAAiB,qBAAGA,KAAH,CAASY,KAA/B,EAAuC;AACnCD,2BAAWA,SAASP,MAAT,CAAiB,OAAKP,SAAL,CAAgBG,MAAMH,SAAN,EAAhB,CAAjB,CAAX;AACH,aAFD,MAEO,IAAKG,MAAMa,UAAN,MAAuB,OAAKR,KAAL,CAAYL,KAAZ,CAA5B,EAAkD;AACrDW,yBAASG,IAAT,CAAed,KAAf;AACH;AACJ,SAND;AAOA,eAAOW,QAAP;AACH,K;;;EAtHwBI,U;;AAAvB5C,c,CACK6C,W,GAAc,U;;IAuHnBC,U;;;AACF,wBAAYvF,KAAZ,EAAmB;AAAA;;AAAA,sDACf,qBAAMA,KAAN,CADe;;AAEf,eAAKiB,KAAL,CAAWuE,IAAX,GAAkB,EAAlB;AAFe;AAGlB;;yBAEDrE,S,sBAAUnB,K,EAAO;AACb,eAAO;AACH6D,uBAAW;AACP5B,sBAAM,QADC;AAEPwD,uBAAO,KAFA;AAGPlD,yBAAS,EAHF;AAIPvC,uBAAM;AAJC;AADR,SAAP;AAQH,K;;yBAEDqB,c,2BAAerB,K,EAAO;AAClB,eAAOA,MAAM0F,MAAN,CAAaC,SAAb,EAAP;AACH,K;;yBAEDzD,gB,6BAAiBN,I,EAAMoB,M,EAAQxC,K,EAAO;AACjC,YAAIoF,aAAa,KAAK5F,KAAL,CAAW0F,MAAX,CAAkB5B,OAAlB,CAA0BC,aAA1B,CAAwC8B,aAAxC,EAAjB;AACA,eAAO5F,OAAOsB,IAAP,CAAYqE,UAAZ,EAAwBE,MAAxB,CAA+B;AAAA,mBAAYC,KAAK/F,KAAL,CAAWgG,OAAX,CAAmBC,QAAnB,EAA6BhE,IAA7B,CAAkCL,IAAlC,IAA0C,WAAtD;AAAA,SAA/B,EACAJ,GADA,CACI;AAAA;AAAA,uBAA2ByE;AAA3B,uBAAsCL,WAAWK,QAAX,EAAqBC,KAA3D,SAAqED,QAArE;AAAA,SADJ,CAAP;AAEJ,K;;AAED;AACA;AACA;;;;;;AAEJxD,eAAe8C,UAAf,GAA4BA,UAA5B;AACAY,UAAUC,cAAV,CAA0B3D,cAA1B;kBACeA,c;;;;;;;;ACnKf;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE,GAAG;AACpjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,QAAQ;AACjF;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,QAAQ;AACtyDAAyD,QAAQ;AACjE;AACA;AACA;AACA,WAAW;AACX,0DAA0D,oDAAoD;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,4EAA4E,sDAAsD;AAClmCAAmC;AAC9D;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT,+DAA+D,QAAQ;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,mC;;;;;;;;ACxyBA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE,GAAG;AACpjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA,+FAA+F,kCAAkC;AACjI;AACA;AACA,OAAO,gBAAgB;AACvmC;;;;;;;ACnMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA,wCAAwC,gBAAgB;AACxD,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjDA;AACA;;;AAGA;AACA,8CAA+C,oBAAoB,KAAK,uBAAuB,qBAAqB,KAAK,wBAAwB,qBAAqB,wBAAwB,wBAAwB,KAAK,iCAAiC,wBAAwB,KAAK;;AAEzR;;;;;;;;ACPA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;AACA;;;;;;;;;ACrPA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACzgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACxiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbpCA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;8CCrCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;AACH,sCAAsC;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtZA;;AAEA;AACA;AACA;AACA;AACA,gDAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC,UAAU,EAAE;AAC5C,C;;;;;;;;;;ACpBA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA,OAAO;AACP;;AAEA,OAAO;AACP,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,qBAAqB;AAC5D,0CAA0C,qBAAqB;AAC/D,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,EAAE;AACF;AACA,CAAC;AACD;AACA,2CAA2C;AAC3C,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,qBAAqB;AAChC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA,yBAAyB,yDAAyD;AAClF;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,0CAA0C,KAAK,2BAA2B;AAC5K;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,K;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,yB;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,+BAA+B;AACxD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kFAAkF,EAAE;AACpF,oFAAoF,EAAE;AACtF,gFAAgF,EAAE;AAClF,kFAAkF,EAAE;AACpF,sFAAsF,EAAE;AACxF,qFAAqF,EAAE;AACvF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,oBAAoB,2CAA2C,eAAe;AAC9E,oBAAoB,4CAA4C,eAAe;AAC/E,oBAAoB,0CAA0C,eAAe;AAC7E,qBAAqB,4CAA4C,eAAe;AAChF,qBAAqB,8CAA8C,eAAe;AAClF,qBAAqB,wCAAwC,eAAe;AAC5E;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,mD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA,IAAI;AACJ;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACh/LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"identify-widget.bundle.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass JSONField extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    Object.defineProperty(this, 'value', {\r\n      get: () => { return JSON.parse(this.refs.textarea.value); },\r\n      set: (newValue) => { this.refs.textarea.value = JSON.stringify(newValue || {}); },\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  }\r\n  render(){\r\n    const {...props} = this.props;\r\n    delete props.ref;\r\n    return <textarea {...props} ref=\"textarea\" />;\r\n  }\r\n}\r\nclass FieldSet extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      schema: props.schema || this.getSchema(props),\r\n      data: props.data || this.getInitialData(props)\r\n    };\r\n    this.fields = {};\r\n  }\r\n  getSchema(){\r\n    return {};\r\n  }\r\n  getInitialData(){\r\n    return {};\r\n  }\r\n  render(){\r\n    const {schema, data} = this.state;\r\n    return <div>\r\n      {Object.keys(schema).map(key => this.field(key, schema[key], schema[key].getValue ? schema[key].getValue(data) : data[key] || null))}\r\n    </div>\r\n  }\r\n\r\n  field(name, schema, value){\r\n    var {props={}} = schema;\r\n    props.className = \"form-control\";\r\n    props.ref = (f) => {\r\n      if(f){\r\n        f.value = value;\r\n        this.fields[name] = f;\r\n        f.fieldSet = this;\r\n      }\r\n    };\r\n    var field = null;\r\n\r\n    if(['text', 'number', 'url', 'email'].indexOf(schema.type) != -1){\r\n      props.type = schema.type;\r\n      field = <input {...props} />;\r\n    }\r\n    else if(schema.type == \"textarea\"){\r\n      field = <textarea {...props} />;\r\n    }\r\n    else if(schema.type == \"json\"){\r\n      field = <JSONField {...props}/>\r\n    }\r\n    else if(schema.type == 'select'){\r\n      field =  <select {...props}>\r\n        {this.getSelectOptions(name, schema, value)}\r\n      </select>;\r\n    }\r\n    var label = schema.label || (name.charAt(0).toUpperCase() + name.slice(1));\r\n    return <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      {field}\r\n    </div>;\r\n  }\r\n  getSelectOptions(name, schema, value){\r\n    var {options} = schema;\r\n    if(!options) return null;\r\n    if(typeof options == \"object\"){\r\n      return Object.keys(options).map(key => <option value={key}>{options[key]}</option>)\r\n    }\r\n    else if(typeof options == 'function' ){\r\n      return options(this, this.state.data);\r\n    }\r\n    return null\r\n  }\r\n  getData(){\r\n    var data = {};\r\n    Object.keys(this.fields).map((key) => { data[key] = this.fields[key].value; });\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default FieldSet;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FieldSet.jsx","import {EventEmitter}  from 'events';\r\nexport default new EventEmitter();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/Events.jsx","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 20\n// module chunks = 0 4 5 6 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  getProxiedUrl: function getProxiedUrl(url, opt_proxy) {\n    if (opt_proxy) {\n      return opt_proxy + encodeURIComponent(url);\n    } else {\n      return url;\n    }\n  },\n  getResolutionForScale: function getResolutionForScale(scale, units) {\n    var dpi = 25.4 / 0.28;\n    var mpu = _openlayers2.default.proj.METERS_PER_UNIT[units];\n    var inchesPerMeter = 39.37;\n    return parseFloat(scale) / (mpu * inchesPerMeter * dpi);\n  },\n  getTimeInfo: function getTimeInfo(layer) {\n    if (layer.Dimension) {\n      for (var i = 0, ii = layer.Dimension.length; i < ii; ++i) {\n        var dimension = layer.Dimension[i];\n        if (dimension.name === 'time') {\n          return dimension.values;\n        }\n      }\n    }\n  },\n  rgbToHex: function rgbToHex(rgb) {\n    rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n  },\n  hexToRgb: function hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  },\n  transformColor: function transformColor(color) {\n    var colorObj = color.rgb ? color.rgb : color;\n    return [colorObj.r, colorObj.g, colorObj.b, colorObj.a];\n  },\n  doJSONP: function doJSONP(url, success, failure, scope) {\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n    var cbname = 'fn' + Date.now() + getRandomInt(1, 10000);\n    var script = document.createElement('script');\n    script.onerror = function () {\n      if (failure) {\n        failure.call(scope);\n      }\n    };\n    script.src = url.replace('__cbname__', cbname);\n    window[cbname] = function (jsonData) {\n      success.call(scope, jsonData);\n      delete window[cbname];\n    };\n    document.head.appendChild(script);\n  },\n  doGET: function doGET(url, success, failure, scope, opt_requestHeaders) {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4) {\n        if (xmlhttp.status === 200) {\n          if (success) {\n            success.call(scope, xmlhttp);\n          }\n        } else if (failure) {\n          failure.call(scope, xmlhttp);\n        }\n      }\n    };\n    xmlhttp.open('GET', url, true);\n    if (opt_requestHeaders) {\n      for (var key in opt_requestHeaders) {\n        if (opt_requestHeaders.hasOwnProperty(key)) {\n          xmlhttp.setRequestHeader(key, opt_requestHeaders[key]);\n        }\n      }\n    }\n    xmlhttp.send();\n    return xmlhttp;\n  },\n  doPOST: function doPOST(url, data, success, failure, scope, contentType, put, opt_requestHeaders) {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.open(put ? 'PUT' : 'POST', url, true);\n    xmlhttp.setRequestHeader('Content-Type', contentType ? contentType : 'text/xml');\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4) {\n        if (xmlhttp.status === 200 || xmlhttp.status === 201) {\n          success.call(scope, xmlhttp);\n        } else {\n          failure.call(scope, xmlhttp);\n        }\n      }\n    };\n    if (opt_requestHeaders) {\n      for (var key in opt_requestHeaders) {\n        if (opt_requestHeaders.hasOwnProperty(key)) {\n          xmlhttp.setRequestHeader(key, opt_requestHeaders[key]);\n        }\n      }\n    }\n    xmlhttp.send(data);\n    return xmlhttp;\n  }\n}; /*\n    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\n    * Licensed under the Apache License, Version 2.0 (the \"License\").\n    * You may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    * http://www.apache.org/licenses/LICENSE-2.0\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and limitations under the License.\n    */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/util.js\n// module id = 27\n// module chunks = 4 5 6","import \"./style.css\"\r\n\r\nimport React from 'react';\r\n\r\nimport Events from '../../events/Events.jsx';\r\nimport FieldSet from '../FieldSet.jsx';\r\nimport WMSService from 'boundless-sdk/services/WMSService';\r\nimport ol from 'openlayers';\r\n\r\n//application/json\r\nclass IdentifyWidget extends BaseWidget {\r\n    static displayName = \"Identify\";\r\n    constructor( props ) {\r\n        super( props )\r\n        this.state = Object.assign( this.state, {\r\n            ready: false,\r\n            busy: false,\r\n            features: [ ],\r\n            activeFeature: 0\r\n        } ) ;\r\n    }\r\n\r\n    setConfig(config){\r\n        super.setConfig(config);\r\n        this.attachToMapWidget(config)\r\n    }\r\n\r\n    render( ) {\r\n        var { ready, busy, features, activeFeature } = this.state;\r\n        const prev = ( e ) => {\r\n            if ( activeFeature == 0 ) return;\r\n            activeFeature--;\r\n            this.setState( { activeFeature } );\r\n        };\r\n        const next = ( e ) => {\r\n            if ( activeFeature == features.length - 1 ) return;\r\n            activeFeature++;\r\n            this.setState( { activeFeature } );\r\n        };\r\n        return <div>\r\n\r\n      {busy && <div className=\"loading\"></div>}\r\n      {!busy && (features.length == 0) && <div className=\"identify-no-results\">No Results, Click the map to identify features.</div>}\r\n      {\r\n        !busy && (features.length > 0) &&\r\n        <div>\r\n          <div className=\"pull-right identify-navigate\">\r\n            <button className=\"btn btn-link btn-xs\" onClick={e => prev(e)} disabled={activeFeature == 0}>\r\n              <i className=\"glyphicon glyphicon-chevron-left\"></i>\r\n            </button>\r\n            {activeFeature + 1} / {features.length}\r\n            <button className=\"btn btn-link btn-xs\" onClick={e => next(e)} disabled={activeFeature == features.length - 1}>\r\n              <i className=\"glyphicon glyphicon-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n          {this.resultItem(features[activeFeature])}\r\n        </div>\r\n      }\r\n    </div>;\r\n    }\r\n    resultItem( f ) {\r\n        var keys = f.getKeys( );\r\n        var geom = f.getGeometryName( );\r\n        return <div>\r\n      <h4 className=\"identify-result-layer-title\">{f.get('_layerTitle')}</h4>\r\n      <div className=\"identify-result-ct\">\r\n        <table className=\"table\" key={f.getId()}>\r\n          <tbody>\r\n            {\r\n              keys.map((key) => {\r\n                if (key == geom || key == \"_layerTitle\") return null;\r\n                return <tr><th>{key}</th><td>{f.get(key)}</td></tr>\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.config.mapWidget) {\r\n            this.attachToMapWidget(this.state.config);\r\n        }\r\n        super.componentDidMount()\r\n    }\r\n\r\n    attachToMapWidget(config) {\r\n        var mapWidget = this.context.configManager.getWidget(config.mapWidget);\r\n        if (mapWidget && mapWidget.ready) {\r\n            this.init(mapWidget.map);\r\n        } else {\r\n            Events.on('mapReady' + '_' + this.state.config.mapWidget, (map) => {\r\n                this.init(map);\r\n            });\r\n        }\r\n    }\r\n\r\n    init( map ) {\r\n        this.setState( { ready: true } )\r\n        map.on( 'singleclick', ( e ) => {\r\n            this.getLayers( map.getLayers( ).getArray( ) ).forEach(\r\n                ( layer ) => {\r\n                    this.setState( { busy: true, features: [ ],\r\n                        activeFeature: 0 } )\r\n                    WMSService.getFeatureInfo( layer, e.coordinate,\r\n                        map, 'application/json', ( result ) => {\r\n                            this.state.features = this.state.features.concat( result.features );\r\n                            result.features.forEach( f => f.set( \"_layerTitle\", result.layer.get('title' ) ) )\r\n                            this.setState( { features: this.state.features, busy: false } );\r\n                        } );\r\n                } )\r\n        } );\r\n    }\r\n    isWMS( layer ) {\r\n        return layer.getSource( ) instanceof ol.source.TileWMS || layer.getSource( ) instanceof ol\r\n            .source.ImageWMS;\r\n    }\r\n    getLayers( layers ) {\r\n        var children = [ ];\r\n        layers.forEach( ( layer ) => {\r\n            if ( layer instanceof ol.layer.Group ) {\r\n                children = children.concat( this.getLayers( layer.getLayers( ) ) );\r\n            } else if ( layer.getVisible( ) && this.isWMS( layer ) ) {\r\n                children.push( layer );\r\n            }\r\n        } );\r\n        return children;\r\n    }\r\n}\r\nclass ConfigForm extends FieldSet {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state.maps = [];\r\n    }\r\n\r\n    getSchema(props) {\r\n        return {\r\n            mapWidget: {\r\n                type: 'select',\r\n                lable: 'Map',\r\n                options: {},\r\n                props:{}\r\n            }\r\n        };\r\n    }\r\n\r\n    getInitialData(props) {\r\n        return props.widget.getConfig();\r\n    }\r\n\r\n    getSelectOptions(name, config, value) {\r\n         var mapWidgets = this.props.widget.context.configManager.getMapWidgets();\r\n         return Object.keys(mapWidgets).filter(widgetId => dash.props.widgets[widgetId].type.name == \"MapWidget\").\r\n                map(widgetId => <option value={widgetId}>{mapWidgets[widgetId].title} - {widgetId}</option>);\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     getMapsData().then(res => this.setState({maps: res.objects}));\r\n    // }\r\n}\r\nIdentifyWidget.ConfigForm = ConfigForm;\r\nDashboard.registerWidget( IdentifyWidget );\r\nexport default IdentifyWidget;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/identify/IdentifyWidget.jsx","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\nicensed under the Apache License, Version 2.0 (the \"License\").\nou may not use this file except in compliance with the License.\nou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\nee the License for the specific language governing permissions and limitations under the License.\nn\nvar _jsonix = require('jsonix');\n\nvar _XLink_1_ = require('w3c-schemas/lib/XLink_1_0');\n\nvar _Filter_1_0_ = require('ogc-schemas/lib/Filter_1_0_0');\n\nvar _GML_2_1_ = require('ogc-schemas/lib/GML_2_1_2');\n\nvar _SLD_1_0_0_GeoServer = require('ogc-schemas/lib/SLD_1_0_0_GeoServer');\n\nvar _util = require('../util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar sldNamespace = 'http://www.opengis.net/sld';\nvar ogcNamespace = 'http://www.opengis.net/ogc';\n\nvar context = new _jsonix.Jsonix.Context([_XLink_1_.XLink_1_0, _Filter_1_0_.Filter_1_0_0, _GML_2_1_.GML_2_1_2, _SLD_1_0_0_GeoServer.SLD_1_0_0], {\n  namespacePrefixes: {\n    'http://www.w3.org/1999/xlink': 'xlink',\n    'http://www.opengis.net/sld': 'sld',\n    'http://www.opengis.net/ogc': 'ogc'\n  }\n});\nvar marshaller = context.createMarshaller();\nvar unmarshaller = context.createUnmarshaller();\n\nvar graphicFormats = {\n  'image/jpeg': /\\.jpe?g$/i,\n  'image/gif': /\\.gif$/i,\n  'image/png': /\\.png$/i\n};\n\n// make sure <= is on top of < etc.\nvar comparisonOps = {\n  '!=': 'PropertyIsNotEqualTo',\n  '==': 'PropertyIsEqualTo',\n  '>=': 'PropertyIsGreaterThanOrEqualTo',\n  '<=': 'PropertyIsLessThanOrEqualTo',\n  '>': 'PropertyIsGreaterThan',\n  '<': 'PropertyIsLessThan'\n};\n\nvar SLDService = function () {\n  function SLDService() {\n    _classCallCheck(this, SLDService);\n  }\n\n  _createClass(SLDService, [{\n    key: 'parse',\n    value: function parse(sld) {\n      var result = {};\n      var info = unmarshaller.unmarshalString(sld).value;\n      var layer = info.namedLayerOrUserLayer[0];\n      result.layerName = layer.name;\n      var namedStyleOrUserStyle = layer.namedStyleOrUserStyle[0];\n      result.styleName = namedStyleOrUserStyle.name;\n      result.styleTitle = namedStyleOrUserStyle.title;\n      result.featureTypeStyles = [];\n      for (var i = 0, ii = namedStyleOrUserStyle.featureTypeStyle.length; i < ii; ++i) {\n        var featureTypeStyle = namedStyleOrUserStyle.featureTypeStyle[i];\n        var fts = {\n          rules: [],\n          featureTypeStyleName: featureTypeStyle.name\n        };\n        for (var j = 0, jj = featureTypeStyle.rule.length; j < jj; ++j) {\n          fts.rules.push(this.parseRule(featureTypeStyle.rule[j]));\n        }\n        result.featureTypeStyles.push(fts);\n      }\n      return result;\n    }\n  }, {\n    key: 'parseRule',\n    value: function parseRule(ruleObj) {\n      var rule = {};\n      rule.name = ruleObj.name;\n      rule.title = ruleObj.title;\n      rule.minScaleDenominator = ruleObj.minScaleDenominator;\n      rule.maxScaleDenominator = ruleObj.maxScaleDenominator;\n      rule.symbolizers = [];\n      for (var i = 0, ii = ruleObj.symbolizer.length; i < ii; ++i) {\n        rule.symbolizers.push(this.parseSymbolizer(ruleObj.symbolizer[i]));\n      }\n      if (ruleObj.filter) {\n        rule.expression = this.filterToExpression(ruleObj.filter);\n      }\n      return rule;\n    }\n  }, {\n    key: 'parseComparisonOps',\n    value: function parseComparisonOps(op) {\n      var name, value, operator;\n      for (var key in comparisonOps) {\n        if (comparisonOps[key] === op.name.localPart) {\n          operator = key;\n          break;\n        }\n      }\n      for (var i = 0, ii = op.value.expression.length; i < ii; ++i) {\n        var expr = op.value.expression[i];\n        if (expr.name.localPart === 'PropertyName') {\n          name = expr.value.content[0];\n        }\n        if (expr.name.localPart === 'Literal') {\n          value = expr.value.content[0];\n        }\n      }\n      if (op.name.localPart === 'PropertyIsBetween') {\n        name = op.value.expression.value.content[0];\n        var lower = op.value.lowerBoundary.expression.value.content[0];\n        var upper = op.value.upperBoundary.expression.value.content[0];\n        return ['all', ['>=', name, lower], ['<=', name, upper]];\n      } else {\n        return [operator, name, value];\n      }\n    }\n  }, {\n    key: 'parseLogicOps',\n    value: function parseLogicOps(logicOps) {\n      var expressions = [];\n      if (logicOps.name.localPart === 'And') {\n        expressions.push('all');\n      } else if (logicOps.name.localPart === 'Or') {\n        expressions.push('any');\n      }\n      for (var i = 0, ii = logicOps.value.ops.length; i < ii; ++i) {\n        var op = logicOps.value.ops[i];\n        var subExpressions = this.parseComparisonOps(op);\n        if (subExpressions[0] === 'all') {\n          return subExpressions;\n        } else {\n          expressions.push(subExpressions);\n        }\n      }\n      return expressions;\n    }\n  }, {\n    key: 'filterToExpression',\n    value: function filterToExpression(filter) {\n      if (filter.comparisonOps) {\n        return this.parseComparisonOps(filter.comparisonOps);\n      } else if (filter.logicOps) {\n        return this.parseLogicOps(filter.logicOps);\n      }\n    }\n  }, {\n    key: 'parseSymbolizer',\n    value: function parseSymbolizer(symbolizerObj) {\n      if (symbolizerObj.name.localPart === 'PolygonSymbolizer') {\n        return this.parsePolygonSymbolizer(symbolizerObj.value);\n      } else if (symbolizerObj.name.localPart === 'LineSymbolizer') {\n        return this.parseLineSymbolizer(symbolizerObj.value);\n      } else if (symbolizerObj.name.localPart === 'PointSymbolizer') {\n        return this.parsePointSymbolizer(symbolizerObj.value);\n      } else if (symbolizerObj.name.localPart === 'TextSymbolizer') {\n        return this.parseTextSymbolizer(symbolizerObj.value);\n      }\n    }\n  }, {\n    key: 'parseTextSymbolizer',\n    value: function parseTextSymbolizer(textObj) {\n      var result = {};\n      var labelInfo = textObj.label.content[0].value;\n      if (labelInfo.TYPE_NAME === 'Filter_1_0_0.PropertyNameType') {\n        result.labelAttribute = labelInfo.content[0];\n      }\n      if (textObj.vendorOption) {\n        result.vendorOption = textObj.vendorOption;\n      }\n      if (textObj.labelPlacement) {\n        if (textObj.labelPlacement.pointPlacement) {\n          var anchorPoint = textObj.labelPlacement.pointPlacement.anchorPoint;\n          var displacement = textObj.labelPlacement.pointPlacement.displacement;\n          result.labelPlacement = {\n            type: 'POINT'\n          };\n          if (anchorPoint) {\n            result.labelPlacement.anchorPoint = [anchorPoint.anchorPointX.content[0], anchorPoint.anchorPointY.content[0]];\n          }\n          if (displacement) {\n            result.labelPlacement.displacement = [displacement.displacementX.content[0], displacement.displacementY.content[0]];\n          }\n          if (textObj.labelPlacement.pointPlacement.rotation !== undefined) {\n            result.labelPlacement.rotation = textObj.labelPlacement.pointPlacement.rotation.content[0];\n          }\n        } else if (textObj.labelPlacement.linePlacement) {\n          result.labelPlacement = {\n            type: 'LINE'\n          };\n        }\n      }\n      if (textObj.font && textObj.font.cssParameter) {\n        for (var i = 0, ii = textObj.font.cssParameter.length; i < ii; ++i) {\n          var param = textObj.font.cssParameter[i];\n          if (param.name === 'font-size') {\n            result.fontSize = param.content[0];\n          } else if (param.name === 'font-family') {\n            result.fontFamily = param.content[0];\n          } else if (param.name === 'font-style') {\n            result.fontStyle = param.content[0];\n          } else if (param.name === 'font-weight') {\n            result.fontWeight = param.content[0];\n          }\n        }\n      }\n      if (textObj.fill) {\n        result.fontColor = this.parseFill(textObj.fill).fillColor;\n      }\n      if (textObj.halo) {\n        result.halo = {\n          fill: this.parseFill(textObj.halo.fill).fillColor,\n          radius: textObj.halo.radius.content[0]\n        };\n      }\n      return result;\n    }\n  }, {\n    key: '_parseGraphic',\n    value: function _parseGraphic(graphic) {\n      var result = {};\n      if (graphic.opacity) {\n        result.opacity = parseFloat(graphic.opacity.content[0]);\n      }\n      if (graphic.rotation) {\n        result.rotation = graphic.rotation.content[0];\n      }\n      if (graphic.size) {\n        result.symbolSize = graphic.size.content[0];\n      }\n      var externalGraphicOrMark = graphic.externalGraphicOrMark[0];\n      if (externalGraphicOrMark.TYPE_NAME === 'SLD_1_0_0.ExternalGraphic') {\n        result.externalGraphic = externalGraphicOrMark.onlineResource.href;\n      } else {\n        if (externalGraphicOrMark.wellKnownName) {\n          result.symbolType = externalGraphicOrMark.wellKnownName.content[0];\n        }\n        var fill = externalGraphicOrMark.fill;\n        if (fill) {\n          result.fillColor = this.parseFill(fill).fillColor;\n        } else {\n          result.hasFill = false;\n        }\n        var stroke = externalGraphicOrMark.stroke;\n        if (stroke) {\n          Object.assign(result, this.parseStroke(stroke));\n        } else {\n          result.hasStroke = false;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: 'parsePointSymbolizer',\n    value: function parsePointSymbolizer(pointObj) {\n      var result = this._parseGraphic(pointObj.graphic);\n      result.type = 'Point';\n      return result;\n    }\n  }, {\n    key: 'parseLineSymbolizer',\n    value: function parseLineSymbolizer(lineObj) {\n      var result = this.parseStroke(lineObj.stroke);\n      result.type = 'LineString';\n      return result;\n    }\n  }, {\n    key: 'parsePolygonSymbolizer',\n    value: function parsePolygonSymbolizer(polyObj) {\n      var result = {\n        type: 'Polygon'\n      };\n      if (polyObj.fill) {\n        var fill = this.parseFill(polyObj.fill);\n        if (fill.fillColor) {\n          result.fillColor = fill.fillColor;\n        } else if (fill.graphicFill) {\n          result.graphicFill = fill.graphicFill;\n        }\n      } else {\n        result.hasFill = false;\n      }\n      if (polyObj.stroke) {\n        Object.assign(result, this.parseStroke(polyObj.stroke));\n      } else {\n        result.hasStroke = false;\n      }\n      return result;\n    }\n  }, {\n    key: 'parseFill',\n    value: function parseFill(fillObj) {\n      if (fillObj.graphicFill) {\n        return {\n          graphicFill: this._parseGraphic(fillObj.graphicFill.graphic)\n        };\n      } else {\n        var fillColor = {};\n        for (var i = 0, ii = fillObj.cssParameter.length; i < ii; ++i) {\n          if (fillObj.cssParameter[i].name === 'fill') {\n            fillColor.hex = fillObj.cssParameter[i].content[0];\n            fillColor.rgb = _util2.default.hexToRgb(fillColor.hex);\n          } else if (fillObj.cssParameter[i].name === 'fill-opacity') {\n            fillColor.rgb = Object.assign(fillColor.rgb, { a: parseFloat(fillObj.cssParameter[i].content[0]) });\n          }\n        }\n        return {\n          fillColor: fillColor\n        };\n      }\n    }\n  }, {\n    key: 'parseStroke',\n    value: function parseStroke(strokeObj) {\n      var stroke = {};\n      if (strokeObj.cssParameter) {\n        for (var i = 0, ii = strokeObj.cssParameter.length; i < ii; ++i) {\n          if (strokeObj.cssParameter[i].name === 'stroke') {\n            stroke.strokeColor = {\n              hex: strokeObj.cssParameter[i].content[0],\n              rgb: _util2.default.hexToRgb(strokeObj.cssParameter[i].content[0])\n            };\n          } else if (strokeObj.cssParameter[i].name === 'stroke-opacity') {\n            stroke.strokeColor.rgb = Object.assign(stroke.strokeColor.rgb, { a: parseFloat(strokeObj.cssParameter[i].content[0]) });\n          } else if (strokeObj.cssParameter[i].name === 'stroke-width') {\n            stroke.strokeWidth = parseFloat(strokeObj.cssParameter[i].content[0]);\n          } else if (strokeObj.cssParameter[i].name === 'stroke-dasharray') {\n            stroke.strokeDashArray = strokeObj.cssParameter[i].content[0];\n          } else if (strokeObj.cssParameter[i].name === 'stroke-dashoffset') {\n            stroke.strokeDashOffset = strokeObj.cssParameter[i].content[0];\n          } else if (strokeObj.cssParameter[i].name === 'stroke-linecap') {\n            stroke.strokeLineCap = strokeObj.cssParameter[i].content[0];\n          }\n        }\n      }\n      if (strokeObj.graphicStroke) {\n        stroke.graphic = this._parseGraphic(strokeObj.graphicStroke.graphic);\n      }\n      return stroke;\n    }\n  }, {\n    key: 'createFill',\n    value: function createFill(styleState) {\n      if (styleState.graphicFill) {\n        return {\n          graphicFill: {\n            graphic: this._createGraphic(styleState.graphicFill)\n          }\n        };\n      } else {\n        var cssParameter = [{\n          name: 'fill',\n          content: [styleState.fillColor.hex]\n        }];\n        if (styleState.fillColor.rgb.a !== undefined) {\n          cssParameter.push({\n            name: 'fill-opacity',\n            content: [String(styleState.fillColor.rgb.a)]\n          });\n        }\n        return {\n          cssParameter: cssParameter\n        };\n      }\n    }\n  }, {\n    key: 'createStroke',\n    value: function createStroke(styleState) {\n      var graphic;\n      if (styleState.graphic) {\n        graphic = this._createGraphic(styleState.graphic);\n      }\n      var cssParameters = [];\n      if (styleState.strokeColor) {\n        cssParameters.push({\n          name: 'stroke',\n          content: [styleState.strokeColor.hex]\n        });\n        if (styleState.strokeColor.rgb.a !== undefined) {\n          cssParameters.push({\n            name: 'stroke-opacity',\n            content: [String(styleState.strokeColor.rgb.a)]\n          });\n        }\n      }\n      if (styleState.strokeWidth !== undefined) {\n        cssParameters.push({\n          name: 'stroke-width',\n          content: [String(styleState.strokeWidth)]\n        });\n      }\n      if (styleState.strokeDashArray !== undefined) {\n        cssParameters.push({\n          name: 'stroke-dasharray',\n          content: [styleState.strokeDashArray]\n        });\n      }\n      if (styleState.strokeDashOffset !== undefined) {\n        cssParameters.push({\n          name: 'stroke-dashoffset',\n          content: [styleState.strokeDashOffset]\n        });\n      }\n      if (styleState.strokeLineCap !== undefined) {\n        cssParameters.push({\n          name: 'stroke-linecap',\n          content: [styleState.strokeLineCap]\n        });\n      }\n      var result;\n      if (cssParameters.length > 0 || graphic) {\n        result = {};\n        if (cssParameters.length > 0) {\n          result.cssParameter = cssParameters;\n        }\n        if (graphic) {\n          result.graphicStroke = {\n            graphic: graphic\n          };\n        }\n      }\n      return result;\n    }\n  }, {\n    key: 'createPolygonSymbolizer',\n    value: function createPolygonSymbolizer(styleState) {\n      var result = {\n        name: {\n          localPart: 'PolygonSymbolizer',\n          namespaceURI: sldNamespace\n        },\n        value: {\n          fill: (styleState.fillColor || styleState.graphicFill) && styleState.hasFill !== false ? this.createFill(styleState) : undefined,\n          stroke: styleState.hasStroke !== false ? this.createStroke(styleState) : undefined\n        }\n      };\n      if (result.value.fill || result.value.stroke) {\n        return result;\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: 'createLineSymbolizer',\n    value: function createLineSymbolizer(styleState) {\n      var stroke = this.createStroke(styleState);\n      if (stroke) {\n        return {\n          name: {\n            localPart: 'LineSymbolizer',\n            namespaceURI: sldNamespace\n          },\n          value: {\n            stroke: stroke\n          }\n        };\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: '_getGraphicFormat',\n    value: function _getGraphicFormat(href) {\n      var format;\n      for (var key in graphicFormats) {\n        if (graphicFormats[key].test(href)) {\n          format = key;\n          break;\n        }\n      }\n      return format || 'image/png';\n    }\n  }, {\n    key: '_createGraphic',\n    value: function _createGraphic(styleState) {\n      var graphicOrMark;\n      if (styleState.externalGraphic) {\n        graphicOrMark = [{\n          TYPE_NAME: 'SLD_1_0_0.ExternalGraphic',\n          onlineResource: { href: styleState.externalGraphic },\n          format: this._getGraphicFormat(styleState.externalGraphic)\n        }];\n      } else if (styleState.symbolType) {\n        graphicOrMark = [{\n          TYPE_NAME: 'SLD_1_0_0.Mark',\n          fill: styleState.hasFill !== false && styleState.fillColor ? this.createFill(styleState) : undefined,\n          stroke: styleState.hasStroke !== false ? this.createStroke(styleState) : undefined,\n          wellKnownName: [styleState.symbolType]\n        }];\n      } else {\n        return undefined;\n      }\n      var result = {\n        externalGraphicOrMark: graphicOrMark,\n        size: {\n          content: [styleState.symbolSize]\n        }\n      };\n      if (styleState.rotation !== undefined) {\n        result.rotation = [styleState.rotation];\n      }\n      if (styleState.externalGraphic && styleState.opacity !== undefined) {\n        result.opacity = {\n          content: ['' + styleState.opacity]\n        };\n      }\n      return result;\n    }\n  }, {\n    key: 'createPointSymbolizer',\n    value: function createPointSymbolizer(styleState) {\n      var graphic = this._createGraphic(styleState);\n      if (graphic) {\n        return {\n          name: {\n            localPart: 'PointSymbolizer',\n            namespaceURI: sldNamespace\n          },\n          value: {\n            graphic: graphic\n          }\n        };\n      } else {\n        return undefined;\n      }\n    }\n  }, {\n    key: 'createTextSymbolizer',\n    value: function createTextSymbolizer(styleState) {\n      var cssParameter = [];\n      if (styleState.fontFamily) {\n        cssParameter.push({\n          name: 'font-family',\n          content: [styleState.fontFamily]\n        });\n      }\n      if (styleState.fontSize) {\n        cssParameter.push({\n          name: 'font-size',\n          content: [String(styleState.fontSize)]\n        });\n      }\n      if (styleState.fontStyle) {\n        cssParameter.push({\n          name: 'font-style',\n          content: [styleState.fontStyle]\n        });\n      }\n      if (styleState.fontWeight) {\n        cssParameter.push({\n          name: 'font-weight',\n          content: [styleState.fontWeight]\n        });\n      }\n      var result = {\n        name: {\n          localPart: 'TextSymbolizer',\n          namespaceURI: sldNamespace\n        },\n        value: {\n          fill: styleState.fontColor ? {\n            cssParameter: [{\n              name: 'fill',\n              content: [styleState.fontColor.hex]\n            }]\n          } : undefined,\n          font: cssParameter.length > 0 ? {\n            cssParameter: cssParameter\n          } : undefined,\n          label: {\n            content: [{\n              name: {\n                localPart: 'PropertyName',\n                namespaceURI: ogcNamespace\n              },\n              value: {\n                content: [styleState.labelAttribute]\n              }\n            }]\n          },\n          vendorOption: styleState.vendorOption\n        }\n      };\n      if (styleState.halo) {\n        result.value.halo = {\n          fill: {\n            cssParameter: [{\n              name: 'fill',\n              content: [styleState.halo.fill.hex]\n            }]\n          },\n          radius: {\n            content: [styleState.halo.radius]\n          }\n        };\n      }\n      if (styleState.labelPlacement) {\n        if (styleState.labelPlacement.type === 'POINT') {\n          result.value.labelPlacement = {\n            pointPlacement: {\n              anchorPoint: {\n                anchorPointX: {\n                  content: [String(styleState.labelPlacement.anchorPoint[0])]\n                },\n                anchorPointY: {\n                  content: [String(styleState.labelPlacement.anchorPoint[1])]\n                }\n              }\n            }\n          };\n          if (styleState.labelPlacement.displacement) {\n            result.value.labelPlacement.pointPlacement.displacement = {\n              displacementX: {\n                content: [String(styleState.labelPlacement.displacement[0])]\n              },\n              displacementY: {\n                content: [String(styleState.labelPlacement.displacement[1])]\n              }\n            };\n          }\n          if (styleState.labelPlacement.rotation !== undefined) {\n            result.value.labelPlacement.pointPlacement.rotation = {\n              content: [String(styleState.labelPlacement.rotation)]\n            };\n          }\n        } else if (styleState.labelPlacement.type === 'LINE') {\n          result.value.labelPlacement = {\n            linePlacement: {}\n          };\n        }\n      }\n      return result;\n    }\n  }, {\n    key: 'expressionToFilter',\n    value: function expressionToFilter(expression) {\n      if (expression[0] === 'all' || expression[0] === 'any') {\n        var result = {\n          logicOps: {\n            name: {\n              namespaceURI: ogcNamespace,\n              localPart: expression[0] === 'all' ? 'And' : 'Or'\n            },\n            value: {\n              ops: []\n            }\n          }\n        };\n        for (var i = 1, ii = expression.length; i < ii; ++i) {\n          result.logicOps.value.ops.push(this.expressionToComparisonOp(expression[i]).comparisonOps);\n        }\n        return result;\n      } else {\n        return this.expressionToComparisonOp(expression);\n      }\n    }\n  }, {\n    key: 'expressionToComparisonOp',\n    value: function expressionToComparisonOp(expression) {\n      var operator, property, value;\n      operator = comparisonOps[expression[0]];\n      property = expression[1];\n      value = expression[2];\n      if (operator) {\n        var result = {\n          comparisonOps: {\n            name: {\n              namespaceURI: ogcNamespace,\n              localPart: operator\n            }\n          }\n        };\n        // TODO add back PropertyIsBetween\n        result.comparisonOps.value = {\n          expression: [{\n            name: {\n              namespaceURI: ogcNamespace,\n              localPart: 'PropertyName'\n            },\n            value: {\n              content: [property]\n            }\n          }, {\n            name: {\n              namespaceURI: ogcNamespace,\n              localPart: 'Literal'\n            },\n            value: {\n              content: [String(value)]\n            }\n          }]\n        };\n        return result;\n      }\n    }\n  }, {\n    key: 'createRule',\n    value: function createRule(name, title, geometryType, styleState) {\n      var filter;\n      if (styleState.expression) {\n        filter = this.expressionToFilter(styleState.expression);\n      }\n      var symbolizer = [],\n          i,\n          ii,\n          sym;\n      var functionByGeomType = {\n        'Point': this.createPointSymbolizer,\n        'LineString': this.createLineSymbolizer,\n        'Polygon': this.createPolygonSymbolizer\n      };\n      if (geometryType !== undefined) {\n        for (i = 0, ii = styleState.symbolizers.length; i < ii; ++i) {\n          sym = functionByGeomType[geometryType].call(this, styleState.symbolizers[i]);\n          if (sym) {\n            symbolizer.push(sym);\n          }\n        }\n      } else {\n        for (i = 0, ii = styleState.symbolizers.length; i < ii; ++i) {\n          var symbol = styleState.symbolizers[i];\n          if (symbol.type) {\n            sym = functionByGeomType[symbol.type].call(this, styleState.symbolizers[i]);\n            if (sym) {\n              symbolizer.push(sym);\n            }\n          }\n        }\n      }\n      for (i = 0, ii = styleState.symbolizers.length; i < ii; ++i) {\n        if (styleState.symbolizers[i].labelAttribute) {\n          symbolizer.push(this.createTextSymbolizer(styleState.symbolizers[i]));\n        }\n      }\n      return {\n        name: name,\n        title: title,\n        symbolizer: symbolizer,\n        minScaleDenominator: styleState.minScaleDenominator,\n        maxScaleDenominator: styleState.maxScaleDenominator,\n        filter: filter\n      };\n    }\n  }, {\n    key: 'createSLD',\n    value: function createSLD(layer, geometryType, featureTypeStyles) {\n      var layerName = layer.get('name');\n      var styleInfo = layer.get('styleInfo');\n      var result = {\n        name: {\n          namespaceURI: sldNamespace,\n          localPart: 'StyledLayerDescriptor'\n        }\n      };\n      result.value = {\n        version: '1.0.0',\n        namedLayerOrUserLayer: [{\n          TYPE_NAME: 'SLD_1_0_0.NamedLayer',\n          name: layerName,\n          namedStyleOrUserStyle: [{\n            TYPE_NAME: 'SLD_1_0_0.UserStyle',\n            name: styleInfo ? styleInfo.styleName : undefined,\n            title: styleInfo ? styleInfo.styleTitle : undefined,\n            featureTypeStyle: []\n          }]\n        }]\n      };\n      for (var i = 0, ii = featureTypeStyles.length; i < ii; ++i) {\n        var ruleContainer = [];\n        result.value.namedLayerOrUserLayer[0].namedStyleOrUserStyle[0].featureTypeStyle.push({\n          name: featureTypeStyles[i].featureTypeStyleName,\n          rule: ruleContainer\n        });\n        for (var j = 0, jj = featureTypeStyles[i].rules.length; j < jj; ++j) {\n          var rule = featureTypeStyles[i].rules[j].name;\n          var style = featureTypeStyles[i].rules[j];\n          ruleContainer.push(this.createRule(rule, style.title, geometryType, style));\n        }\n      }\n      return marshaller.marshalString(result);\n    }\n  }]);\n\n  return SLDService;\n}();\n\nexports.default = new SLDService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/SLDService.js\n// module id = 306\n// module chunks = 5","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\nicensed under the Apache License, Version 2.0 (the \"License\").\nou may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nnless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nee the License for the specific language governing permissions and limitations under the License.\nn\nvar _util = require('../util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _urlParse = require('url-parse');\n\nvar _urlParse2 = _interopRequireDefault(_urlParse);\n\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nvar _SLDService = require('./SLDService');\n\nvar _SLDService2 = _interopRequireDefault(_SLDService);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar wmsCapsFormat = new _openlayers2.default.format.WMSCapabilities();\nvar wmsGetFeatureInfoFormats = {\n  'application/json': new _openlayers2.default.format.GeoJSON(),\n  'application/vnd.ogc.gml': new _openlayers2.default.format.WMSGetFeatureInfo()\n};\n\nvar WMSService = function () {\n  function WMSService() {\n    _classCallCheck(this, WMSService);\n  }\n\n  _createClass(WMSService, [{\n    key: 'getCapabilitiesUrl',\n    value: function getCapabilitiesUrl(url, opt_proxy) {\n      var urlObj = new _urlParse2.default(url, true);\n      urlObj.set('query', Object.assign(urlObj.query, {\n        service: 'WMS',\n        request: 'GetCapabilities',\n        version: '1.3.0'\n      }));\n      return _util2.default.getProxiedUrl(urlObj.toString(), opt_proxy);\n    }\n  }, {\n    key: '_getGetMapUrl',\n    value: function _getGetMapUrl(info) {\n      var dcp = info.Capability.Request.GetMap.DCPType;\n      for (var i = 0, ii = dcp.length; i < ii; ++i) {\n        if (dcp[i].HTTP && dcp[i].HTTP.Get) {\n          return dcp[i].HTTP.Get.OnlineResource;\n        }\n      }\n    }\n  }, {\n    key: 'getCapabilities',\n    value: function getCapabilities(url, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      return _util2.default.doGET(this.getCapabilitiesUrl(url, opt_proxy), function (xmlhttp) {\n        var info = wmsCapsFormat.read(xmlhttp.responseText);\n        onSuccess.call(this, info.Capability.Layer, this._getGetMapUrl(info));\n      }, function (xmlhttp) {\n        onFailure.call(this, xmlhttp);\n      }, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'createLayerFromGetCaps',\n    value: function createLayerFromGetCaps(url, layerName, projection, callback, opt_proxy) {\n      this.getCapabilities(url, function (layerInfo, getMapUrl) {\n        for (var i = 0, ii = layerInfo.Layer.length; i < ii; ++i) {\n          if (layerInfo.Layer[i].Name === layerName) {\n            return callback.call(this, this.createLayer(layerInfo.Layer[i], getMapUrl || url, { title: layerInfo.Layer[i].Title }, projection, opt_proxy));\n          }\n        }\n      }, function () {}, opt_proxy);\n    }\n  }, {\n    key: 'createLayer',\n    value: function createLayer(layer, url, titleObj, projection, opt_proxy) {\n      var getLegendUrl = function getLegendUrl(layer) {\n        if (layer.Style && layer.Style.length === 1) {\n          if (layer.Style[0].LegendURL && layer.Style[0].LegendURL.length >= 1) {\n            return layer.Style[0].LegendURL[0].OnlineResource;\n          }\n        }\n      };\n      var units = projection.getUnits();\n      var source = new _openlayers2.default.source.TileWMS({\n        url: url,\n        wrapX: layer.Layer ? true : false,\n        crossOrigin: 'anonymous',\n        params: {\n          LAYERS: layer.Name,\n          TILED: true\n        }\n      });\n      if (opt_proxy) {\n        source.once('tileloaderror', function () {\n          source.setTileLoadFunction(function () {\n            var tileLoadFn = source.getTileLoadFunction();\n            return function (tile, src) {\n              tileLoadFn(tile, _util2.default.getProxiedUrl(src, opt_proxy));\n            };\n          }());\n        });\n      }\n      return new _openlayers2.default.layer.Tile({\n        title: titleObj.title,\n        emptyTitle: titleObj.empty,\n        id: layer.Name,\n        name: layer.Name,\n        legendUrl: getLegendUrl(layer),\n        minResolution: layer.MinScaleDenominator > 0 ? _util2.default.getResolutionForScale(layer.MinScaleDenominator, units) : undefined,\n        maxResolution: layer.MaxScaleDenominator > 0 ? _util2.default.getResolutionForScale(layer.MaxScaleDenominator, units) : undefined,\n        isRemovable: true,\n        isSelectable: true,\n        isWFST: true,\n        timeInfo: _util2.default.getTimeInfo(layer),\n        type: layer.Layer ? 'base' : undefined,\n        EX_GeographicBoundingBox: layer.EX_GeographicBoundingBox,\n        popupInfo: '#AllAttributes',\n        source: source\n      });\n    }\n  }, {\n    key: 'getStylesUrl',\n    value: function getStylesUrl(url, layer, opt_proxy) {\n      var urlObj = new _urlParse2.default(url);\n      urlObj.set('query', {\n        service: 'WMS',\n        request: 'GetStyles',\n        layers: layer.get('name'),\n        version: '1.1.1'\n      });\n      return _util2.default.getProxiedUrl(urlObj.toString(), opt_proxy);\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles(url, layer, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      return _util2.default.doGET(this.getStylesUrl(url, layer, opt_proxy), function (xmlhttp) {\n        var info = _SLDService2.default.parse(xmlhttp.responseText);\n        onSuccess.call(this, info);\n      }, function (xmlhttp) {\n        onFailure.call(this, xmlhttp);\n      }, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'getFeatureInfoUrl',\n    value: function getFeatureInfoUrl(layer, coordinate, view, infoFormat, opt_proxy) {\n      var resolution = view.getResolution(),\n          projection = view.getProjection();\n      var url = layer.getSource().getGetFeatureInfoUrl(coordinate, resolution, projection, {\n        'INFO_FORMAT': infoFormat\n      });\n      return _util2.default.getProxiedUrl(url, opt_proxy);\n    }\n  }, {\n    key: 'getFeatureInfo',\n    value: function getFeatureInfo(layer, coordinate, map, infoFormat, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      var view = map.getView();\n      _util2.default.doGET(this.getFeatureInfoUrl(layer, coordinate, view, infoFormat, opt_proxy), function (response) {\n        var result = {};\n        if (infoFormat === 'text/plain' || infoFormat === 'text/html') {\n          if (response.responseText.trim() !== 'no features were found') {\n            result.text = response.responseText;\n          } else {\n            result = false;\n          }\n        } else {\n          result.features = wmsGetFeatureInfoFormats[infoFormat].readFeatures(response.responseText);\n        }\n        result.layer = layer;\n        onSuccess.call(this, result);\n      }, onFailure, this, opt_requestHeaders);\n    }\n  }]);\n\n  return WMSService;\n}();\n\nexports.default = new WMSService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/WMSService.js\n// module id = 308\n// module chunks = 5","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 32\n// module chunks = 1 2 5","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".identify-no-results{\\r\\n  padding: 10px;\\r\\n}\\r\\n.identify-navigate{\\r\\n  padding: 0 5px;\\r\\n}\\r\\n.identify-result-ct{\\r\\n  overflow: auto;\\r\\n  min-height: 100px;\\r\\n  max-height: 300px;\\r\\n}\\r\\n.identify-result-layer-title{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/components/identify/style.css\n// module id = 378\n// module chunks = 5","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 40\n// module chunks = 1 2 5","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystringify/index.js\n// module id = 45\n// module chunks = 4 5 6","var Filter_1_0_0_Module_Factory = function () {\n  var Filter_1_0_0 = {\n    n: 'Filter_1_0_0',\n    dens: 'http:\\/\\/www.opengis.net\\/ogc',\n    deps: ['GML_2_1_2'],\n    tis: [{\n        ln: 'PropertyNameType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            t: 'ae'\n          }]\n      }, {\n        ln: 'DistanceType',\n        ps: [{\n            n: 'content',\n            t: 'v'\n          }, {\n            n: 'units',\n            rq: true,\n            an: {\n              lp: 'units'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LiteralType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            t: 'ae'\n          }]\n      }, {\n        ln: 'ExpressionType'\n      }, {\n        ln: 'LowerBoundaryType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'SortByType',\n        ps: [{\n            n: 'sortProperty',\n            rq: true,\n            col: true,\n            en: 'SortProperty',\n            ti: '.SortPropertyType'\n          }]\n      }, {\n        ln: 'PropertyIsNullType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'literal',\n            rq: true,\n            en: 'Literal',\n            ti: '.LiteralType'\n          }]\n      }, {\n        ln: 'FilterType',\n        ps: [{\n            n: 'spatialOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.SpatialOpsType',\n            t: 'er'\n          }, {\n            n: 'comparisonOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ComparisonOpsType',\n            t: 'er'\n          }, {\n            n: 'logicOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.LogicOpsType',\n            t: 'er'\n          }, {\n            n: 'featureId',\n            rq: true,\n            col: true,\n            en: 'FeatureId',\n            ti: '.FeatureIdType'\n          }]\n      }, {\n        ln: 'UpperBoundaryType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'FunctionType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'expression',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }, {\n            n: 'name',\n            rq: true,\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PropertyIsBetweenType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }, {\n            n: 'lowerBoundary',\n            rq: true,\n            en: 'LowerBoundary',\n            ti: '.LowerBoundaryType'\n          }, {\n            n: 'upperBoundary',\n            rq: true,\n            en: 'UpperBoundary',\n            ti: '.UpperBoundaryType'\n          }]\n      }, {\n        ln: 'SortPropertyType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'sortOrder',\n            en: 'SortOrder'\n          }]\n      }, {\n        ln: 'BinaryLogicOpType',\n        bti: '.LogicOpsType',\n        ps: [{\n            n: 'ops',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'spatialOps',\n                ti: '.SpatialOpsType'\n              }, {\n                en: 'comparisonOps',\n                ti: '.ComparisonOpsType'\n              }, {\n                en: 'logicOps',\n                ti: '.LogicOpsType'\n              }],\n            t: 'ers'\n          }]\n      }, {\n        ln: 'FeatureIdType',\n        ps: [{\n            n: 'fid',\n            rq: true,\n            an: {\n              lp: 'fid'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ComparisonOpsType'\n      }, {\n        ln: 'LogicOpsType'\n      }, {\n        ln: 'BinarySpatialOpType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: '_Geometry',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_2_1_2.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'box',\n            rq: true,\n            en: {\n              lp: 'Box',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_2_1_2.BoxType'\n          }]\n      }, {\n        ln: 'PropertyIsLikeType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'literal',\n            rq: true,\n            en: 'Literal',\n            ti: '.LiteralType'\n          }, {\n            n: 'wildCard',\n            rq: true,\n            an: {\n              lp: 'wildCard'\n            },\n            t: 'a'\n          }, {\n            n: 'singleChar',\n            rq: true,\n            an: {\n              lp: 'singleChar'\n            },\n            t: 'a'\n          }, {\n            n: 'escape',\n            rq: true,\n            an: {\n              lp: 'escape'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'BinaryOperatorType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'DistanceBufferType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: '_Geometry',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_2_1_2.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'distance',\n            rq: true,\n            en: 'Distance',\n            ti: '.DistanceType'\n          }]\n      }, {\n        ln: 'SpatialOpsType'\n      }, {\n        ln: 'BBOXType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'box',\n            rq: true,\n            en: {\n              lp: 'Box',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_2_1_2.BoxType'\n          }]\n      }, {\n        ln: 'UnaryLogicOpType',\n        bti: '.LogicOpsType',\n        ps: [{\n            n: 'comparisonOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ComparisonOpsType',\n            t: 'er'\n          }, {\n            n: 'spatialOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.SpatialOpsType',\n            t: 'er'\n          }, {\n            n: 'logicOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.LogicOpsType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'BinaryComparisonOpType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'SortOrderType',\n        vs: ['DESC', 'ASC']\n      }],\n    eis: [{\n        en: 'SortBy',\n        ti: '.SortByType'\n      }, {\n        en: 'PropertyIsNull',\n        ti: '.PropertyIsNullType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Not',\n        ti: '.UnaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'PropertyIsLessThan',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Div',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'DWithin',\n        ti: '.DistanceBufferType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Filter',\n        ti: '.FilterType'\n      }, {\n        en: 'BBOX',\n        ti: '.BBOXType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Add',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'PropertyIsGreaterThanOrEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Literal',\n        ti: '.LiteralType',\n        sh: 'expression'\n      }, {\n        en: 'Equals',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsNotEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'PropertyIsLessThanOrEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'FeatureId',\n        ti: '.FeatureIdType'\n      }, {\n        en: 'Within',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Touches',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsGreaterThan',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Contains',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Function',\n        ti: '.FunctionType',\n        sh: 'expression'\n      }, {\n        en: 'logicOps',\n        ti: '.LogicOpsType'\n      }, {\n        en: 'spatialOps',\n        ti: '.SpatialOpsType'\n      }, {\n        en: 'Sub',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'expression',\n        ti: '.ExpressionType'\n      }, {\n        en: 'PropertyIsBetween',\n        ti: '.PropertyIsBetweenType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Intersects',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Beyond',\n        ti: '.DistanceBufferType',\n        sh: 'spatialOps'\n      }, {\n        en: 'comparisonOps',\n        ti: '.ComparisonOpsType'\n      }, {\n        en: 'Crosses',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Mul',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'Or',\n        ti: '.BinaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'PropertyName',\n        ti: '.PropertyNameType',\n        sh: 'expression'\n      }, {\n        en: 'Disjoint',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'And',\n        ti: '.BinaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'Overlaps',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsLike',\n        ti: '.PropertyIsLikeType',\n        sh: 'comparisonOps'\n      }]\n  };\n  return {\n    Filter_1_0_0: Filter_1_0_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], Filter_1_0_0_Module_Factory);\n}\nelse {\n  var Filter_1_0_0_Module = Filter_1_0_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.Filter_1_0_0 = Filter_1_0_0_Module.Filter_1_0_0;\n  }\n  else {\n    var Filter_1_0_0 = Filter_1_0_0_Module.Filter_1_0_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/Filter_1_0_0.js\n// module id = 473\n// module chunks = 5","var GML_2_1_2_Module_Factory = function () {\n  var GML_2_1_2 = {\n    n: 'GML_2_1_2',\n    dens: 'http:\\/\\/www.opengis.net\\/gml',\n    dans: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    deps: ['XLink_1_0'],\n    tis: [{\n        ln: 'PointMemberType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'LineStringPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'MultiPolygonType',\n        bti: '.GeometryCollectionType'\n      }, {\n        ln: 'PolygonType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'outerBoundaryIs',\n            rq: true,\n            ti: '.LinearRingMemberType'\n          }, {\n            n: 'innerBoundaryIs',\n            mno: 0,\n            col: true,\n            ti: '.LinearRingMemberType'\n          }]\n      }, {\n        ln: 'BoxType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'coord',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            ti: '.CoordType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }]\n      }, {\n        ln: 'CoordinatesType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'decimal',\n            an: {\n              lp: 'decimal'\n            },\n            t: 'a'\n          }, {\n            n: 'cs',\n            an: {\n              lp: 'cs'\n            },\n            t: 'a'\n          }, {\n            n: 'ts',\n            an: {\n              lp: 'ts'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiLineStringPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'LinearRingType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'coord',\n            rq: true,\n            mno: 4,\n            col: true,\n            ti: '.CoordType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }]\n      }, {\n        ln: 'AbstractFeatureType',\n        ps: [{\n            n: 'description'\n          }, {\n            n: 'name'\n          }, {\n            n: 'boundedBy',\n            ti: '.BoundingShapeType'\n          }, {\n            n: 'fid',\n            ti: 'ID',\n            an: {\n              lp: 'fid'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeometryAssociationType',\n        ps: [{\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiLineStringType',\n        bti: '.GeometryCollectionType'\n      }, {\n        ln: 'BoundingShapeType',\n        ps: [{\n            n: 'box',\n            rq: true,\n            en: 'Box',\n            ti: '.BoxType'\n          }, {\n            n: '_null',\n            rq: true,\n            en: 'null'\n          }]\n      }, {\n        ln: 'MultiPolygonPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'MultiPointPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'PolygonMemberType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'AbstractGeometryType',\n        ps: [{\n            n: 'gid',\n            ti: 'ID',\n            an: {\n              lp: 'gid'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiPointType',\n        bti: '.GeometryCollectionType'\n      }, {\n        ln: 'FeatureAssociationType',\n        ps: [{\n            n: 'feature',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Feature',\n            ti: '.AbstractFeatureType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeometryPropertyType',\n        ps: [{\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LineStringType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'coord',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.CoordType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }]\n      }, {\n        ln: 'LineStringMemberType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'AbstractGeometryCollectionBaseType',\n        bti: '.AbstractGeometryType'\n      }, {\n        ln: 'AbstractFeatureCollectionType',\n        bti: '.AbstractFeatureCollectionBaseType',\n        ps: [{\n            n: 'featureMember',\n            mno: 0,\n            col: true,\n            ti: '.FeatureAssociationType'\n          }]\n      }, {\n        ln: 'CoordType',\n        ps: [{\n            n: 'x',\n            rq: true,\n            en: 'X',\n            ti: 'Decimal'\n          }, {\n            n: 'y',\n            en: 'Y',\n            ti: 'Decimal'\n          }, {\n            n: 'z',\n            en: 'Z',\n            ti: 'Decimal'\n          }]\n      }, {\n        ln: 'MultiGeometryPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'PointPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'AbstractFeatureCollectionBaseType',\n        bti: '.AbstractFeatureType'\n      }, {\n        ln: 'GeometryCollectionType',\n        bti: '.AbstractGeometryCollectionBaseType',\n        ps: [{\n            n: 'geometryMember',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.GeometryAssociationType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'LinearRingMemberType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'PolygonPropertyType',\n        bti: '.GeometryAssociationType'\n      }, {\n        ln: 'PointType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'coord',\n            rq: true,\n            ti: '.CoordType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'NullType',\n        vs: ['inapplicable', 'unknown', 'unavailable', 'missing']\n      }],\n    eis: [{\n        en: 'multiEdgeOf',\n        ti: '.MultiLineStringPropertyType',\n        sh: 'multiLineStringProperty'\n      }, {\n        en: 'lineStringMember',\n        ti: '.LineStringMemberType',\n        sh: 'geometryMember'\n      }, {\n        en: 'multiLineStringProperty',\n        ti: '.MultiLineStringPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: '_Geometry',\n        ti: '.AbstractGeometryType'\n      }, {\n        en: 'coverage',\n        ti: '.PolygonPropertyType',\n        sh: 'polygonProperty'\n      }, {\n        en: 'MultiLineString',\n        ti: '.MultiLineStringType',\n        sh: '_Geometry'\n      }, {\n        en: 'polygonMember',\n        ti: '.PolygonMemberType',\n        sh: 'geometryMember'\n      }, {\n        en: 'Box',\n        ti: '.BoxType'\n      }, {\n        en: 'MultiPoint',\n        ti: '.MultiPointType',\n        sh: '_Geometry'\n      }, {\n        en: 'description'\n      }, {\n        en: 'lineStringProperty',\n        ti: '.LineStringPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'MultiGeometry',\n        ti: '.GeometryCollectionType',\n        sh: '_Geometry'\n      }, {\n        en: 'polygonProperty',\n        ti: '.PolygonPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'LinearRing',\n        ti: '.LinearRingType',\n        sh: '_Geometry'\n      }, {\n        en: 'pointProperty',\n        ti: '.PointPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'centerOf',\n        ti: '.PointPropertyType',\n        sh: 'pointProperty'\n      }, {\n        en: '_FeatureCollection',\n        ti: '.AbstractFeatureCollectionType',\n        sh: '_Feature'\n      }, {\n        en: 'geometryMember',\n        ti: '.GeometryAssociationType'\n      }, {\n        en: 'coord',\n        ti: '.CoordType'\n      }, {\n        en: '_Feature',\n        ti: '.AbstractFeatureType'\n      }, {\n        en: 'innerBoundaryIs',\n        ti: '.LinearRingMemberType'\n      }, {\n        en: 'geometryProperty',\n        ti: '.GeometryAssociationType'\n      }, {\n        en: '_geometryProperty',\n        ti: '.GeometryAssociationType'\n      }, {\n        en: 'multiCenterLineOf',\n        ti: '.MultiLineStringPropertyType',\n        sh: 'multiLineStringProperty'\n      }, {\n        en: 'Polygon',\n        ti: '.PolygonType',\n        sh: '_Geometry'\n      }, {\n        en: 'outerBoundaryIs',\n        ti: '.LinearRingMemberType'\n      }, {\n        en: 'multiExtentOf',\n        ti: '.MultiPolygonPropertyType',\n        sh: 'multiPolygonProperty'\n      }, {\n        en: 'LineString',\n        ti: '.LineStringType',\n        sh: '_Geometry'\n      }, {\n        en: 'multiGeometryProperty',\n        ti: '.MultiGeometryPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'multiPosition',\n        ti: '.MultiPointPropertyType',\n        sh: 'multiPointProperty'\n      }, {\n        en: 'multiLocation',\n        ti: '.MultiPointPropertyType',\n        sh: 'multiPointProperty'\n      }, {\n        en: 'edgeOf',\n        ti: '.LineStringPropertyType',\n        sh: 'lineStringProperty'\n      }, {\n        en: '_GeometryCollection',\n        ti: '.GeometryCollectionType',\n        sh: '_Geometry'\n      }, {\n        en: 'coordinates',\n        ti: '.CoordinatesType'\n      }, {\n        en: 'extentOf',\n        ti: '.PolygonPropertyType',\n        sh: 'polygonProperty'\n      }, {\n        en: 'MultiPolygon',\n        ti: '.MultiPolygonType',\n        sh: '_Geometry'\n      }, {\n        en: 'Point',\n        ti: '.PointType',\n        sh: '_Geometry'\n      }, {\n        en: 'multiPointProperty',\n        ti: '.MultiPointPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'multiPolygonProperty',\n        ti: '.MultiPolygonPropertyType',\n        sh: '_geometryProperty'\n      }, {\n        en: 'name'\n      }, {\n        en: 'location',\n        ti: '.PointPropertyType',\n        sh: 'pointProperty'\n      }, {\n        en: 'pointMember',\n        ti: '.PointMemberType',\n        sh: 'geometryMember'\n      }, {\n        en: 'boundedBy',\n        ti: '.BoundingShapeType'\n      }, {\n        en: 'featureMember',\n        ti: '.FeatureAssociationType'\n      }, {\n        en: 'multiCoverage',\n        ti: '.MultiPolygonPropertyType',\n        sh: 'multiPolygonProperty'\n      }, {\n        en: 'multiCenterOf',\n        ti: '.MultiPointPropertyType',\n        sh: 'multiPointProperty'\n      }, {\n        en: 'position',\n        ti: '.PointPropertyType',\n        sh: 'pointProperty'\n      }, {\n        en: 'centerLineOf',\n        ti: '.LineStringPropertyType',\n        sh: 'lineStringProperty'\n      }]\n  };\n  return {\n    GML_2_1_2: GML_2_1_2\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], GML_2_1_2_Module_Factory);\n}\nelse {\n  var GML_2_1_2_Module = GML_2_1_2_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.GML_2_1_2 = GML_2_1_2_Module.GML_2_1_2;\n  }\n  else {\n    var GML_2_1_2 = GML_2_1_2_Module.GML_2_1_2;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/GML_2_1_2.js\n// module id = 475\n// module chunks = 5","var SLD_1_0_0_GeoServer_Module_Factory = function () {\n  var SLD_1_0_0 = {\n    n: 'SLD_1_0_0',\n    dens: 'http:\\/\\/www.opengis.net\\/sld',\n    deps: ['Filter_1_0_0', 'XLink_1_0'],\n    tis: [{\n        ln: 'AVERAGE',\n        tn: null\n      }, {\n        ln: 'LabelPlacement',\n        tn: null,\n        ps: [{\n            n: 'pointPlacement',\n            rq: true,\n            en: 'PointPlacement',\n            ti: '.PointPlacement'\n          }, {\n            n: 'linePlacement',\n            rq: true,\n            en: 'LinePlacement',\n            ti: '.LinePlacement'\n          }]\n      }, {\n        ln: 'RANDOM',\n        tn: null\n      }, {\n        ln: 'PointPlacement',\n        tn: null,\n        ps: [{\n            n: 'anchorPoint',\n            en: 'AnchorPoint',\n            ti: '.AnchorPoint'\n          }, {\n            n: 'displacement',\n            en: 'Displacement',\n            ti: '.Displacement'\n          }, {\n            n: 'rotation',\n            en: 'Rotation',\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'Normalize',\n        tn: null\n      }, {\n        ln: 'NamedStyle',\n        tn: null,\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name'\n          }]\n      }, {\n        ln: 'OnlineResource',\n        tn: null,\n        ps: [{\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            an: {\n              lp: 'type',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'href',\n            an: {\n              lp: 'href',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'role',\n            an: {\n              lp: 'role',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            an: {\n              lp: 'arcrole',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'title',\n            an: {\n              lp: 'title',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            an: {\n              lp: 'show',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            an: {\n              lp: 'actuate',\n              ns: 'http:\\/\\/www.w3.org\\/1999\\/xlink'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LineSymbolizer',\n        tn: null,\n        bti: '.SymbolizerType',\n        ps: [{\n            n: 'geometry',\n            en: 'Geometry',\n            ti: '.Geometry'\n          }, {\n            n: 'stroke',\n            en: 'Stroke',\n            ti: '.Stroke'\n          }]\n      }, {\n        ln: 'FeatureTypeConstraint',\n        tn: null,\n        ps: [{\n            n: 'featureTypeName',\n            en: 'FeatureTypeName'\n          }, {\n            n: 'filter',\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.FilterType'\n          }, {\n            n: 'extent',\n            mno: 0,\n            col: true,\n            en: 'Extent',\n            ti: '.Extent'\n          }]\n      }, {\n        ln: 'Transformation',\n        tn: null,\n        ps: [{\n            n: 'function',\n            rq: true,\n            en: {\n              lp: 'Function',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.FunctionType'\n          }]\n      }, {\n        ln: 'TextSymbolizer',\n        tn: null,\n        bti: '.SymbolizerType',\n        ps: [{\n            n: 'geometry',\n            en: 'Geometry',\n            ti: '.Geometry'\n          }, {\n            n: 'label',\n            en: 'Label',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'font',\n            en: 'Font',\n            ti: '.Font'\n          }, {\n            n: 'labelPlacement',\n            en: 'LabelPlacement',\n            ti: '.LabelPlacement'\n          }, {\n            n: 'halo',\n            en: 'Halo',\n            ti: '.Halo'\n          }, {\n            n: 'fill',\n            en: 'Fill',\n            ti: '.Fill'\n          }, {\n            n: 'graphic',\n            en: 'Graphic',\n            ti: '.Graphic'\n          }, {\n            n: 'priority',\n            en: 'Priority',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'vendorOption',\n            mno: 0,\n            col: true,\n            en: 'VendorOption',\n            ti: '.VendorOption'\n          }]\n      }, {\n        ln: 'Halo',\n        tn: null,\n        ps: [{\n            n: 'radius',\n            en: 'Radius',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'fill',\n            en: 'Fill',\n            ti: '.Fill'\n          }]\n      }, {\n        ln: 'ElseFilter',\n        tn: null\n      }, {\n        ln: 'FeatureTypeStyle',\n        tn: null,\n        ps: [{\n            n: 'name',\n            en: 'Name'\n          }, {\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'featureTypeName',\n            en: 'FeatureTypeName'\n          }, {\n            n: 'semanticTypeIdentifier',\n            mno: 0,\n            col: true,\n            en: 'SemanticTypeIdentifier'\n          }, {\n            n: 'transformation',\n            en: 'Transformation',\n            ti: '.Transformation'\n          }, {\n            n: 'rule',\n            rq: true,\n            col: true,\n            en: 'Rule',\n            ti: '.Rule'\n          }, {\n            n: 'vendorOption',\n            mno: 0,\n            col: true,\n            en: 'VendorOption',\n            ti: '.VendorOption'\n          }]\n      }, {\n        ln: 'PolygonSymbolizer',\n        tn: null,\n        bti: '.SymbolizerType',\n        ps: [{\n            n: 'geometry',\n            en: 'Geometry',\n            ti: '.Geometry'\n          }, {\n            n: 'fill',\n            en: 'Fill',\n            ti: '.Fill'\n          }, {\n            n: 'stroke',\n            en: 'Stroke',\n            ti: '.Stroke'\n          }]\n      }, {\n        ln: 'EARLIESTONTOP',\n        tn: null\n      }, {\n        ln: 'ParameterValueType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            en: {\n              lp: 'expression',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'RasterSymbolizer',\n        tn: null,\n        bti: '.SymbolizerType',\n        ps: [{\n            n: 'geometry',\n            en: 'Geometry',\n            ti: '.Geometry'\n          }, {\n            n: 'opacity',\n            en: 'Opacity',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'channelSelection',\n            en: 'ChannelSelection',\n            ti: '.ChannelSelection'\n          }, {\n            n: 'overlapBehavior',\n            en: 'OverlapBehavior',\n            ti: '.OverlapBehavior'\n          }, {\n            n: 'colorMap',\n            en: 'ColorMap',\n            ti: '.ColorMap'\n          }, {\n            n: 'contrastEnhancement',\n            en: 'ContrastEnhancement',\n            ti: '.ContrastEnhancement'\n          }, {\n            n: 'shadedRelief',\n            en: 'ShadedRelief',\n            ti: '.ShadedRelief'\n          }, {\n            n: 'imageOutline',\n            en: 'ImageOutline',\n            ti: '.ImageOutline'\n          }]\n      }, {\n        ln: 'UserLayer',\n        tn: null,\n        ps: [{\n            n: 'name',\n            en: 'Name'\n          }, {\n            n: 'inlineFeature',\n            rq: true,\n            en: 'InlineFeature',\n            ti: '.InlineFeature'\n          }, {\n            n: 'remoteOWS',\n            en: 'RemoteOWS',\n            ti: '.RemoteOWS'\n          }, {\n            n: 'layerFeatureConstraints',\n            rq: true,\n            en: 'LayerFeatureConstraints',\n            ti: '.LayerFeatureConstraints'\n          }, {\n            n: 'userStyle',\n            rq: true,\n            col: true,\n            en: 'UserStyle',\n            ti: '.UserStyle'\n          }]\n      }, {\n        ln: 'SelectedChannelType',\n        ps: [{\n            n: 'sourceChannelName',\n            rq: true,\n            en: 'SourceChannelName'\n          }, {\n            n: 'contrastEnhancement',\n            en: 'ContrastEnhancement',\n            ti: '.ContrastEnhancement'\n          }]\n      }, {\n        ln: 'VendorOption',\n        tn: null,\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'name',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OverlapBehavior',\n        tn: null,\n        ps: [{\n            n: 'latestontop',\n            rq: true,\n            en: 'LATEST_ON_TOP',\n            ti: '.LATESTONTOP'\n          }, {\n            n: 'earliestontop',\n            rq: true,\n            en: 'EARLIEST_ON_TOP',\n            ti: '.EARLIESTONTOP'\n          }, {\n            n: 'average',\n            rq: true,\n            en: 'AVERAGE',\n            ti: '.AVERAGE'\n          }, {\n            n: 'random',\n            rq: true,\n            en: 'RANDOM',\n            ti: '.RANDOM'\n          }]\n      }, {\n        ln: 'Graphic',\n        tn: null,\n        ps: [{\n            n: 'externalGraphicOrMark',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'ExternalGraphic',\n                ti: '.ExternalGraphic'\n              }, {\n                en: 'Mark',\n                ti: '.Mark'\n              }],\n            t: 'es'\n          }, {\n            n: 'opacity',\n            en: 'Opacity',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'size',\n            en: 'Size',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'rotation',\n            en: 'Rotation',\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'UserStyle',\n        tn: null,\n        ps: [{\n            n: 'name',\n            en: 'Name'\n          }, {\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'isDefault',\n            en: 'IsDefault'\n          }, {\n            n: 'featureTypeStyle',\n            rq: true,\n            col: true,\n            en: 'FeatureTypeStyle',\n            ti: '.FeatureTypeStyle'\n          }]\n      }, {\n        ln: 'InlineFeature',\n        tn: null,\n        ps: [{\n            n: 'any',\n            mno: 0,\n            col: true,\n            mx: false,\n            t: 'ae'\n          }]\n      }, {\n        ln: 'Mark',\n        tn: null,\n        ps: [{\n            n: 'wellKnownName',\n            en: 'WellKnownName',\n            ti: '.WellKnownName'\n          }, {\n            n: 'fill',\n            en: 'Fill',\n            ti: '.Fill'\n          }, {\n            n: 'stroke',\n            en: 'Stroke',\n            ti: '.Stroke'\n          }]\n      }, {\n        ln: 'ContrastEnhancement',\n        tn: null,\n        ps: [{\n            n: 'normalize',\n            rq: true,\n            en: 'Normalize',\n            ti: '.Normalize'\n          }, {\n            n: 'histogram',\n            rq: true,\n            en: 'Histogram',\n            ti: '.Histogram'\n          }, {\n            n: 'gammaValue',\n            en: 'GammaValue',\n            ti: 'Double'\n          }]\n      }, {\n        ln: 'ExternalGraphic',\n        tn: null,\n        ps: [{\n            n: 'onlineResource',\n            rq: true,\n            en: 'OnlineResource',\n            ti: '.OnlineResource'\n          }, {\n            n: 'format',\n            rq: true,\n            en: 'Format'\n          }]\n      }, {\n        ln: 'Histogram',\n        tn: null\n      }, {\n        ln: 'ColorMapEntry',\n        tn: null,\n        ps: [{\n            n: 'color',\n            rq: true,\n            an: {\n              lp: 'color'\n            },\n            t: 'a'\n          }, {\n            n: 'opacity',\n            ti: 'Double',\n            an: {\n              lp: 'opacity'\n            },\n            t: 'a'\n          }, {\n            n: 'quantity',\n            ti: 'Double',\n            an: {\n              lp: 'quantity'\n            },\n            t: 'a'\n          }, {\n            n: 'label',\n            an: {\n              lp: 'label'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PointSymbolizer',\n        tn: null,\n        bti: '.SymbolizerType',\n        ps: [{\n            n: 'geometry',\n            en: 'Geometry',\n            ti: '.Geometry'\n          }, {\n            n: 'graphic',\n            en: 'Graphic',\n            ti: '.Graphic'\n          }]\n      }, {\n        ln: 'Font',\n        tn: null,\n        ps: [{\n            n: 'cssParameter',\n            mno: 0,\n            col: true,\n            en: 'CssParameter',\n            ti: '.CssParameter'\n          }]\n      }, {\n        ln: 'LegendGraphic',\n        tn: null,\n        ps: [{\n            n: 'graphic',\n            rq: true,\n            en: 'Graphic',\n            ti: '.Graphic'\n          }]\n      }, {\n        ln: 'Stroke',\n        tn: null,\n        ps: [{\n            n: 'graphicFill',\n            rq: true,\n            en: 'GraphicFill',\n            ti: '.GraphicFill'\n          }, {\n            n: 'graphicStroke',\n            rq: true,\n            en: 'GraphicStroke',\n            ti: '.GraphicStroke'\n          }, {\n            n: 'cssParameter',\n            mno: 0,\n            col: true,\n            en: 'CssParameter',\n            ti: '.CssParameter'\n          }]\n      }, {\n        ln: 'ImageOutline',\n        tn: null,\n        ps: [{\n            n: 'lineSymbolizer',\n            rq: true,\n            en: 'LineSymbolizer',\n            ti: '.LineSymbolizer'\n          }, {\n            n: 'polygonSymbolizer',\n            rq: true,\n            en: 'PolygonSymbolizer',\n            ti: '.PolygonSymbolizer'\n          }]\n      }, {\n        ln: 'GraphicFill',\n        tn: null,\n        ps: [{\n            n: 'graphic',\n            rq: true,\n            en: 'Graphic',\n            ti: '.Graphic'\n          }]\n      }, {\n        ln: 'Rule',\n        tn: null,\n        ps: [{\n            n: 'name',\n            en: 'Name'\n          }, {\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'legendGraphic',\n            en: 'LegendGraphic',\n            ti: '.LegendGraphic'\n          }, {\n            n: 'filter',\n            rq: true,\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.FilterType'\n          }, {\n            n: 'elseFilter',\n            rq: true,\n            en: 'ElseFilter',\n            ti: '.ElseFilter'\n          }, {\n            n: 'minScaleDenominator',\n            en: 'MinScaleDenominator',\n            ti: 'Double'\n          }, {\n            n: 'maxScaleDenominator',\n            en: 'MaxScaleDenominator',\n            ti: 'Double'\n          }, {\n            n: 'symbolizer',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            en: 'Symbolizer',\n            ti: '.SymbolizerType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'AnchorPoint',\n        tn: null,\n        ps: [{\n            n: 'anchorPointX',\n            rq: true,\n            en: 'AnchorPointX',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'anchorPointY',\n            rq: true,\n            en: 'AnchorPointY',\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'ColorMap',\n        tn: null,\n        ps: [{\n            n: 'colorMapEntry',\n            mno: 0,\n            col: true,\n            en: 'ColorMapEntry',\n            ti: '.ColorMapEntry'\n          }, {\n            n: 'type',\n            an: {\n              lp: 'type'\n            },\n            t: 'a'\n          }, {\n            n: 'extended',\n            ti: 'Boolean',\n            an: {\n              lp: 'extended'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LATESTONTOP',\n        tn: null\n      }, {\n        ln: 'SymbolizerType',\n        ps: [{\n            n: 'uom',\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'RemoteOWS',\n        tn: null,\n        ps: [{\n            n: 'service',\n            rq: true,\n            en: 'Service'\n          }, {\n            n: 'onlineResource',\n            rq: true,\n            en: 'OnlineResource',\n            ti: '.OnlineResource'\n          }]\n      }, {\n        ln: 'WellKnownName',\n        tn: null,\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            en: {\n              lp: 'expression',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'ChannelSelection',\n        tn: null,\n        ps: [{\n            n: 'redChannel',\n            rq: true,\n            en: 'RedChannel',\n            ti: '.SelectedChannelType'\n          }, {\n            n: 'greenChannel',\n            rq: true,\n            en: 'GreenChannel',\n            ti: '.SelectedChannelType'\n          }, {\n            n: 'blueChannel',\n            rq: true,\n            en: 'BlueChannel',\n            ti: '.SelectedChannelType'\n          }, {\n            n: 'grayChannel',\n            rq: true,\n            en: 'GrayChannel',\n            ti: '.SelectedChannelType'\n          }]\n      }, {\n        ln: 'CssParameter',\n        tn: null,\n        bti: '.ParameterValueType',\n        ps: [{\n            n: 'name',\n            rq: true,\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LinePlacement',\n        tn: null,\n        ps: [{\n            n: 'perpendicularOffset',\n            en: 'PerpendicularOffset',\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'GraphicStroke',\n        tn: null,\n        ps: [{\n            n: 'graphic',\n            rq: true,\n            en: 'Graphic',\n            ti: '.Graphic'\n          }]\n      }, {\n        ln: 'StyledLayerDescriptor',\n        tn: null,\n        ps: [{\n            n: 'name',\n            en: 'Name'\n          }, {\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'namedLayerOrUserLayer',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'NamedLayer',\n                ti: '.NamedLayer'\n              }, {\n                en: 'UserLayer',\n                ti: '.UserLayer'\n              }],\n            t: 'es'\n          }, {\n            n: 'version',\n            rq: true,\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Extent',\n        tn: null,\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name'\n          }, {\n            n: 'value',\n            rq: true,\n            en: 'Value'\n          }]\n      }, {\n        ln: 'NamedLayer',\n        tn: null,\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name'\n          }, {\n            n: 'layerFeatureConstraints',\n            en: 'LayerFeatureConstraints',\n            ti: '.LayerFeatureConstraints'\n          }, {\n            n: 'namedStyleOrUserStyle',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'NamedStyle',\n                ti: '.NamedStyle'\n              }, {\n                en: 'UserStyle',\n                ti: '.UserStyle'\n              }],\n            t: 'es'\n          }]\n      }, {\n        ln: 'Displacement',\n        tn: null,\n        ps: [{\n            n: 'displacementX',\n            rq: true,\n            en: 'DisplacementX',\n            ti: '.ParameterValueType'\n          }, {\n            n: 'displacementY',\n            rq: true,\n            en: 'DisplacementY',\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'LayerFeatureConstraints',\n        tn: null,\n        ps: [{\n            n: 'featureTypeConstraint',\n            rq: true,\n            col: true,\n            en: 'FeatureTypeConstraint',\n            ti: '.FeatureTypeConstraint'\n          }]\n      }, {\n        ln: 'Geometry',\n        tn: null,\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: 'expression',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_0_0.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'Fill',\n        tn: null,\n        ps: [{\n            n: 'graphicFill',\n            en: 'GraphicFill',\n            ti: '.GraphicFill'\n          }, {\n            n: 'cssParameter',\n            mno: 0,\n            col: true,\n            en: 'CssParameter',\n            ti: '.CssParameter'\n          }]\n      }, {\n        ln: 'ShadedRelief',\n        tn: null,\n        ps: [{\n            n: 'brightnessOnly',\n            en: 'BrightnessOnly',\n            ti: 'Boolean'\n          }, {\n            n: 'reliefFactor',\n            en: 'ReliefFactor',\n            ti: 'Double'\n          }]\n      }],\n    eis: [{\n        en: 'Fill',\n        ti: '.Fill'\n      }, {\n        en: 'LabelPlacement',\n        ti: '.LabelPlacement'\n      }, {\n        en: 'CssParameter',\n        ti: '.CssParameter'\n      }, {\n        en: 'Displacement',\n        ti: '.Displacement'\n      }, {\n        en: 'WellKnownName',\n        ti: '.WellKnownName'\n      }, {\n        en: 'StyledLayerDescriptor',\n        ti: '.StyledLayerDescriptor'\n      }, {\n        en: 'UserLayer',\n        ti: '.UserLayer'\n      }, {\n        en: 'FeatureTypeConstraint',\n        ti: '.FeatureTypeConstraint'\n      }, {\n        en: 'GraphicStroke',\n        ti: '.GraphicStroke'\n      }, {\n        en: 'Size',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'Rule',\n        ti: '.Rule'\n      }, {\n        en: 'BrightnessOnly',\n        ti: 'Boolean'\n      }, {\n        en: 'ColorMap',\n        ti: '.ColorMap'\n      }, {\n        en: 'PointPlacement',\n        ti: '.PointPlacement'\n      }, {\n        en: 'SourceChannelName'\n      }, {\n        en: 'Graphic',\n        ti: '.Graphic'\n      }, {\n        en: 'FeatureTypeName'\n      }, {\n        en: 'DisplacementY',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'RedChannel',\n        ti: '.SelectedChannelType'\n      }, {\n        en: 'RasterSymbolizer',\n        ti: '.RasterSymbolizer',\n        sh: 'Symbolizer'\n      }, {\n        en: 'Radius',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'Label',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'BlueChannel',\n        ti: '.SelectedChannelType'\n      }, {\n        en: 'AnchorPoint',\n        ti: '.AnchorPoint'\n      }, {\n        en: 'ImageOutline',\n        ti: '.ImageOutline'\n      }, {\n        en: 'GammaValue',\n        ti: 'Double'\n      }, {\n        en: 'DisplacementX',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'Format'\n      }, {\n        en: 'UserStyle',\n        ti: '.UserStyle'\n      }, {\n        en: 'Geometry',\n        ti: '.Geometry'\n      }, {\n        en: 'Abstract'\n      }, {\n        en: 'OverlapBehavior',\n        ti: '.OverlapBehavior'\n      }, {\n        en: 'TextSymbolizer',\n        ti: '.TextSymbolizer',\n        sh: 'Symbolizer'\n      }, {\n        en: 'LinePlacement',\n        ti: '.LinePlacement'\n      }, {\n        en: 'ReliefFactor',\n        ti: 'Double'\n      }, {\n        en: 'InlineFeature',\n        ti: '.InlineFeature'\n      }, {\n        en: 'GreenChannel',\n        ti: '.SelectedChannelType'\n      }, {\n        en: 'Rotation',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'MaxScaleDenominator',\n        ti: 'Double'\n      }, {\n        en: 'Value'\n      }, {\n        en: 'FeatureTypeStyle',\n        ti: '.FeatureTypeStyle'\n      }, {\n        en: 'Symbolizer',\n        ti: '.SymbolizerType'\n      }, {\n        en: 'ColorMapEntry',\n        ti: '.ColorMapEntry'\n      }, {\n        en: 'PointSymbolizer',\n        ti: '.PointSymbolizer',\n        sh: 'Symbolizer'\n      }, {\n        en: 'Extent',\n        ti: '.Extent'\n      }, {\n        en: 'GraphicFill',\n        ti: '.GraphicFill'\n      }, {\n        en: 'LineSymbolizer',\n        ti: '.LineSymbolizer',\n        sh: 'Symbolizer'\n      }, {\n        en: 'AnchorPointX',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'LegendGraphic',\n        ti: '.LegendGraphic'\n      }, {\n        en: 'Font',\n        ti: '.Font'\n      }, {\n        en: 'Opacity',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'NamedStyle',\n        ti: '.NamedStyle'\n      }, {\n        en: 'Transformation',\n        ti: '.Transformation'\n      }, {\n        en: 'VendorOption',\n        ti: '.VendorOption'\n      }, {\n        en: 'LayerFeatureConstraints',\n        ti: '.LayerFeatureConstraints'\n      }, {\n        en: 'EARLIEST_ON_TOP',\n        ti: '.EARLIESTONTOP'\n      }, {\n        en: 'ShadedRelief',\n        ti: '.ShadedRelief'\n      }, {\n        en: 'Histogram',\n        ti: '.Histogram'\n      }, {\n        en: 'Title'\n      }, {\n        en: 'NamedLayer',\n        ti: '.NamedLayer'\n      }, {\n        en: 'Halo',\n        ti: '.Halo'\n      }, {\n        en: 'ChannelSelection',\n        ti: '.ChannelSelection'\n      }, {\n        en: 'RANDOM',\n        ti: '.RANDOM'\n      }, {\n        en: 'OnlineResource',\n        ti: '.OnlineResource'\n      }, {\n        en: 'MinScaleDenominator',\n        ti: 'Double'\n      }, {\n        en: 'Mark',\n        ti: '.Mark'\n      }, {\n        en: 'ContrastEnhancement',\n        ti: '.ContrastEnhancement'\n      }, {\n        en: 'Normalize',\n        ti: '.Normalize'\n      }, {\n        en: 'ExternalGraphic',\n        ti: '.ExternalGraphic'\n      }, {\n        en: 'PerpendicularOffset',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'Name'\n      }, {\n        en: 'AnchorPointY',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'AVERAGE',\n        ti: '.AVERAGE'\n      }, {\n        en: 'Priority',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'ElseFilter',\n        ti: '.ElseFilter'\n      }, {\n        en: 'SemanticTypeIdentifier'\n      }, {\n        en: 'PolygonSymbolizer',\n        ti: '.PolygonSymbolizer',\n        sh: 'Symbolizer'\n      }, {\n        en: 'IsDefault'\n      }, {\n        en: 'GrayChannel',\n        ti: '.SelectedChannelType'\n      }, {\n        en: 'Service'\n      }, {\n        en: 'RemoteOWS',\n        ti: '.RemoteOWS'\n      }, {\n        en: 'LATEST_ON_TOP',\n        ti: '.LATESTONTOP'\n      }, {\n        en: 'Stroke',\n        ti: '.Stroke'\n      }]\n  };\n  return {\n    SLD_1_0_0: SLD_1_0_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], SLD_1_0_0_GeoServer_Module_Factory);\n}\nelse {\n  var SLD_1_0_0_GeoServer_Module = SLD_1_0_0_GeoServer_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.SLD_1_0_0 = SLD_1_0_0_GeoServer_Module.SLD_1_0_0;\n  }\n  else {\n    var SLD_1_0_0 = SLD_1_0_0_GeoServer_Module.SLD_1_0_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/SLD_1_0_0_GeoServer.js\n// module id = 478\n// module chunks = 5","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/requires-port/index.js\n// module id = 50\n// module chunks = 4 5 6","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  loc = loc || global.location || {};\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n      url.pathname = value.length && value.charAt(0) !== '/' ? '/' + value : value;\n\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url-parse/index.js\n// module id = 51\n// module chunks = 4 5 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/identify/style.css\n// module id = 596\n// module chunks = 5","import IdentifyWidget from './components/identify/IdentifyWidget.jsx';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/identify-widget.jsx","var _jsonix_factory = function(_jsonix_xmldom, _jsonix_xmlhttprequest, _jsonix_fs)\r\n{\r\n\t// Complete Jsonix script is included below \nvar Jsonix = {\r\n\tsingleFile : true\r\n};\nJsonix.Util = {};\r\n\r\nJsonix.Util.extend = function(destination, source) {\r\n\tdestination = destination || {};\r\n\tif (source) {\r\n\t\t/*jslint forin: true */\r\n\t\tfor ( var property in source) {\r\n\t\t\tvar value = source[property];\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tdestination[property] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * IE doesn't include the toString property when iterating over an\r\n\t\t * object's properties with the for(property in object) syntax.\r\n\t\t * Explicitly check if the source has its own toString property.\r\n\t\t */\r\n\r\n\t\t/*\r\n\t\t * FF/Windows < 2.0.0.13 reports \"Illegal operation on WrappedNative\r\n\t\t * prototype object\" when calling hawOwnProperty if the source object is\r\n\t\t * an instance of window.Event.\r\n\t\t */\r\n\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tsourceIsEvt = typeof window !== 'undefined' && window !== null && typeof window.Event === \"function\" && source instanceof window.Event;\r\n\r\n\t\tif (!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {\r\n\t\t\tdestination.toString = source.toString;\r\n\t\t}\r\n\t}\r\n\treturn destination;\r\n};\nJsonix.Class = function() {\r\n\tvar Class = function() {\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t};\r\n\tvar extended = {};\r\n\tvar empty = function() {\r\n\t};\r\n\tvar parent, initialize, Type;\r\n\tfor (var i = 0, len = arguments.length; i < len; ++i) {\r\n\t\tType = arguments[i];\r\n\t\tif (typeof Type == \"function\") {\r\n\t\t\t// make the class passed as the first argument the superclass\r\n\t\t\tif (i === 0 && len > 1) {\r\n\t\t\t\tinitialize = Type.prototype.initialize;\r\n\t\t\t\t// replace the initialize method with an empty function,\r\n\t\t\t\t// because we do not want to create a real instance here\r\n\t\t\t\tType.prototype.initialize = empty;\r\n\t\t\t\t// the line below makes sure that the new class has a\r\n\t\t\t\t// superclass\r\n\t\t\t\textended = new Type();\r\n\t\t\t\t// restore the original initialize method\r\n\t\t\t\tif (initialize === undefined) {\r\n\t\t\t\t\tdelete Type.prototype.initialize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tType.prototype.initialize = initialize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// get the prototype of the superclass\r\n\t\t\tparent = Type.prototype;\r\n\t\t} else {\r\n\t\t\t// in this case we're extending with the prototype\r\n\t\t\tparent = Type;\r\n\t\t}\r\n\t\tJsonix.Util.extend(extended, parent);\r\n\t}\r\n\tClass.prototype = extended;\r\n\treturn Class;\r\n};\r\n\nJsonix.XML = {\r\n\t\tXMLNS_NS : 'http://www.w3.org/2000/xmlns/',\r\n\t\tXMLNS_P : 'xmlns'\r\n};\r\n\r\n\nJsonix.DOM = {\r\n\tisDomImplementationAvailable : function () {\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t} else if (typeof document !== 'undefined' && Jsonix.Util.Type.exists(document.implementation) && Jsonix.Util.Type.isFunction(document.implementation.createDocument)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tcreateDocument : function() {\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn new (_jsonix_xmldom.DOMImplementation)().createDocument();\r\n\t\t} else if (typeof document !== 'undefined' && Jsonix.Util.Type.exists(document.implementation) && Jsonix.Util.Type.isFunction(document.implementation.createDocument)) {\r\n\t\t\treturn document.implementation.createDocument('', '', null);\r\n\t\t} else if (typeof ActiveXObject !== 'undefined') {\r\n\t\t\treturn new ActiveXObject('MSXML2.DOMDocument');\r\n\t\t} else {\r\n\t\t\tthrow new Error('Error created the DOM document.');\r\n\t\t}\r\n\t},\r\n\tserialize : function(node) {\r\n\t\tJsonix.Util.Ensure.ensureExists(node);\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn (new (_jsonix_xmldom).XMLSerializer()).serializeToString(node);\r\n\t\t} else if (Jsonix.Util.Type.exists(XMLSerializer)) {\r\n\t\t\treturn (new XMLSerializer()).serializeToString(node);\r\n\t\t} else if (Jsonix.Util.Type.exists(node.xml)) {\r\n\t\t\treturn node.xml;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Could not serialize the node, neither XMLSerializer nor the [xml] property were found.');\r\n\t\t}\r\n\t},\r\n\tparse : function(text) {\r\n\t\tJsonix.Util.Ensure.ensureExists(text);\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn (new (_jsonix_xmldom).DOMParser()).parseFromString(text, 'application/xml');\r\n\t\t} else if (typeof DOMParser != 'undefined') {\r\n\t\t\treturn (new DOMParser()).parseFromString(text, 'application/xml');\r\n\t\t} else if (typeof ActiveXObject != 'undefined') {\r\n\t\t\tvar doc = Jsonix.DOM.createDocument('', '');\r\n\t\t\tdoc.loadXML(text);\r\n\t\t\treturn doc;\r\n\t\t} else {\r\n\t\t\tvar url = 'data:text/xml;charset=utf-8,' + encodeURIComponent(text);\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open('GET', url, false);\r\n\t\t\tif (request.overrideMimeType) {\r\n\t\t\t\trequest.overrideMimeType(\"text/xml\");\r\n\t\t\t}\r\n\t\t\trequest.send(null);\r\n\t\t\treturn request.responseXML;\r\n\t\t}\r\n\t},\r\n\tload : function(url, callback, options) {\r\n\r\n\t\tvar request = Jsonix.Request.INSTANCE;\r\n\r\n\t\trequest.issue(\r\n\t\t\t\t\t\turl,\r\n\t\t\t\t\t\tfunction(transport) {\r\n\t\t\t\t\t\t\tvar result;\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type.exists(transport.responseXML) && Jsonix.Util.Type.exists(transport.responseXML.documentElement)) {\r\n\t\t\t\t\t\t\t\tresult = transport.responseXML;\r\n\t\t\t\t\t\t\t} else if (Jsonix.Util.Type.isString(transport.responseText)) {\r\n\t\t\t\t\t\t\t\tresult = Jsonix.DOM.parse(transport.responseText);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Response does not have valid [responseXML] or [responseText].');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcallback(result);\r\n\r\n\t\t\t\t\t\t}, function(transport) {\r\n\t\t\t\t\t\t\tthrow new Error('Could not retrieve XML from URL [' + url\t+ '].');\r\n\r\n\t\t\t\t\t\t}, options);\r\n\t},\r\n\txlinkFixRequired : null,\r\n\tisXlinkFixRequired : function ()\r\n\t{\r\n\t\tif (Jsonix.DOM.xlinkFixRequired === null)\r\n\t\t{\r\n\t\t\tif (typeof navigator === 'undefined')\r\n\t\t\t{\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = false;\r\n\t\t\t}\r\n\t\t\telse if (!!navigator.userAgent && (/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)))\r\n\t\t\t{\r\n\t\t\t\tvar doc = Jsonix.DOM.createDocument();\r\n\t\t\t\tvar el = doc.createElement('test');\r\n\t\t\t\tel.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', 'urn:test');\r\n\t\t\t\tdoc.appendChild(el);\r\n\t\t\t\tvar testString = Jsonix.DOM.serialize(doc);\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = (testString.indexOf('xmlns:xlink') === -1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Jsonix.DOM.xlinkFixRequired;\r\n\t}\r\n};\nJsonix.Request = Jsonix\r\n\t\t.Class({\r\n\t\t\t// REWORK\r\n\t\t\tfactories : [ function() {\r\n\t\t\t\treturn new XMLHttpRequest();\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t\t}, function() {\r\n\t\t\t\t// Node.js\r\n\t\t\t\tif (typeof _jsonix_xmlhttprequest !== 'undefined')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar XMLHttpRequest = _jsonix_xmlhttprequest.XMLHttpRequest;\r\n\t\t\t\t\treturn new XMLHttpRequest();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tinitialize : function() {\r\n\t\t\t},\r\n\t\t\tissue : function(url, onSuccess, onFailure, options) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(url);\r\n\t\t\t\tif (Jsonix.Util.Type.exists(onSuccess)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(onSuccess);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonSuccess = function() {\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.exists(onFailure)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(onFailure);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonFailure = function() {\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar transport = this.createTransport();\r\n\r\n\t\t\t\tvar method = Jsonix.Util.Type.isString(options.method) ? options.method\r\n\t\t\t\t\t\t: 'GET';\r\n\t\t\t\tvar async = Jsonix.Util.Type.isBoolean(options.async) ? options.async\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\tvar proxy = Jsonix.Util.Type.isString(options.proxy) ? options.proxy\r\n\t\t\t\t\t\t: Jsonix.Request.PROXY;\r\n\r\n\t\t\t\tvar user = Jsonix.Util.Type.isString(options.user) ? options.user\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tvar password = Jsonix.Util.Type.isString(options.password) ? options.password\r\n\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isString(proxy) && (url.indexOf(\"http\") === 0)) {\r\n\t\t\t\t\turl = proxy + encodeURIComponent(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isString(user)) {\r\n\t\t\t\t\ttransport.open(method, url, async, user, password);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttransport.open(method, url, async);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(options.headers)) {\r\n\r\n\t\t\t\t\tfor ( var header in options.headers) {\r\n\t\t\t\t\t\tif (options.headers.hasOwnProperty(header)) {\r\n\t\t\t\t\t\t\ttransport.setRequestHeader(header,\r\n\t\t\t\t\t\t\t\t\toptions.headers[header]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar data = Jsonix.Util.Type.exists(options.data) ? options.data\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tif (!async) {\r\n\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\tthis.handleTransport(transport, onSuccess, onFailure);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar that = this;\r\n\t\t\t\t\tif (typeof window !== 'undefined') {\r\n\r\n\t\t\t\t\t\ttransport.onreadystatechange = function() {\r\n\t\t\t\t\t\t\tthat.handleTransport(transport, onSuccess,\r\n\t\t\t\t\t\t\t\t\tonFailure);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttransport.onreadystatechange = function() {\r\n\t\t\t\t\t\t\tthat.handleTransport(transport, onSuccess, onFailure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn transport;\r\n\r\n\t\t\t},\r\n\t\t\thandleTransport : function(transport, onSuccess, onFailure) {\r\n\t\t\t\tif (transport.readyState == 4) {\r\n\t\t\t\t\tif (!transport.status || (transport.status >= 200 && transport.status < 300)) {\r\n\t\t\t\t\t\tonSuccess(transport);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (transport.status && (transport.status < 200 || transport.status >= 300)) {\r\n\t\t\t\t\t\tonFailure(transport);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcreateTransport : function() {\r\n\t\t\t\tfor ( var index = 0, length = this.factories.length; index < length; index++) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar transport = this.factories[index]();\r\n\t\t\t\t\t\tif (transport !== null) {\r\n\t\t\t\t\t\t\treturn transport;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO log\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Could not create XML HTTP transport.');\r\n\t\t\t},\r\n\t\t\tCLASS_NAME : 'Jsonix.Request'\r\n\t\t});\r\nJsonix.Request.INSTANCE = new Jsonix.Request();\r\nJsonix.Request.PROXY = null;\nJsonix.Schema = {};\nJsonix.Model = {};\nJsonix.Util.Type = {\r\n\texists : function(value) {\r\n\t\treturn (typeof value !== 'undefined' && value !== null);\r\n\t},\r\n\tisUndefined : function(value) {\r\n\t\treturn typeof value === 'undefined';\r\n\t},\r\n\tisString : function(value) {\r\n\t\treturn typeof value === 'string';\r\n\t},\r\n\tisBoolean : function(value) {\r\n\t\treturn typeof value === 'boolean';\r\n\t},\r\n\tisObject : function(value) {\r\n\t\treturn typeof value === 'object';\r\n\t},\r\n\tisFunction : function(value) {\r\n\t\treturn typeof value === 'function';\r\n\t},\r\n\tisNumber : function(value) {\r\n\t\treturn (typeof value === 'number') && !isNaN(value);\r\n\t},\r\n\tisNumberOrNaN : function(value) {\r\n\t\treturn (value === +value) || (Object.prototype.toString.call(value) === '[object Number]');\r\n\t},\r\n\tisNaN : function(value) {\r\n\t\treturn Jsonix.Util.Type.isNumberOrNaN(value) && isNaN(value);\r\n\t},\r\n\tisArray : function(value) {\r\n\t\t// return value instanceof Array;\r\n\t\treturn !!(value && value.concat && value.unshift && !value.callee);\r\n\t},\r\n\tisDate : function(value) {\r\n\t\treturn !!(value && value.getTimezoneOffset && value.setUTCFullYear);\r\n\t},\r\n\tisRegExp : function(value) {\r\n\t\treturn !!(value && value.test && value.exec && (value.ignoreCase || value.ignoreCase === false));\r\n\t},\r\n\tisNode : function(value) {\r\n\t\treturn (typeof Node === \"object\" || typeof Node === \"function\") ? (value instanceof Node) : (value && (typeof value === \"object\") && (typeof value.nodeType === \"number\") && (typeof value.nodeName===\"string\"));\r\n\t},\r\n\tisEqual : function(a, b, report) {\r\n\t\tvar doReport = Jsonix.Util.Type.isFunction(report);\r\n\t\t// TODO rework\r\n\t\tvar _range = function(start, stop, step) {\r\n\t\t\tvar args = slice.call(arguments);\r\n\t\t\tvar solo = args.length <= 1;\r\n\t\t\tvar start_ = solo ? 0 : args[0];\r\n\t\t\tvar stop_ = solo ? args[0] : args[1];\r\n\t\t\tvar step_ = args[2] || 1;\r\n\t\t\tvar len = Math.max(Math.ceil((stop_ - start_) / step_), 0);\r\n\t\t\tvar idx = 0;\r\n\t\t\tvar range = new Array(len);\r\n\t\t\twhile (idx < len) {\r\n\t\t\t\trange[idx++] = start_;\r\n\t\t\t\tstart_ += step_;\r\n\t\t\t}\r\n\t\t\treturn range;\r\n\t\t};\r\n\r\n\t\tvar _keys = Object.keys || function(obj) {\r\n\t\t\tif (Jsonix.Util.Type.isArray(obj)) {\r\n\t\t\t\treturn _range(0, obj.length);\r\n\t\t\t}\r\n\t\t\tvar keys = [];\r\n\t\t\tfor ( var key in obj) {\r\n\t\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tkeys[keys.length] = key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t};\r\n\r\n\t\t// Check object identity.\r\n\t\tif (a === b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check if both are NaNs\r\n\t\tif (Jsonix.Util.Type.isNaN(a) && Jsonix.Util.Type.isNaN(b)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// Different types?\r\n\t\tvar atype = typeof a;\r\n\t\tvar btype = typeof b;\r\n\t\tif (atype != btype) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('Types differ [' + atype + '], [' + btype + '].');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Basic equality test (watch out for coercions).\r\n\t\tif (a == b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// One is falsy and the other truthy.\r\n\t\tif ((!a && b) || (a && !b)) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('One is falsy, the other is truthy.');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check dates' integer values.\r\n\t\tif (Jsonix.Util.Type.isDate(a) && Jsonix.Util.Type.isDate(b)) {\r\n\t\t\treturn a.getTime() === b.getTime();\r\n\t\t}\r\n\t\t// Both are NaN?\r\n\t\tif (Jsonix.Util.Type.isNaN(a) && Jsonix.Util.Type.isNaN(b)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Compare regular expressions.\r\n\t\tif (Jsonix.Util.Type.isRegExp(a) && Jsonix.Util.Type.isRegExp(b)) {\r\n\t\t\treturn a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline;\r\n\t\t}\r\n\t\t\r\n\t\tif (Jsonix.Util.Type.isNode(a) && Jsonix.Util.Type.isNode(b))\r\n\t\t{\r\n\t\t\tvar aSerialized = Jsonix.DOM.serialize(a);\r\n\t\t\tvar bSerialized = Jsonix.DOM.serialize(b);\r\n\t\t\tif (aSerialized !== bSerialized)\r\n\t\t\t{\r\n\t\t\t\tif (doReport)\r\n\t\t\t\t{\r\n\t\t\t\t\treport('Nodes differ.');\r\n\t\t\t\t\treport('A=' + aSerialized);\r\n\t\t\t\t\treport('B=' + bSerialized);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If a is not an object by this point, we can't handle it.\r\n\t\tif (atype !== 'object') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check for different array lengths before comparing contents.\r\n\t\tif (Jsonix.Util.Type.isArray(a) && (a.length !== b.length)) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\t\treport('Lengths differ.');\r\n\t\t\t\t\treport('A.length=' + a.length);\r\n\t\t\t\t\treport('B.length=' + b.length);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Nothing else worked, deep compare the contents.\r\n\t\tvar aKeys = _keys(a);\r\n\t\tvar bKeys = _keys(b);\r\n\t\t// Different object sizes?\r\n\t\tif (aKeys.length !== bKeys.length) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('Different number of properties [' + aKeys.length + '], [' + bKeys.length + '].');\r\n\t\t\t}\r\n\t\t\tfor ( var andex = 0; andex < aKeys.length; andex++) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('A [' + aKeys[andex] + ']=' + a[aKeys[andex]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor ( var bndex = 0; bndex < bKeys.length; bndex++) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('B [' + bKeys[bndex] + ']=' + b[bKeys[bndex]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Recursive comparison of contents.\r\n\t\tfor (var kndex = 0; kndex < aKeys.length; kndex++) {\r\n\t\t\tvar key = aKeys[kndex];\r\n\t\t\tif (!(key in b) || !Jsonix.Util.Type.isEqual(a[key], b[key], report)) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('One of the properties differ.');\r\n\t\t\t\t\treport('Key: [' + key + '].');\r\n\t\t\t\t\treport('Left: [' + a[key] + '].');\r\n\t\t\t\t\treport('Right: [' + b[key] + '].');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tcloneObject : function (source, target)\r\n\t{\r\n\t\ttarget = target || {};\r\n\t\tfor (var p in source)\r\n\t\t{\r\n\t\t\tif (source.hasOwnProperty(p))\r\n\t\t\t{\r\n\t\t\t\ttarget[p] = source[p];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t},\r\n\tdefaultValue : function()\r\n\t{\r\n\t\tvar args = arguments;\r\n\t\tif (args.length === 0)\r\n\t\t{\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar defaultValue = args[args.length - 1];\r\n\t\t\tvar typeOfDefaultValue = typeof defaultValue;\r\n\t\t\tfor (var index = 0; index < args.length - 1; index++)\r\n\t\t\t{\r\n\t\t\t\tvar candidateValue = args[index];\r\n\t\t\t\tif (typeof candidateValue === typeOfDefaultValue)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn candidateValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn defaultValue;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n};\nJsonix.Util.NumberUtils = {\r\n\tisInteger : function(value) {\r\n\t\treturn Jsonix.Util.Type.isNumber(value) && ((value % 1) === 0);\r\n\t}\r\n};\nJsonix.Util.StringUtils = {\r\n\ttrim : (!!String.prototype.trim) ?\r\n\tfunction(str) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\treturn str.trim();\r\n\t} :\r\n\tfunction(str) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\treturn str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n\t},\r\n\t/* isEmpty : function(str) {\r\n\t\tvar wcm = Jsonix.Util.StringUtils.whitespaceCharactersMap;\r\n\t\tfor (var index = 0; index < str.length; index++)\r\n\t\t{\r\n\t\t\tif (!wcm[str[index]])\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}, */\r\n\tisEmpty : function(str) {\r\n\t\tvar length = str.length;\r\n\t\tif (!length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var index = 0; index < length; index++)\r\n\t\t{\r\n\t\t\tvar c = str[index];\r\n\t\t\tif (c === ' ')\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse if (c > '\\u000D' && c < '\\u0085')\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse if (c < '\\u00A0')\r\n\t\t\t{\r\n\t\t\t\tif (c < '\\u0009')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (c > '\\u0085')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (c > '\\u00A0')\r\n\t\t\t{\r\n\t\t\t\tif (c < '\\u2028')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (c < '\\u180E')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u1680')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(c > '\\u1680')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (c > '\\u180E')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u2000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u200A')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (c > '\\u2029')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (c < '\\u205F')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u202F')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u202F')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (c > '\\u205F')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u3000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u3000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisNotBlank : function(str) {\r\n\t\treturn Jsonix.Util.Type.isString(str) && !Jsonix.Util.StringUtils.isEmpty(str);\r\n\t},\r\n\twhitespaceCharacters: '\\u0009\\u000A\\u000B\\u000C\\u000D \\u0085\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000',\r\n\twhitespaceCharactersMap: {\r\n\t\t'\\u0009' : true,\r\n\t\t'\\u000A' : true,\r\n\t\t'\\u000B' : true,\r\n\t\t'\\u000C' : true,\r\n\t\t'\\u000D' : true,\r\n\t\t' ' : true,\r\n\t\t'\\u0085' : true,\r\n\t\t'\\u00A0' : true,\r\n\t\t'\\u1680' : true,\r\n\t\t'\\u180E' : true,\r\n\t\t'\\u2000' : true,\r\n\t\t'\\u2001' : true,\r\n\t\t'\\u2002' : true,\r\n\t\t'\\u2003' : true,\r\n\t\t'\\u2004' : true,\r\n\t\t'\\u2005' : true,\r\n\t\t'\\u2006' : true,\r\n\t\t'\\u2007' : true,\r\n\t\t'\\u2008' : true,\r\n\t\t'\\u2009' : true,\r\n\t\t'\\u200A' : true,\r\n\t\t'\\u2028' : true,\r\n\t\t'\\u2029' : true,\r\n\t\t'\\u202F' : true,\r\n\t\t'\\u205F' : true,\r\n\t\t'\\u3000' : true\r\n\t},\r\n\tsplitBySeparatorChars : function(str, separatorChars) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\tJsonix.Util.Ensure.ensureString(separatorChars);\r\n\t\tvar len = str.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tif (separatorChars.length === 1)\r\n\t\t{\r\n\t\t\treturn str.split(separatorChars);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar list = [];\r\n\t\t\tvar sizePlus1 = 1;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar start = 0;\r\n\t\t\tvar match = false;\r\n\t\t\tvar lastMatch = false;\r\n\t\t\tvar max = -1;\r\n\t\t\tvar preserveAllTokens = false;\r\n\t\t\t// standard case\r\n\t\t\t\twhile (i < len) {\r\n\t\t\t\t\t\tif (separatorChars.indexOf(str.charAt(i)) >= 0) {\r\n\t\t\t\t\t\t\t\tif (match || preserveAllTokens) {\r\n\t\t\t\t\t\t\t\t\t\tlastMatch = true;\r\n\t\t\t\t\t\t\t\t\t\tif (sizePlus1++ == max) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = len;\r\n\t\t\t\t\t\t\t\t\t\t\t\tlastMatch = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlist.push(str.substring(start, i));\r\n\t\t\t\t\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstart = ++i;\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastMatch = false;\r\n\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (match || (preserveAllTokens && lastMatch)) {\r\n\t\t\t\t\tlist.push(str.substring(start, i));\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n};\nJsonix.Util.Ensure = {\r\n\tensureBoolean : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isBoolean(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a boolean.');\r\n\t\t}\r\n\t},\r\n\tensureString : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isString(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a string.');\r\n\t\t}\r\n\t},\r\n\tensureNumber : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumber(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a number.');\r\n\t\t}\r\n\t},\r\n\tensureNumberOrNaN : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumberOrNaN(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a number or NaN.');\r\n\t\t}\r\n\t},\r\n\tensureInteger : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumber(value)) {\r\n\t\t\tthrow new Error('Argument must be an integer, but it is not a number.');\r\n\t\t} else if (!Jsonix.Util.NumberUtils.isInteger(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an integer.');\r\n\t\t}\r\n\t},\r\n\tensureDate : function(value) {\r\n\t\tif (!(value instanceof Date)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a date.');\r\n\t\t}\r\n\t},\r\n\tensureObject : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isObject(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an object.');\r\n\t\t}\r\n\t},\r\n\tensureArray : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isArray(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an array.');\r\n\t\t}\r\n\t},\r\n\tensureFunction : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isFunction(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a function.');\r\n\t\t}\r\n\t},\r\n\tensureExists : function(value) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] does not exist.');\r\n\t\t}\r\n\t}\r\n};\nJsonix.XML.QName = Jsonix.Class({\r\n\tkey : null,\r\n\tnamespaceURI : null,\r\n\tlocalPart : null,\r\n\tprefix : null,\r\n\tstring : null,\r\n\tinitialize : function(one, two, three) {\r\n\t\tvar namespaceURI;\r\n\t\tvar localPart;\r\n\t\tvar prefix;\r\n\t\tvar key;\r\n\t\tvar string;\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(two)) {\r\n\t\t\tnamespaceURI = '';\r\n\t\t\tlocalPart = one;\r\n\t\t\tprefix = '';\r\n\t\t} else if (!Jsonix.Util.Type.exists(three)) {\r\n\t\t\tnamespaceURI = Jsonix.Util.Type.exists(one) ? one : '';\r\n\t\t\tlocalPart = two;\r\n\t\t\tvar colonPosition = two.indexOf(':');\r\n\t\t\tif (colonPosition > 0 && colonPosition < two.length) {\r\n\t\t\t\tprefix = two.substring(0, colonPosition);\r\n\t\t\t\tlocalPart = two.substring(colonPosition + 1);\r\n\t\t\t} else {\r\n\t\t\t\tprefix = '';\r\n\t\t\t\tlocalPart = two;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnamespaceURI = Jsonix.Util.Type.exists(one) ? one : '';\r\n\t\t\tlocalPart = two;\r\n\t\t\tprefix = Jsonix.Util.Type.exists(three) ? three : '';\r\n\t\t}\r\n\t\tthis.namespaceURI = namespaceURI;\r\n\t\tthis.localPart = localPart;\r\n\t\tthis.prefix = prefix;\r\n\r\n\t\tthis.key = (namespaceURI !== '' ? ('{' + namespaceURI + '}') : '') + localPart;\r\n\t\tthis.string = (namespaceURI !== '' ? ('{' + namespaceURI + '}') : '') + (prefix !== '' ? (prefix + ':') : '') + localPart;\r\n\t},\r\n\ttoString : function() {\r\n\t\treturn this.string;\r\n\t},\r\n\t// foo:bar\r\n\ttoCanonicalString: function(namespaceContext) {\r\n\t\tvar canonicalPrefix = namespaceContext ? namespaceContext.getPrefix(this.namespaceURI, this.prefix) : this.prefix;\r\n\t\treturn this.prefix + (this.prefix === '' ? '' : ':') + this.localPart;\r\n\t},\r\n\tclone : function() {\r\n\t\treturn new Jsonix.XML.QName(this.namespaceURI, this.localPart, this.prefix);\r\n\t},\r\n\tequals : function(that) {\r\n\t\tif (!that) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn (this.namespaceURI == that.namespaceURI) && (this.localPart == that.localPart);\r\n\t\t}\r\n\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.QName\"\r\n});\r\nJsonix.XML.QName.fromString = function(qNameAsString, namespaceContext, defaultNamespaceURI) {\r\n\tvar leftBracket = qNameAsString.indexOf('{');\r\n\tvar rightBracket = qNameAsString.lastIndexOf('}');\r\n\tvar namespaceURI;\r\n\tvar prefixedName;\r\n\tif ((leftBracket === 0) && (rightBracket > 0) && (rightBracket < qNameAsString.length)) {\r\n\t\tnamespaceURI = qNameAsString.substring(1, rightBracket);\r\n\t\tprefixedName = qNameAsString.substring(rightBracket + 1);\r\n\t} else {\r\n\t\tnamespaceURI = null;\r\n\t\tprefixedName = qNameAsString;\r\n\t}\r\n\tvar colonPosition = prefixedName.indexOf(':');\r\n\tvar prefix;\r\n\tvar localPart;\r\n\tif (colonPosition > 0 && colonPosition < prefixedName.length) {\r\n\t\tprefix = prefixedName.substring(0, colonPosition);\r\n\t\tlocalPart = prefixedName.substring(colonPosition + 1);\r\n\t} else {\r\n\t\tprefix = '';\r\n\t\tlocalPart = prefixedName;\r\n\t}\r\n\t// If namespace URI was not set and we have a namespace context, try to find the namespace URI via this context\r\n\tif (namespaceURI === null)\r\n\t{\r\n\t\tif (prefix === '' && Jsonix.Util.Type.isString(defaultNamespaceURI))\r\n\t\t{\r\n\t\t\tnamespaceURI = defaultNamespaceURI;\r\n\t\t}\r\n\t\telse if (namespaceContext)\r\n\t\t{\r\n\t\t\tnamespaceURI = namespaceContext.getNamespaceURI(prefix);\r\n\t\t}\r\n\t}\r\n\t// If we don't have a namespace URI, assume '' by default\r\n\t// TODO document the assumption\r\n\tif (!Jsonix.Util.Type.isString(namespaceURI))\r\n\t{\r\n\t\tnamespaceURI = defaultNamespaceURI || '';\r\n\t}\r\n\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n};\r\nJsonix.XML.QName.fromObject = function(object) {\r\n\tJsonix.Util.Ensure.ensureObject(object);\r\n\tif (object instanceof Jsonix.XML.QName || (Jsonix.Util.Type.isString(object.CLASS_NAME) && object.CLASS_NAME === 'Jsonix.XML.QName')) {\r\n\t\treturn object;\r\n\t}\r\n\tvar localPart = object.localPart||object.lp||null;\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\tvar namespaceURI = object.namespaceURI||object.ns||'';\r\n\tvar prefix = object.prefix||object.p||'';\r\n\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n};\r\nJsonix.XML.QName.fromObjectOrString = function(value, namespaceContext, defaultNamespaceURI) {\r\n\tif (Jsonix.Util.Type.isString(value))\r\n\t{\r\n\t\treturn Jsonix.XML.QName.fromString(value, namespaceContext, defaultNamespaceURI);\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn Jsonix.XML.QName.fromObject(value);\r\n\t}\r\n};\r\nJsonix.XML.QName.key = function(namespaceURI, localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\tif (namespaceURI) {\r\n\t\tvar colonPosition = localPart.indexOf(':');\r\n\t\tif (colonPosition > 0 && colonPosition < localPart.length) {\r\n\t\t\tlocalName = localPart.substring(colonPosition + 1);\r\n\t\t} else {\r\n\t\t\tlocalName = localPart;\r\n\t\t}\r\n\t\treturn '{' + namespaceURI + '}' + localName;\r\n\t} else {\r\n\t\treturn localPart;\r\n\t}\r\n};\nJsonix.XML.Calendar = Jsonix.Class({\r\n\tyear : NaN,\r\n\tmonth : NaN,\r\n\tday : NaN,\r\n\thour : NaN,\r\n\tminute : NaN,\r\n\tsecond : NaN,\r\n\tfractionalSecond : NaN,\r\n\ttimezone : NaN,\r\n\tdate : null,\r\n\tinitialize : function(data) {\r\n\t\tJsonix.Util.Ensure.ensureObject(data);\r\n\t\t// Year\r\n\t\tif (Jsonix.Util.Type.exists(data.year)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.year);\r\n\t\t\tJsonix.XML.Calendar.validateYear(data.year);\r\n\t\t\tthis.year = data.year;\r\n\t\t} else {\r\n\t\t\tthis.year = NaN;\r\n\t\t}\r\n\t\t// Month\r\n\t\tif (Jsonix.Util.Type.exists(data.month)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.month);\r\n\t\t\tJsonix.XML.Calendar.validateMonth(data.month);\r\n\t\t\tthis.month = data.month;\r\n\t\t} else {\r\n\t\t\tthis.month = NaN;\r\n\t\t}\r\n\t\t// Day\r\n\t\tif (Jsonix.Util.Type.exists(data.day)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.day);\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(data.year) && Jsonix.Util.NumberUtils.isInteger(data.month)) {\r\n\t\t\t\tJsonix.XML.Calendar.validateYearMonthDay(data.year, data.month, data.day);\r\n\t\t\t} else if (Jsonix.Util.NumberUtils.isInteger(data.month)) {\r\n\t\t\t\tJsonix.XML.Calendar.validateMonthDay(data.month, data.day);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.XML.Calendar.validateDay(data.day);\r\n\t\t\t}\r\n\t\t\tthis.day = data.day;\r\n\t\t} else {\r\n\t\t\tthis.day = NaN;\r\n\t\t}\r\n\t\t// Hour\r\n\t\tif (Jsonix.Util.Type.exists(data.hour)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.hour);\r\n\t\t\tJsonix.XML.Calendar.validateHour(data.hour);\r\n\t\t\tthis.hour = data.hour;\r\n\t\t} else {\r\n\t\t\tthis.hour = NaN;\r\n\t\t}\r\n\t\t// Minute\r\n\t\tif (Jsonix.Util.Type.exists(data.minute)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.minute);\r\n\t\t\tJsonix.XML.Calendar.validateMinute(data.minute);\r\n\t\t\tthis.minute = data.minute;\r\n\t\t} else {\r\n\t\t\tthis.minute = NaN;\r\n\t\t}\r\n\t\t// Second\r\n\t\tif (Jsonix.Util.Type.exists(data.second)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.second);\r\n\t\t\tJsonix.XML.Calendar.validateSecond(data.second);\r\n\t\t\tthis.second = data.second;\r\n\t\t} else {\r\n\t\t\tthis.second = NaN;\r\n\t\t}\r\n\t\t// Fractional second\r\n\t\tif (Jsonix.Util.Type.exists(data.fractionalSecond)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(data.fractionalSecond);\r\n\t\t\tJsonix.XML.Calendar.validateFractionalSecond(data.fractionalSecond);\r\n\t\t\tthis.fractionalSecond = data.fractionalSecond;\r\n\t\t} else {\r\n\t\t\tthis.fractionalSecond = NaN;\r\n\t\t}\r\n\t\t// Timezone\r\n\t\tif (Jsonix.Util.Type.exists(data.timezone)) {\r\n\t\t\tif (Jsonix.Util.Type.isNaN(data.timezone)) {\r\n\t\t\t\tthis.timezone = NaN;\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureInteger(data.timezone);\r\n\t\t\t\tJsonix.XML.Calendar.validateTimezone(data.timezone);\r\n\t\t\t\tthis.timezone = data.timezone;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.timezone = NaN;\r\n\t\t}\r\n\r\n\t\tvar initialDate = new Date(0);\r\n\t\tinitialDate.setUTCFullYear(this.year || 1970);\r\n\t\tinitialDate.setUTCMonth(this.month - 1 || 0);\r\n\t\tinitialDate.setUTCDate(this.day || 1);\r\n\t\tinitialDate.setUTCHours(this.hour || 0);\r\n\t\tinitialDate.setUTCMinutes(this.minute || 0);\r\n\t\tinitialDate.setUTCSeconds(this.second || 0);\r\n\t\tinitialDate.setUTCMilliseconds((this.fractionalSecond || 0) * 1000);\r\n\t\tvar timezoneOffset = -60000 * (this.timezone || 0);\r\n\t\tthis.date = new Date(initialDate.getTime() + timezoneOffset);\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Calendar\"\r\n});\r\nJsonix.XML.Calendar.MIN_TIMEZONE = -14 * 60;\r\nJsonix.XML.Calendar.MAX_TIMEZONE = 14 * 60;\r\nJsonix.XML.Calendar.DAYS_IN_MONTH = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nJsonix.XML.Calendar.fromObject = function(object) {\r\n\tJsonix.Util.Ensure.ensureObject(object);\r\n\tif (Jsonix.Util.Type.isString(object.CLASS_NAME) && object.CLASS_NAME === 'Jsonix.XML.Calendar') {\r\n\t\treturn object;\r\n\t}\r\n\treturn new Jsonix.XML.Calendar(object);\r\n};\r\nJsonix.XML.Calendar.validateYear = function(year) {\r\n\tif (year === 0) {\r\n\t\tthrow new Error('Invalid year [' + year + ']. Year must not be [0].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMonth = function(month) {\r\n\tif (month < 1 || month > 12) {\r\n\t\tthrow new Error('Invalid month [' + month + ']. Month must be in range [1, 12].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateDay = function(day) {\r\n\tif (day < 1 || day > 31) {\r\n\t\tthrow new Error('Invalid day [' + day + ']. Day must be in range [1, 31].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMonthDay = function(month, day) {\r\n\tJsonix.XML.Calendar.validateMonth(month);\r\n\tvar maxDaysInMonth = Jsonix.XML.Calendar.DAYS_IN_MONTH[month - 1];\r\n\tif (day < 1 || day > Jsonix.XML.Calendar.DAYS_IN_MONTH[month - 1]) {\r\n\t\tthrow new Error('Invalid day [' + day + ']. Day must be in range [1, ' + maxDaysInMonth + '].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateYearMonthDay = function(year, month, day) {\r\n\t// #93 TODO proper validation of 28/29 02\r\n\tJsonix.XML.Calendar.validateYear(year);\r\n\tJsonix.XML.Calendar.validateMonthDay(month, day);\r\n};\r\nJsonix.XML.Calendar.validateHour = function(hour) {\r\n\tif (hour < 0 || hour > 23) {\r\n\t\tthrow new Error('Invalid hour [' + hour + ']. Hour must be in range [0, 23].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMinute = function(minute) {\r\n\tif (minute < 0 || minute > 59) {\r\n\t\tthrow new Error('Invalid minute [' + minute + ']. Minute must be in range [0, 59].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateSecond = function(second) {\r\n\tif (second < 0 || second > 59) {\r\n\t\tthrow new Error('Invalid second [' + second + ']. Second must be in range [0, 59].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateFractionalSecond = function(fractionalSecond) {\r\n\tif (fractionalSecond < 0 || fractionalSecond > 59) {\r\n\t\tthrow new Error('Invalid fractional second [' + fractionalSecond + ']. Fractional second must be in range [0, 1).');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateTimezone = function(timezone) {\r\n\tif (timezone < Jsonix.XML.Calendar.MIN_TIMEZONE || timezone > Jsonix.XML.Calendar.MAX_TIMEZONE) {\r\n\t\tthrow new Error('Invalid timezone [' + timezone + ']. Timezone must not be in range [' + Jsonix.XML.Calendar.MIN_TIMEZONE + ', ' + Jsonix.XML.Calendar.MAX_TIMEZONE + '].');\r\n\t}\r\n};\nJsonix.XML.Input = Jsonix.Class({\r\n\troot : null,\r\n\tnode : null,\r\n\tattributes : null,\r\n\teventType : null,\r\n\tpns : null,\r\n\tinitialize : function(node) {\r\n\t\tJsonix.Util.Ensure.ensureExists(node);\r\n\t\tthis.root = node;\r\n\t\tvar rootPnsItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootPnsItem[Jsonix.XML.XMLNS_P] = Jsonix.XML.XMLNS_NS;\r\n\t\tthis.pns = [rootPnsItem];\r\n\t},\r\n\thasNext : function() {\r\n\t\t// No current node, we've not started yet\r\n\t\tif (this.node === null) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.node === this.root) {\r\n\t\t\tvar nodeType = this.node.nodeType;\r\n\t\t\t// Root node is document, last event type is END_DOCUMENT\r\n\t\t\tif (nodeType === 9 && this.eventType === 8) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Root node is element, last event type is END_ELEMENT\r\n\t\t\telse if (nodeType === 1 && this.eventType === 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tnext : function() {\r\n\t\tif (this.eventType === null) {\r\n\t\t\treturn this.enter(this.root);\r\n\t\t}\r\n\t\t// START_DOCUMENT\r\n\t\tif (this.eventType === 7) {\r\n\t\t\tvar documentElement = this.node.documentElement;\r\n\t\t\tif (documentElement) {\r\n\t\t\t\treturn this.enter(documentElement);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else if (this.eventType === 1) {\r\n\t\t\tvar firstChild = this.node.firstChild;\r\n\t\t\tif (firstChild) {\r\n\t\t\t\treturn this.enter(firstChild);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else if (this.eventType === 2) {\r\n\t\t\tvar nextSibling = this.node.nextSibling;\r\n\t\t\tif (nextSibling) {\r\n\t\t\t\treturn this.enter(nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn this.leave(this.node);\r\n\t\t}\r\n\t},\r\n\tenter : function(node) {\r\n\t\tvar nodeType = node.nodeType;\r\n\t\tthis.node = node;\r\n\t\tthis.attributes = null;\r\n\t\t// Document node\r\n\t\tif (nodeType === 1) {\r\n\t\t\t// START_ELEMENT\r\n\t\t\tthis.eventType = 1;\r\n\t\t\tthis.pushNS(node);\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 2) {\r\n\t\t\t// ATTRIBUTE\r\n\t\t\tthis.eventType = 10;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 3) {\r\n\t\t\tvar nodeValue = node.nodeValue;\r\n\t\t\tif (Jsonix.Util.StringUtils.isEmpty(nodeValue)) {\r\n\t\t\t\t// SPACE\r\n\t\t\t\tthis.eventType = 6;\r\n\t\t\t} else {\r\n\t\t\t\t// CHARACTERS\r\n\t\t\t\tthis.eventType = 4;\r\n\t\t\t}\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 4) {\r\n\t\t\t// CDATA\r\n\t\t\tthis.eventType = 12;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 5) {\r\n\t\t\t// ENTITY_REFERENCE_NODE = 5\r\n\t\t\t// ENTITY_REFERENCE\r\n\t\t\tthis.eventType = 9;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 6) {\r\n\t\t\t// ENTITY_DECLARATION\r\n\t\t\tthis.eventType = 15;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 7) {\r\n\t\t\t// PROCESSING_INSTRUCTION\r\n\t\t\tthis.eventType = 3;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 8) {\r\n\t\t\t// COMMENT\r\n\t\t\tthis.eventType = 5;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 9) {\r\n\t\t\t// START_DOCUMENT\r\n\t\t\tthis.eventType = 7;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 10) {\r\n\t\t\t// DTD\r\n\t\t\tthis.eventType = 12;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 12) {\r\n\t\t\t// NOTATION_DECLARATION\r\n\t\t\tthis.eventType = 14;\r\n\t\t\treturn this.eventType;\r\n\t\t} else {\r\n\t\t\t// DOCUMENT_FRAGMENT_NODE = 11\r\n\t\t\tthrow new Error(\"Node type [\" + nodeType + '] is not supported.');\r\n\t\t}\r\n\t},\r\n\tleave : function(node) {\r\n\t\tif (node.nodeType === 9) {\r\n\t\t\tif (this.eventType == 8) {\r\n\t\t\t\tthrow new Error(\"Invalid state.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.node = node;\r\n\t\t\t\tthis.attributes = null;\r\n\t\t\t\t// END_ELEMENT\r\n\t\t\t\tthis.eventType = 8;\r\n\t\t\t\treturn this.eventType;\r\n\t\t\t}\r\n\t\t} else if (node.nodeType === 1) {\r\n\t\t\tif (this.eventType == 2) {\r\n\t\t\t\tvar nextSibling = node.nextSibling;\r\n\t\t\t\tif (nextSibling) {\r\n\t\t\t\t\treturn this.enter(nextSibling);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.node = node;\r\n\t\t\t\tthis.attributes = null;\r\n\t\t\t\t// END_ELEMENT\r\n\t\t\t\tthis.eventType = 2;\r\n\t\t\t\tthis.popNS();\r\n\t\t\t\treturn this.eventType;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar nextSibling1 = node.nextSibling;\r\n\t\tif (nextSibling1) {\r\n\t\t\treturn this.enter(nextSibling1);\r\n\t\t} else {\r\n\t\t\tvar parentNode = node.parentNode;\r\n\t\t\tthis.node = parentNode;\r\n\t\t\tthis.attributes = null;\r\n\t\t\tif (parentNode.nodeType === 9) {\r\n\t\t\t\tthis.eventType = 8;\r\n\t\t\t} else {\r\n\t\t\t\tthis.eventType = 2;\r\n\t\t\t}\r\n\t\t\treturn this.eventType;\r\n\t\t}\r\n\t},\r\n\tgetName : function() {\r\n\t\tvar node = this.node;\r\n\t\tif (Jsonix.Util.Type.isString(node.nodeName)) {\r\n\t\t\tif (Jsonix.Util.Type.isString(node.namespaceURI)) {\r\n\t\t\t\treturn new Jsonix.XML.QName(node.namespaceURI, node.nodeName);\r\n\t\t\t} else {\r\n\t\t\t\treturn new Jsonix.XML.QName(node.nodeName);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetNameKey : function() {\r\n\t\tvar node = this.node;\r\n\t\tif (Jsonix.Util.Type.isString(node.nodeName)) {\r\n\t\t\treturn Jsonix.XML.QName.key(node.namespaceURI, node.nodeName);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetText : function() {\r\n\t\treturn this.node.nodeValue;\r\n\t},\r\n\tnextTag : function() {\r\n\t\tvar et = this.next();\r\n\t\t// TODO isWhiteSpace\r\n\t\twhile (et === 7 || et === 4 || et === 12 || et === 6 || et === 3 || et === 5) {\r\n\t\t\tet = this.next();\r\n\t\t}\r\n\t\tif (et !== 1 && et !== 2) {\r\n\t\t\t// TODO location\r\n\t\t\tthrow new Error('Expected start or end tag.');\r\n\t\t}\r\n\t\treturn et;\r\n\t},\r\n\tskipElement : function() {\r\n\t\tif (this.eventType !== Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to skip element.\");\r\n\t\t}\r\n\t\tvar numberOfOpenTags = 1;\r\n\t\tvar et;\r\n\t\tdo {\r\n\t\t\tet = this.nextTag();\r\n\t\t    numberOfOpenTags += (et === Jsonix.XML.Input.START_ELEMENT) ? 1 : -1;\r\n\t\t  } while (numberOfOpenTags > 0);\r\n\t\treturn et;\r\n\t},\t\r\n\tgetElementText : function() {\r\n\t\tif (this.eventType != 1) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read next text.\");\r\n\t\t}\r\n\t\tvar et = this.next();\r\n\t\tvar content = '';\r\n\t\twhile (et !== 2) {\r\n\t\t\tif (et === 4 || et === 12 || et === 6 || et === 9) {\r\n\t\t\t\tcontent = content + this.getText();\r\n\t\t\t} else if (et === 3 || et === 5) {\r\n\t\t\t\t// Skip PI or comment\r\n\t\t\t} else if (et === 8) {\r\n\t\t\t\t// End document\r\n\t\t\t\tthrow new Error(\"Unexpected end of document when reading element text content.\");\r\n\t\t\t} else if (et === 1) {\r\n\t\t\t\t// End element\r\n\t\t\t\t// TODO location\r\n\t\t\t\tthrow new Error(\"Element text content may not contain START_ELEMENT.\");\r\n\t\t\t} else {\r\n\t\t\t\t// TODO location\r\n\t\t\t\tthrow new Error(\"Unexpected event type [\" + et + \"].\");\r\n\t\t\t}\r\n\t\t\tet = this.next();\r\n\t\t}\r\n\t\treturn content;\r\n\t},\r\n\tretrieveElement : function () {\r\n\t\tvar element;\r\n\t\tif (this.eventType === 1) {\r\n\t\t\telement = this.node;\r\n\t\t} else if (this.eventType === 10) {\r\n\t\t\telement = this.node.parentNode;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element can only be retrieved for START_ELEMENT or ATTRIBUTE nodes.\");\r\n\t\t}\r\n\t\treturn element;\r\n\t},\r\n\tretrieveAttributes : function () {\r\n\t\tvar attributes;\r\n\t\tif (this.attributes)\r\n\t\t{\r\n\t\t\tattributes = this.attributes;\r\n\t\t} else if (this.eventType === 1) {\r\n\t\t\tattributes = this.node.attributes;\r\n\t\t\tthis.attributes = attributes;\r\n\t\t} else if (this.eventType === 10) {\r\n\t\t\tattributes = this.node.parentNode.attributes;\r\n\t\t\tthis.attributes = attributes;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Attributes can only be retrieved for START_ELEMENT or ATTRIBUTE nodes.\");\r\n\t\t}\r\n\t\treturn attributes;\r\n\t},\r\n\tgetAttributeCount : function() {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\treturn attributes.length;\r\n\t},\r\n\tgetAttributeName : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\t\tif (Jsonix.Util.Type.isString(attribute.namespaceURI)) {\r\n\t\t\treturn new Jsonix.XML.QName(attribute.namespaceURI, attribute.nodeName);\r\n\t\t} else {\r\n\t\t\treturn new Jsonix.XML.QName(attribute.nodeName);\r\n\t\t}\r\n\t},\r\n\tgetAttributeNameKey : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\r\n\t\treturn Jsonix.XML.QName.key(attribute.namespaceURI, attribute.nodeName);\r\n\t},\r\n\tgetAttributeValue : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\t\treturn attribute.value;\r\n\t},\r\n\tgetAttributeValueNS : null,\r\n\tgetAttributeValueNSViaElement : function(namespaceURI, localPart) {\r\n\t\tvar element = this.retrieveElement();\r\n\t\treturn element.getAttributeNS(namespaceURI, localPart);\r\n\t},\r\n\tgetAttributeValueNSViaAttribute : function(namespaceURI, localPart) {\r\n\t\tvar attributeNode = this.getAttributeNodeNS(namespaceURI, localPart);\r\n\t\tif (Jsonix.Util.Type.exists(attributeNode)) {\r\n\t\t\treturn attributeNode.nodeValue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetAttributeNodeNS : null,\r\n\tgetAttributeNodeNSViaElement : function(namespaceURI, localPart) {\r\n\t\tvar element = this.retrieveElement();\r\n\t\treturn element.getAttributeNodeNS(namespaceURI, localPart);\r\n\t},\r\n\tgetAttributeNodeNSViaAttributes : function(namespaceURI, localPart) {\r\n\t\tvar attributeNode = null;\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tvar potentialNode, fullName;\r\n\t\tfor (var i = 0, len = attributes.length; i < len; ++i) {\r\n\t\t\tpotentialNode = attributes[i];\r\n\t\t\tif (potentialNode.namespaceURI === namespaceURI) {\r\n\t\t\t\tfullName = (potentialNode.prefix) ? (potentialNode.prefix + ':' + localPart) : localPart;\r\n\t\t\t\tif (fullName === potentialNode.nodeName) {\r\n\t\t\t\t\tattributeNode = potentialNode;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn attributeNode;\r\n\t},\r\n\tgetElement : function() {\r\n\t\tif (this.eventType === 1 || this.eventType === 2) {\r\n\t\t\t// Go to the END_ELEMENT\r\n\t\t\tthis.eventType = 2;\r\n\t\t\treturn this.node;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT or END_ELEMENT to return current element.\");\r\n\t\t}\r\n\t},\r\n\tpushNS : function (node) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar parentPnsItem = this.pns[pindex];\r\n\t\tvar pnsItem = Jsonix.Util.Type.isObject(parentPnsItem) ? pindex : parentPnsItem;\r\n\t\tthis.pns.push(pnsItem);\r\n\t\tpindex++;\r\n\t\tvar reference = true;\r\n\t\tif (node.attributes)\r\n\t\t{\r\n\t\t\tvar attributes = node.attributes;\r\n\t\t\tvar alength = attributes.length;\r\n\t\t\tif (alength > 0)\r\n\t\t\t{\r\n\t\t\t\t// If given node has attributes\r\n\t\t\t\tfor (var aindex = 0; aindex < alength; aindex++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar attribute = attributes[aindex];\r\n\t\t\t\t\tvar attributeName = attribute.nodeName;\r\n\t\t\t\t\tvar p = null;\r\n\t\t\t\t\tvar ns = null;\r\n\t\t\t\t\tvar isNS = false;\r\n\t\t\t\t\tif (attributeName === 'xmlns')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = '';\r\n\t\t\t\t\t\tns = attribute.value;\r\n\t\t\t\t\t\tisNS = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (attributeName.substring(0, 6) === 'xmlns:')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = attributeName.substring(6);\r\n\t\t\t\t\t\tns = attribute.value;\r\n\t\t\t\t\t\tisNS = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Attribute is a namespace declaration\r\n\t\t\t\t\tif (isNS)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (reference)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpnsItem = Jsonix.Util.Type.cloneObject(this.pns[pnsItem], {});\r\n\t\t\t\t\t\t\tthis.pns[pindex] = pnsItem;\r\n\t\t\t\t\t\t\treference = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpnsItem[p] = ns;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t},\r\n\tpopNS : function () {\r\n\t\tthis.pns.pop();\r\n\t},\r\n\tgetNamespaceURI : function (p) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[pindex];\r\n\t\tpnsItem = Jsonix.Util.Type.isObject(pnsItem) ? pnsItem : this.pns[pnsItem];\r\n\t\treturn pnsItem[p];\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Input\"\r\n\r\n});\r\n\r\nJsonix.XML.Input.prototype.getAttributeValueNS = (Jsonix.DOM.isDomImplementationAvailable()) ? Jsonix.XML.Input.prototype.getAttributeValueNSViaElement : Jsonix.XML.Input.prototype.getAttributeValueNSViaAttribute;\r\nJsonix.XML.Input.prototype.getAttributeNodeNS = (Jsonix.DOM.isDomImplementationAvailable()) ? Jsonix.XML.Input.prototype.getAttributeNodeNSViaElement : Jsonix.XML.Input.prototype.getAttributeNodeNSViaAttributes;\r\n\r\nJsonix.XML.Input.START_ELEMENT = 1;\r\nJsonix.XML.Input.END_ELEMENT = 2;\r\nJsonix.XML.Input.PROCESSING_INSTRUCTION = 3;\r\nJsonix.XML.Input.CHARACTERS = 4;\r\nJsonix.XML.Input.COMMENT = 5;\r\nJsonix.XML.Input.SPACE = 6;\r\nJsonix.XML.Input.START_DOCUMENT = 7;\r\nJsonix.XML.Input.END_DOCUMENT = 8;\r\nJsonix.XML.Input.ENTITY_REFERENCE = 9;\r\nJsonix.XML.Input.ATTRIBUTE = 10;\r\nJsonix.XML.Input.DTD = 11;\r\nJsonix.XML.Input.CDATA = 12;\r\nJsonix.XML.Input.NAMESPACE = 13;\r\nJsonix.XML.Input.NOTATION_DECLARATION = 14;\r\nJsonix.XML.Input.ENTITY_DECLARATION = 15;\r\n\nJsonix.XML.Output = Jsonix.Class({\r\n\tdocument : null,\r\n\tdocumentElement : null,\r\n\tnode : null,\r\n\tnodes : null,\r\n\tnsp : null,\r\n\tpns : null,\r\n\tnamespacePrefixIndex : 0,\r\n\txmldom : null,\r\n\tinitialize : function(options) {\r\n\t\t// REWORK\r\n\t\tif (typeof ActiveXObject !== 'undefined') {\r\n\t\t\tthis.xmldom = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n\t\t} else {\r\n\t\t\tthis.xmldom = null;\r\n\t\t}\r\n\t\tthis.nodes = [];\r\n\t\tvar rootNspItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootNspItem[Jsonix.XML.XMLNS_NS] = Jsonix.XML.XMLNS_P;\r\n\t\tif (Jsonix.Util.Type.isObject(options)) {\r\n\t\t\tif (Jsonix.Util.Type.isObject(options.namespacePrefixes)) {\r\n\t\t\t\tJsonix.Util.Type.cloneObject(options.namespacePrefixes, rootNspItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.nsp = [rootNspItem];\r\n\t\tvar rootPnsItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootPnsItem[Jsonix.XML.XMLNS_P] = Jsonix.XML.XMLNS_NS;\r\n\t\tthis.pns = [rootPnsItem];\r\n\t},\r\n\tdestroy : function() {\r\n\t\tthis.xmldom = null;\r\n\t},\r\n\twriteStartDocument : function() {\r\n\t\t// TODO Check\r\n\t\tvar doc = Jsonix.DOM.createDocument();\r\n\t\tthis.document = doc;\r\n\t\treturn this.push(doc);\r\n\t},\r\n\twriteEndDocument : function() {\r\n\t\treturn this.pop();\r\n\r\n\t},\r\n\twriteStartElement : function(name) {\r\n\t\tJsonix.Util.Ensure.ensureObject(name);\r\n\t\tvar localPart = name.localPart || name.lp || null;\r\n\t\tJsonix.Util.Ensure.ensureString(localPart);\r\n\t\tvar ns = name.namespaceURI || name.ns || null;\r\n\t\tvar namespaceURI = Jsonix.Util.Type.isString(ns) ? ns : '';\r\n\r\n\t\tvar p = name.prefix || name.p;\r\n\t\tvar prefix = this.getPrefix(namespaceURI, p);\r\n\r\n\t\tvar qualifiedName = (!prefix ? localPart : prefix + ':' + localPart);\r\n\r\n\t\tvar element;\r\n\t\tif (Jsonix.Util.Type.isFunction(this.document.createElementNS))\t{\r\n\t\t\telement = this.document.createElementNS(namespaceURI, qualifiedName);\r\n\t\t}\r\n\t\telse if (this.xmldom) {\r\n\t\t\telement = this.xmldom.createNode(1, qualifiedName, namespaceURI);\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Could not create an element node.\");\r\n\t\t}\r\n\t\tthis.peek().appendChild(element);\r\n\t\tthis.push(element);\r\n\t\tthis.declareNamespace(namespaceURI, prefix);\r\n\t\tif (this.documentElement === null)\r\n\t\t{\r\n\t\t\tthis.documentElement = element;\r\n\t\t\tthis.declareNamespaces();\r\n\t\t}\r\n\t\treturn element;\r\n\t},\r\n\twriteEndElement : function() {\r\n\t\treturn this.pop();\r\n\t},\r\n\twriteCharacters : function(text) {\r\n\t\tvar node;\r\n\t\tif (Jsonix.Util.Type.isFunction(this.document.createTextNode))\t{\r\n\t\t\tnode = this.document.createTextNode(text);\r\n\t\t}\r\n\t\telse if (this.xmldom) {\r\n\t\t\tnode = this.xmldom.createTextNode(text);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Could not create a text node.\");\r\n\t\t}\r\n\t\tthis.peek().appendChild(node);\r\n\t\treturn node;\r\n\r\n\t},\r\n\twriteAttribute : function(name, value) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\tJsonix.Util.Ensure.ensureObject(name);\r\n\t\tvar localPart = name.localPart || name.lp || null;\r\n\t\tJsonix.Util.Ensure.ensureString(localPart);\r\n\t\tvar ns = name.namespaceURI || name.ns || null;\r\n\t\tvar namespaceURI = Jsonix.Util.Type.isString(ns) ? ns : '';\r\n\t\tvar p = name.prefix || name.p || null;\r\n\t\tvar prefix = this.getPrefix(namespaceURI, p);\r\n\r\n\t\tvar qualifiedName = (!prefix ? localPart : prefix + ':' + localPart);\r\n\r\n\t\tvar node = this.peek();\r\n\r\n\t\tif (namespaceURI === '') {\r\n\t\t\tnode.setAttribute(qualifiedName, value);\r\n\t\t} else {\r\n\t\t\tif (node.setAttributeNS) {\r\n\t\t\t\tnode.setAttributeNS(namespaceURI, qualifiedName, value);\r\n\t\t\t} else {\r\n\t\t\t\tif (this.xmldom) {\r\n\t\t\t\t\tvar attribute = this.document.createNode(2, qualifiedName, namespaceURI);\r\n\t\t\t\t\tattribute.nodeValue = value;\r\n\t\t\t\t\tnode.setAttributeNode(attribute);\r\n\t\t\t\t}\r\n\t\t\t\telse if (namespaceURI === Jsonix.XML.XMLNS_NS)\r\n\t\t\t\t{\r\n\t\t\t\t\t// XMLNS namespace may be processed unqualified\r\n\t\t\t\t\tnode.setAttribute(qualifiedName, value);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(\"The [setAttributeNS] method is not implemented\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.declareNamespace(namespaceURI, prefix);\r\n\t\t}\r\n\t\t\r\n\t},\r\n\twriteNode : function(node) {\r\n\t\tvar importedNode;\r\n\t\tif (Jsonix.Util.Type.exists(this.document.importNode)) {\r\n\t\t\timportedNode = this.document.importNode(node, true);\r\n\t\t} else {\r\n\t\t\timportedNode = node;\r\n\t\t}\r\n\t\tthis.peek().appendChild(importedNode);\r\n\t\treturn importedNode;\r\n\t},\r\n\tpush : function(node) {\r\n\t\tthis.nodes.push(node);\r\n\t\tthis.pushNS();\r\n\t\treturn node;\r\n\t},\r\n\tpeek : function() {\r\n\t\treturn this.nodes[this.nodes.length - 1];\r\n\t},\r\n\tpop : function() {\r\n\t\tthis.popNS();\r\n\t\tvar result = this.nodes.pop();\r\n\t\treturn result;\r\n\t},\r\n\tpushNS : function ()\r\n\t{\r\n\t\tvar nindex = this.nsp.length - 1;\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar parentNspItem = this.nsp[nindex];\r\n\t\tvar parentPnsItem = this.pns[pindex];\r\n\t\tvar nspItem = Jsonix.Util.Type.isObject(parentNspItem) ? nindex : parentNspItem;\r\n\t\tvar pnsItem = Jsonix.Util.Type.isObject(parentPnsItem) ? pindex : parentPnsItem;\r\n\t\tthis.nsp.push(nspItem);\r\n\t\tthis.pns.push(pnsItem);\r\n\t},\r\n\tpopNS : function ()\r\n\t{\r\n\t\tthis.nsp.pop();\r\n\t\tthis.pns.pop();\r\n\t},\r\n\tdeclareNamespaces : function ()\r\n\t{\r\n\t\tvar index = this.nsp.length - 1;\r\n\t\tvar nspItem = this.nsp[index];\r\n\t\tnspItem = Jsonix.Util.Type.isNumber(nspItem) ? this.nsp[nspItem] : nspItem;\r\n\t\tvar ns, p;\r\n\t\tfor (ns in nspItem)\r\n\t\t{\r\n\t\t\tif (nspItem.hasOwnProperty(ns))\r\n\t\t\t{\r\n\t\t\t\tp = nspItem[ns];\r\n\t\t\t\tthis.declareNamespace(ns, p);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeclareNamespace : function (ns, p)\r\n\t{\r\n\t\tvar index = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[index];\r\n\t\tvar reference;\r\n\t\tif (Jsonix.Util.Type.isNumber(pnsItem))\r\n\t\t{\r\n\t\t\t// Resolve the reference\r\n\t\t\treference = true;\r\n\t\t\tpnsItem = this.pns[pnsItem];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treference = false;\r\n\t\t}\r\n\t\t// If this prefix is mapped to a different namespace and must be redeclared\r\n\t\tif (pnsItem[p] !== ns)\r\n\t\t{\r\n\t\t\tif (p === '')\r\n\t\t\t{\r\n\t\t\t\tthis.writeAttribute({lp : Jsonix.XML.XMLNS_P}, ns);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.writeAttribute({ns : Jsonix.XML.XMLNS_NS, lp : p, p : Jsonix.XML.XMLNS_P}, ns);\r\n\t\t\t}\r\n\t\t\tif (reference)\r\n\t\t\t{\r\n\t\t\t\t// If this was a reference, clone it and replace the reference\r\n\t\t\t\tpnsItem = Jsonix.Util.Type.cloneObject(pnsItem, {});\r\n\t\t\t\tthis.pns[index] = pnsItem;\r\n\t\t\t}\r\n\t\t\tpnsItem[p] = ns;\r\n\t\t}\r\n\t},\r\n\tgetPrefix : function (ns, p)\r\n\t{\r\n\t\tvar index = this.nsp.length - 1;\r\n\t\tvar nspItem = this.nsp[index];\r\n\t\tvar reference;\r\n\t\tif (Jsonix.Util.Type.isNumber(nspItem))\r\n\t\t{\r\n\t\t\t// This is a reference, the item is the index of the parent item\r\n\t\t\treference = true;\r\n\t\t\tnspItem = this.nsp[nspItem];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treference = false;\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.isString(p))\r\n\t\t{\r\n\t\t\tvar oldp = nspItem[ns];\r\n\t\t\t// If prefix is already declared and equals the proposed prefix \r\n\t\t\tif (p === oldp)\r\n\t\t\t{\r\n\t\t\t\t// Nothing to do\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// If this was a reference, we have to clone it now\r\n\t\t\t\tif (reference)\r\n\t\t\t\t{\r\n\t\t\t\t\tnspItem = Jsonix.Util.Type.cloneObject(nspItem, {});\r\n\t\t\t\t\tthis.nsp[index] = nspItem;\r\n\t\t\t\t}\r\n\t\t\t\tnspItem[ns] = p;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tp = nspItem[ns];\r\n\t\t\tif (!Jsonix.Util.Type.exists(p)) {\r\n\t\t\t\tp = 'p' + (this.namespacePrefixIndex++);\r\n\t\t\t\t// If this was a reference, we have to clone it now\r\n\t\t\t\tif (reference)\r\n\t\t\t\t{\r\n\t\t\t\t\tnspItem = Jsonix.Util.Type.cloneObject(nspItem, {});\r\n\t\t\t\t\tthis.nsp[index] = nspItem;\r\n\t\t\t\t}\r\n\t\t\t\tnspItem[ns] = p;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn p;\r\n\t},\r\n\tgetNamespaceURI : function (p) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[pindex];\r\n\t\tpnsItem = Jsonix.Util.Type.isObject(pnsItem) ? pnsItem : this.pns[pnsItem];\r\n\t\treturn pnsItem[p];\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Output\"\r\n});\nJsonix.Mapping = {};\nJsonix.Mapping.Style = Jsonix.Class({\r\n\tmarshaller : null,\r\n\tunmarshaller : null,\r\n\tmodule : null,\r\n\telementInfo : null,\r\n\tclassInfo : null,\r\n\tenumLeafInfo : null,\r\n\tanyAttributePropertyInfo : null,\r\n\tanyElementPropertyInfo : null,\r\n\tattributePropertyInfo : null,\r\n\telementMapPropertyInfo : null,\r\n\telementPropertyInfo : null,\r\n\telementsPropertyInfo : null,\r\n\telementRefPropertyInfo : null,\r\n\telementRefsPropertyInfo : null,\r\n\tvaluePropertyInfo : null,\r\n\tinitialize : function() {\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style'\r\n});\r\n\r\nJsonix.Mapping.Style.STYLES = {};\nJsonix.Mapping.Styled = Jsonix.Class({\r\n\tmappingStyle : null,\r\n\tinitialize : function(options) {\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\tif (Jsonix.Util.Type.isString(options.mappingStyle)) {\r\n\t\t\t\tvar mappingStyle = Jsonix.Mapping.Style.STYLES[options.mappingStyle];\r\n\t\t\t\tif (!mappingStyle) {\r\n\t\t\t\t\tthrow new Error(\"Mapping style [\" + options.mappingStyle + \"] is not known.\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.mappingStyle = mappingStyle;\r\n\t\t\t} else if (Jsonix.Util.Type.isObject(options.mappingStyle)) {\r\n\t\t\t\tthis.mappingStyle = options.mappingStyle;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.mappingStyle) {\r\n\t\t\tthis.mappingStyle = Jsonix.Mapping.Style.STYLES.standard;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Styled'\r\n});\nJsonix.Binding = {};\nJsonix.Binding.Marshalls = {\r\n};\r\n\r\nJsonix.Binding.Marshalls.Element = Jsonix.Class({\r\n\tmarshalElement : function(value, context, output, scope) {\r\n\t\tvar elementValue = this.convertToTypedNamedValue(value, context, output, scope);\r\n\t\tvar declaredTypeInfo = elementValue.typeInfo;\r\n\t\tvar actualTypeInfo = undefined;\r\n\t\tif (context.supportXsiType && Jsonix.Util.Type.exists(elementValue.value))\r\n\t\t{\r\n\t\t\tvar typeInfoByValue = context.getTypeInfoByValue(elementValue.value);\r\n\t\t\tif (typeInfoByValue && typeInfoByValue.typeName)\r\n\t\t\t{\r\n\t\t\t\tactualTypeInfo = typeInfoByValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar typeInfo = actualTypeInfo || declaredTypeInfo;\r\n\t\tif (typeInfo) {\r\n\t\t\toutput.writeStartElement(elementValue.name);\r\n\t\t\tif (actualTypeInfo && declaredTypeInfo !== actualTypeInfo) {\r\n\t\t\t\tvar xsiTypeName = actualTypeInfo.typeName;\r\n\t\t\t\tvar xsiType = Jsonix.Schema.XSD.QName.INSTANCE.print(xsiTypeName, context, output, scope);\r\n\t\t\t\toutput.writeAttribute(Jsonix.Schema.XSI.TYPE_QNAME, xsiType);\r\n\t\t\t}\r\n\t\t\tif (Jsonix.Util.Type.exists(elementValue.value)) {\r\n\t\t\t\ttypeInfo.marshal(elementValue.value, context, output, scope);\r\n\t\t\t}\r\n\t\t\toutput.writeEndElement();\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element [\" + elementValue.name.key + \"] is not known in this context, could not determine its type.\");\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(name, context, scope) {\r\n\t\tvar elementInfo = context.getElementInfo(name, scope);\r\n\t\tif (Jsonix.Util.Type.exists(elementInfo)) {\r\n\t\t\treturn elementInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n});\r\nJsonix.Binding.Marshalls.Element.AsElementRef = Jsonix.Class({\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar elementValue = this.convertToNamedValue(value, context, output, scope);\r\n\t\treturn {\r\n\t\t\tname : elementValue.name,\r\n\t\t\tvalue : elementValue.value,\r\n\t\t\ttypeInfo : this.getTypeInfoByElementName(elementValue.name, context, scope)\r\n\t\t};\r\n\t},\r\n\tconvertToNamedValue : function(elementValue, context, output, scope) {\r\n\t\tvar name;\r\n\t\tvar value;\r\n\t\tif (Jsonix.Util.Type.exists(elementValue.name) && !Jsonix.Util.Type.isUndefined(elementValue.value)) {\r\n\t\t\tname = Jsonix.XML.QName.fromObjectOrString(elementValue.name, context);\r\n\t\t\tvalue = Jsonix.Util.Type.exists(elementValue.value) ? elementValue.value : null;\r\n\t\t\treturn {\r\n\t\t\t\tname : name,\r\n\t\t\t\tvalue : value\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tfor ( var propertyName in elementValue) {\r\n\t\t\t\tif (elementValue.hasOwnProperty(propertyName)) {\r\n\t\t\t\t\tname = Jsonix.XML.QName.fromObjectOrString(propertyName, context);\r\n\t\t\t\t\tvalue = elementValue[propertyName];\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname : name,\r\n\t\t\t\t\t\tvalue : value\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(\"Invalid element value [\" + elementValue + \"]. Element values must either have {name:'myElementName', value: elementValue} or {myElementName:elementValue} structure.\");\r\n\t}\r\n});\r\n\nJsonix.Binding.Unmarshalls = {};\r\n\r\nJsonix.Binding.Unmarshalls.WrapperElement = Jsonix.Class({\r\n\tmixed : false,\r\n\tunmarshalWrapperElement : function(context, input, scope, callback) {\r\n\t\tvar et = input.next();\r\n\t\twhile (et !== Jsonix.XML.Input.END_ELEMENT) {\r\n\t\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t\t} else\r\n\t\t\t// Characters\r\n\t\t\tif (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\t\tcallback(input.getText());\r\n\t\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t\t// Skip whitespace\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t\t}\r\n\t\t\tet = input.next();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element = Jsonix.Class({\r\n\tallowTypedObject : true,\r\n\tallowDom : false,\r\n\tunmarshalElement : function(context, input, scope, callback) {\r\n\t\tif (input.eventType != 1) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read next element.\");\r\n\t\t}\r\n\t\tvar typeInfo = this.getTypeInfoByInputElement(context, input, scope);\r\n\t\tvar name = input.getName();\r\n\t\tvar elementValue;\r\n\t\tif (this.allowTypedObject) {\r\n\t\t\tif (Jsonix.Util.Type.exists(typeInfo)) {\r\n\t\t\t\tvar value = typeInfo.unmarshal(context, input, scope);\r\n\t\t\t\tvar typedNamedValue = {\r\n\t\t\t\t\tname : name,\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t\t};\r\n\t\t\t\telementValue = this.convertFromTypedNamedValue(typedNamedValue, context, input, scope);\r\n\t\t\t} else if (this.allowDom) {\r\n\t\t\t\telementValue = input.getElement();\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Element [\" + name.toString() + \"] could not be unmarshalled as is not known in this context and the property does not allow DOM content.\");\r\n\t\t\t}\r\n\t\t} else if (this.allowDom) {\r\n\t\t\telementValue = input.getElement();\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element [\" + name.toString() + \"] could not be unmarshalled as the property neither allows typed objects nor DOM as content. This is a sign of invalid mappings, do not use [allowTypedObject : false] and [allowDom : false] at the same time.\");\r\n\t\t}\r\n\t\tcallback(elementValue);\r\n\t},\r\n\tgetTypeInfoByInputElement : function(context, input, scope) {\r\n\t\tvar xsiTypeInfo = null;\r\n\t\tif (context.supportXsiType) {\r\n\t\t\tvar xsiType = input.getAttributeValueNS(Jsonix.Schema.XSI.NAMESPACE_URI, Jsonix.Schema.XSI.TYPE);\r\n\t\t\tif (Jsonix.Util.StringUtils.isNotBlank(xsiType)) {\r\n\t\t\t\tvar xsiTypeName = Jsonix.Schema.XSD.QName.INSTANCE.parse(xsiType, context, input, scope);\r\n\t\t\t\txsiTypeInfo = context.getTypeInfoByTypeNameKey(xsiTypeName.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar name = input.getName();\r\n\t\tvar typeInfo = xsiTypeInfo ? xsiTypeInfo : this.getTypeInfoByElementName(name, context, scope);\r\n\t\treturn typeInfo;\r\n\t},\r\n\tgetTypeInfoByElementName : function(name, context, scope) {\r\n\t\tvar elementInfo = context.getElementInfo(name, scope);\r\n\t\tif (Jsonix.Util.Type.exists(elementInfo)) {\r\n\t\t\treturn elementInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element.AsElementRef = Jsonix.Class({\r\n\tconvertFromTypedNamedValue : function(typedNamedValue, context, input, scope) {\r\n\t\treturn {\r\n\t\t\tname : typedNamedValue.name,\r\n\t\t\tvalue : typedNamedValue.value\r\n\t\t};\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef = Jsonix.Class({\r\n\tconvertFromTypedNamedValue : function(typedNamedValue, context, input, scope) {\r\n\t\tvar propertyName = typedNamedValue.name.toCanonicalString(context);\r\n\t\tvar value = {};\r\n\t\tvalue[propertyName] = typedNamedValue.value;\r\n\t\treturn value;\r\n\t}\r\n});\nJsonix.Binding.Marshaller = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, {\r\n\tcontext : null,\r\n\tinitialize : function(context) {\r\n\t\tJsonix.Util.Ensure.ensureObject(context);\r\n\t\tthis.context = context;\r\n\t},\r\n\tmarshalString : function(value) {\r\n\t\tvar doc = this.marshalDocument(value);\r\n\t\tvar text = Jsonix.DOM.serialize(doc);\r\n\t\treturn text;\r\n\t},\r\n\tmarshalDocument : function(value) {\r\n\t\tvar output = new Jsonix.XML.Output({\r\n\t\t\tnamespacePrefixes : this.context.namespacePrefixes\r\n\t\t});\r\n\r\n\t\tvar doc = output.writeStartDocument();\r\n\t\tthis.marshalElement(value, this.context, output, undefined);\r\n\t\toutput.writeEndDocument();\r\n\t\treturn doc;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Binding.Marshaller'\r\n});\r\nJsonix.Binding.Marshaller.Simplified = Jsonix.Class(Jsonix.Binding.Marshaller, {\r\n\tCLASS_NAME : 'Jsonix.Binding.Marshaller.Simplified'\r\n});\nJsonix.Binding.Unmarshaller = Jsonix.Class(Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.Element.AsElementRef, {\r\n\tcontext : null,\r\n\tallowTypedObject : true,\r\n\tallowDom : false,\r\n\tinitialize : function(context) {\r\n\t\tJsonix.Util.Ensure.ensureObject(context);\r\n\t\tthis.context = context;\r\n\t},\r\n\tunmarshalString : function(text) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar doc = Jsonix.DOM.parse(text);\r\n\t\treturn this.unmarshalDocument(doc);\r\n\t},\r\n\tunmarshalURL : function(url, callback, options) {\r\n\t\tJsonix.Util.Ensure.ensureString(url);\r\n\t\tJsonix.Util.Ensure.ensureFunction(callback);\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t}\r\n\t\tthat = this;\r\n\t\tJsonix.DOM.load(url, function(doc) {\r\n\t\t\tcallback(that.unmarshalDocument(doc));\r\n\t\t}, options);\r\n\t},\r\n\tunmarshalFile : function(fileName, callback, options) {\r\n\t\tif (typeof _jsonix_fs === 'undefined') {\r\n\t\t\tthrow new Error(\"File unmarshalling is only available in environments which support file systems.\");\r\n\t\t}\r\n\t\tJsonix.Util.Ensure.ensureString(fileName);\r\n\t\tJsonix.Util.Ensure.ensureFunction(callback);\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t}\r\n\t\tthat = this;\r\n\t\tvar fs = _jsonix_fs;\r\n\t\tfs.readFile(fileName, options, function(err, data) {\r\n\t\t\tif (err) {\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tvar text = data.toString();\r\n\t\t\t\tvar doc = Jsonix.DOM.parse(text);\r\n\t\t\t\tcallback(that.unmarshalDocument(doc));\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tunmarshalDocument : function(doc, scope) {\r\n\t\tvar input = new Jsonix.XML.Input(doc);\r\n\t\tvar result = null;\r\n\t\tvar callback = function(_result) {\r\n\t\t\tresult = _result;\r\n\t\t};\r\n\t\tinput.nextTag();\r\n\t\tthis.unmarshalElement(this.context, input, scope, callback);\r\n\t\treturn result;\r\n\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Binding.Unmarshaller'\r\n});\r\nJsonix.Binding.Unmarshaller.Simplified = Jsonix.Class(Jsonix.Binding.Unmarshaller, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Binding.Unmarshaller.Simplified'\r\n});\nJsonix.Model.TypeInfo = Jsonix.Class({\r\n\tname : null,\r\n\tbaseTypeInfo : null,\r\n\tinitialize : function() {\r\n\t},\r\n\tisBasedOn : function(typeInfo) {\r\n\t\tvar currentTypeInfo = this;\r\n\t\twhile (currentTypeInfo) {\r\n\t\t\tif (typeInfo === currentTypeInfo) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcurrentTypeInfo = currentTypeInfo.baseTypeInfo;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.TypeInfo'\r\n});\nJsonix.Model.ClassInfo = Jsonix\r\n\t\t.Class(Jsonix.Model.TypeInfo, Jsonix.Mapping.Styled, {\r\n\t\t\tname : null,\r\n\t\t\tlocalName : null,\r\n\t\t\ttypeName : null,\r\n\t\t\tinstanceFactory : null,\r\n\t\t\tproperties : null,\r\n\t\t\tpropertiesMap : null,\r\n\t\t\tstructure : null,\r\n\t\t\ttargetNamespace : '',\r\n\t\t\tdefaultElementNamespaceURI : '',\r\n\t\t\tdefaultAttributeNamespaceURI : '',\r\n\t\t\tbuilt : false,\r\n\t\t\tinitialize : function(mapping, options) {\r\n\t\t\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t\t\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [options]);\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\t\tvar n = mapping.name||mapping.n||undefined;\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\t\t\tthis.name = n;\r\n\t\t\t\t\r\n\t\t\t\tvar ln = mapping.localName||mapping.ln||null;\r\n\t\t\t\tthis.localName = ln;\r\n\r\n\t\t\t\tvar dens = mapping.defaultElementNamespaceURI||mapping.dens||mapping.targetNamespace||mapping.tns||'';\r\n\t\t\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\t\t\r\n\t\t\t\tvar tns =  mapping.targetNamespace||mapping.tns||mapping.defaultElementNamespaceURI||mapping.dens||this.defaultElementNamespaceURI;\r\n\t\t\t\tthis.targetNamespace = tns;\r\n\r\n\t\t\t\tvar dans = mapping.defaultAttributeNamespaceURI||mapping.dans||'';\r\n\t\t\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\t\t\t\r\n\t\t\t\tvar bti = mapping.baseTypeInfo||mapping.bti||null;\r\n\t\t\t\tthis.baseTypeInfo = bti;\r\n\t\t\t\t\r\n\t\t\t\tvar inF = mapping.instanceFactory||mapping.inF||undefined;\r\n\t\t\t\tif (Jsonix.Util.Type.exists(inF)) {\r\n\t\t\t\t\t// TODO: should we support instanceFactory as functions?\r\n\t\t\t\t\t// For the pure JSON configuration?\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(inF);\r\n\t\t\t\t\tthis.instanceFactory = inF;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar tn = mapping.typeName||mapping.tn||undefined;\r\n\t\t\t\t\r\n\t\t\t\tif (Jsonix.Util.Type.exists(tn))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(tn))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.typeName = new Jsonix.XML.QName(this.targetNamespace, tn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.typeName = Jsonix.XML.QName.fromObject(tn);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Jsonix.Util.Type.exists(ln))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.typeName = new Jsonix.XML.QName(tns, ln);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.properties = [];\r\n\t\t\t\tthis.propertiesMap = {};\r\n\t\t\t\tvar ps = mapping.propertyInfos||mapping.ps||[];\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(ps);\r\n\t\t\t\tfor ( var index = 0; index < ps.length; index++) {\r\n\t\t\t\t\tthis.p(ps[index]);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t\tgetPropertyInfoByName : function(name) {\r\n\t\t\t\treturn this.propertiesMap[name];\r\n\t\t\t},\r\n\t\t\t// Obsolete\r\n\t\t\tdestroy : function() {\r\n\t\t\t},\r\n\t\t\tbuild : function(context, module) {\r\n\t\t\t\tif (!this.built) {\r\n\t\t\t\t\tthis.baseTypeInfo = context.resolveTypeInfo(this.baseTypeInfo, module);\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\t\tthis.baseTypeInfo.build(context, module);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Build properties in this context\r\n\t\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\t\tpropertyInfo.build(context, module);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Build the structure\r\n\t\t\t\t\tvar structure = {\r\n\t\t\t\t\t\telements : null,\r\n\t\t\t\t\t\tattributes : {},\r\n\t\t\t\t\t\tanyAttribute : null,\r\n\t\t\t\t\t\tvalue : null,\r\n\t\t\t\t\t\tany : null\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.buildStructure(context, structure);\r\n\t\t\t\t\tthis.structure = structure;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildStructure : function(context, structure) {\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\tthis.baseTypeInfo.buildStructure(context, structure);\r\n\t\t\t\t}\r\n\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\tpropertyInfo.buildStructure(context, structure);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tunmarshal : function(context, input) {\r\n\t\t\t\tthis.build(context);\r\n\t\t\t\tvar result;\r\n\t\t\t\t\r\n\t\t\t\tif (this.instanceFactory) {\r\n\t\t\t\t\tresult = new this.instanceFactory();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = { TYPE_NAME : this.name }; \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (input.eventType !== 1) {\r\n\t\t\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read a class info.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Read attributes\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.attributes)) {\r\n\t\t\t\t\tvar attributeCount = input.getAttributeCount();\r\n\t\t\t\t\tif (attributeCount !== 0) {\r\n\t\t\t\t\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\t\t\t\t\tvar attributeNameKey = input\r\n\t\t\t\t\t\t\t\t\t.getAttributeNameKey(index);\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.attributes[attributeNameKey])) {\r\n\t\t\t\t\t\t\t\tvar attributeValue = input\r\n\t\t\t\t\t\t\t\t\t\t.getAttributeValue(index);\r\n\t\t\t\t\t\t\t\tif (Jsonix.Util.Type.isString(attributeValue)) {\r\n\t\t\t\t\t\t\t\t\tvar attributePropertyInfo = this.structure.attributes[attributeNameKey];\r\n\t\t\t\t\t\t\t\t\tthis.unmarshalPropertyValue(context, input,\r\n\t\t\t\t\t\t\t\t\t\t\tattributePropertyInfo, result,\r\n\t\t\t\t\t\t\t\t\t\t\tattributeValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Read any attribute\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.anyAttribute)) {\r\n\t\t\t\t\tvar propertyInfo = this.structure.anyAttribute;\r\n\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t.unmarshalProperty(context, input, propertyInfo,\r\n\t\t\t\t\t\t\t\t\tresult);\r\n\t\t\t\t}\r\n\t\t\t\t// Read elements\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.elements)) {\r\n\r\n\t\t\t\t\tvar et = input.next();\r\n\t\t\t\t\twhile (et !== Jsonix.XML.Input.END_ELEMENT) {\r\n\t\t\t\t\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\t\t\t\t\t// New sub-element starts\r\n\t\t\t\t\t\t\tvar elementNameKey = input.getNameKey();\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.elements[elementNameKey])) {\r\n\t\t\t\t\t\t\t\tvar elementPropertyInfo = this.structure.elements[elementNameKey];\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\telementPropertyInfo, result);\r\n\t\t\t\t\t\t\t} else if (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.any)) {\r\n\t\t\t\t\t\t\t\t// TODO Refactor\r\n\r\n\t\t\t\t\t\t\t\tvar anyPropertyInfo = this.structure.any;\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\tanyPropertyInfo, result);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// TODO optionally report a validation error that the element is not expected\r\n\t\t\t\t\t\t\t\tet = input.skipElement();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if ((et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.mixed))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Characters and structure has a mixed property\r\n\t\t\t\t\t\t\t\tvar mixedPropertyInfo = this.structure.mixed;\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\tmixedPropertyInfo, result);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT\t|| et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t\t\t\t\t// Ignore\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et\t+ \"].\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tet = input.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (Jsonix.Util.Type.exists(this.structure.value)) {\r\n\t\t\t\t\tvar valuePropertyInfo = this.structure.value;\r\n\t\t\t\t\tthis.unmarshalProperty(context, input, valuePropertyInfo,\r\n\t\t\t\t\t\t\tresult);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Just skip everything\r\n\t\t\t\t\tinput.nextTag();\r\n\t\t\t\t}\r\n\t\t\t\tif (input.eventType !== 2) {\r\n\t\t\t\t\tthrow new Error(\"Illegal state: must be END_ELEMENT.\");\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\tunmarshalProperty : function(context, input, propertyInfo, result) {\r\n\t\t\t\tvar propertyValue = propertyInfo\r\n\t\t\t\t\t\t.unmarshal(context, input, this);\r\n\t\t\t\tpropertyInfo.setProperty(result, propertyValue);\r\n\t\t\t},\r\n\t\t\tunmarshalPropertyValue : function(context, input, propertyInfo,\r\n\t\t\t\t\tresult, value) {\r\n\t\t\t\tvar propertyValue = propertyInfo.unmarshalValue(value, context, input, this);\r\n\t\t\t\tpropertyInfo.setProperty(result, propertyValue);\r\n\t\t\t},\r\n\t\t\tmarshal : function(value, context, output, scope) {\r\n\t\t\t\tif (this.isMarshallable(value, context, scope))\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO This must be reworked\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\t\tthis.baseTypeInfo.marshal(value, context, output);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\t\tvar propertyValue = value[propertyInfo.name];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(propertyValue)) {\r\n\t\t\t\t\t\t\tpropertyInfo.marshal(propertyValue, context, output, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// Otherwise if there is just one property, use this property to marshal\r\n\t\t\t\t\tif (this.structure.value)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar valuePropertyInfo = this.structure.value;\r\n\t\t\t\t\t\tvaluePropertyInfo.marshal(value, context, output, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.properties.length === 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar singlePropertyInfo = this.properties[0];\r\n\t\t\t\t\t\tsinglePropertyInfo.marshal(value, context, output, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// TODO throw an error\r\n\t\t\t\t\t\tthrow new Error(\"The passed value [\" + value + \"] is not an object and there is no single suitable property to marshal it.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Checks if the value is marshallable\r\n\t\t\tisMarshallable : function(value, context, scope) {\r\n\t\t\t\treturn this.isInstance(value, context, scope) || (Jsonix.Util.Type.isObject(value) && !Jsonix.Util.Type.isArray(value));\r\n\t\t\t},\r\n\t\t\tisInstance : function(value, context, scope) {\r\n\t\t\t\tif (this.instanceFactory) {\r\n\t\t\t\t\treturn value instanceof this.instanceFactory;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn Jsonix.Util.Type.isObject(value) && Jsonix.Util.Type.isString(value.TYPE_NAME) && value.TYPE_NAME === this.name;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// Obsolete, left for backwards compatibility\r\n\t\t\tb : function(baseTypeInfo) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(baseTypeInfo);\r\n\t\t\t\tthis.baseTypeInfo = baseTypeInfo;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Obsolete, left for backwards compatibility\r\n\t\t\tps : function() {\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tp : function(mapping) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\t\t// If mapping is an instance of the property class\r\n\t\t\t\tif (mapping instanceof Jsonix.Model.PropertyInfo) {\r\n\t\t\t\t\tthis.addProperty(mapping);\r\n\t\t\t\t}\r\n\t\t\t\t// Else create it via generic mapping configuration\r\n\t\t\t\telse {\r\n\t\t\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\t\t\tvar type = mapping.type||mapping.t||'element';\r\n\t\t\t\t\t// Locate the creator function\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isFunction(this.propertyInfoCreators[type])) {\r\n\t\t\t\t\t\tvar propertyInfoCreator = this.propertyInfoCreators[type];\r\n\t\t\t\t\t\t// Call the creator function\r\n\t\t\t\t\t\tpropertyInfoCreator.call(this, mapping);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"Unknown property info type [\" + type + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taa : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.anyAttributePropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tae : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.anyElementPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ta : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.attributePropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tem : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementMapPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\te : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.elementPropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tes : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.elementsPropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ter : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementRefPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ters : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementRefsPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tv : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.valuePropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\taddDefaultNamespaces : function(mapping) {\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(mapping)) {\r\n\t\t\t\t\tif (!Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isString(mapping.defaultElementNamespaceURI)) {\r\n\t\t\t\t\t\tmapping.defaultElementNamespaceURI = this.defaultElementNamespaceURI;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isString(mapping.defaultAttributeNamespaceURI)) {\r\n\t\t\t\t\t\tmapping.defaultAttributeNamespaceURI = this.defaultAttributeNamespaceURI;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddProperty : function(property) {\r\n\t\t\t\tthis.properties.push(property);\r\n\t\t\t\tthis.propertiesMap[property.name] = property;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tCLASS_NAME : 'Jsonix.Model.ClassInfo'\r\n\t\t});\r\nJsonix.Model.ClassInfo.prototype.propertyInfoCreators = {\r\n\t\"aa\" : Jsonix.Model.ClassInfo.prototype.aa,\r\n\t\"anyAttribute\" : Jsonix.Model.ClassInfo.prototype.aa,\r\n\t\"ae\" : Jsonix.Model.ClassInfo.prototype.ae,\r\n\t\"anyElement\" : Jsonix.Model.ClassInfo.prototype.ae,\r\n\t\"a\" : Jsonix.Model.ClassInfo.prototype.a,\r\n\t\"attribute\" : Jsonix.Model.ClassInfo.prototype.a,\r\n\t\"em\" : Jsonix.Model.ClassInfo.prototype.em,\r\n\t\"elementMap\" : Jsonix.Model.ClassInfo.prototype.em,\r\n\t\"e\" : Jsonix.Model.ClassInfo.prototype.e,\r\n\t\"element\" : Jsonix.Model.ClassInfo.prototype.e,\r\n\t\"es\" : Jsonix.Model.ClassInfo.prototype.es,\r\n\t\"elements\" : Jsonix.Model.ClassInfo.prototype.es,\r\n\t\"er\" : Jsonix.Model.ClassInfo.prototype.er,\r\n\t\"elementRef\" : Jsonix.Model.ClassInfo.prototype.er,\r\n\t\"ers\" : Jsonix.Model.ClassInfo.prototype.ers,\r\n\t\"elementRefs\" : Jsonix.Model.ClassInfo.prototype.ers,\r\n\t\"v\" : Jsonix.Model.ClassInfo.prototype.v,\r\n\t\"value\" : Jsonix.Model.ClassInfo.prototype.v\r\n};\nJsonix.Model.EnumLeafInfo = Jsonix.Class(Jsonix.Model.TypeInfo, {\r\n\tname : null,\r\n\tbaseTypeInfo : 'String',\r\n\tentries : null,\r\n\tkeys : null,\r\n\tvalues : null,\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\r\n\t\tvar n = mapping.name||mapping.n||undefined;\r\n\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\tthis.name = n;\r\n\t\t\r\n\t\tvar bti = mapping.baseTypeInfo||mapping.bti||'String';\r\n\t\tthis.baseTypeInfo = bti;\r\n\t\t\r\n\t\tvar vs = mapping.values||mapping.vs||undefined;\r\n\t\tJsonix.Util.Ensure.ensureExists(vs);\r\n\t\tif (!(Jsonix.Util.Type.isObject(vs) || Jsonix.Util.Type.isArray(vs))) {\r\n\t\t\tthrow new Error('Enum values must be either an array or an object.');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.entries = vs;\r\n\t\t}\t\t\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\tif (!this.built) {\r\n\t\t\tthis.baseTypeInfo = context.resolveTypeInfo(this.baseTypeInfo, module);\r\n\t\t\tthis.baseTypeInfo.build(context, module);\r\n\t\t\tvar items = this.entries;\r\n\t\t\tvar entries = {};\r\n\t\t\tvar keys = [];\r\n\t\t\tvar values = [];\r\n\t\t\tvar index = 0;\r\n\t\t\tvar key;\r\n\t\t\tvar value;\r\n\t\t\t// If values is an array, process individual items\r\n\t\t\tif (Jsonix.Util.Type.isArray(items))\r\n\t\t\t{\r\n\t\t\t\t// Build properties in this context\r\n\t\t\t\tfor (index = 0; index < items.length; index++) {\r\n\t\t\t\t\tvalue = items[index];\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\t\tkey = value;\r\n\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.parse)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrow new Error('Enum value is provided as string but the base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the parse method.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Using null as input since input is not available\r\n\t\t\t\t\t\tvalue = this.baseTypeInfo.parse(value, context, null, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.baseTypeInfo.isInstance(value, context, this))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.print)))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('The base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the print method, unable to produce the enum key as string.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Using null as output since output is not available at this moment\r\n\t\t\t\t\t\t\tkey = this.baseTypeInfo.print(value, context, null, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrow new Error('Enum value [' + value + '] is not an instance of the enum base type [' + this.baseTypeInfo.name + '].');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tentries[key] = value;\r\n\t\t\t\t\tkeys[index] = key;\r\n\t\t\t\t\tvalues[index] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isObject(items))\r\n\t\t\t{\r\n\t\t\t\tfor (key in items) {\r\n\t\t\t\t\tif (items.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tvalue = items[key];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.parse)))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('Enum value is provided as string but the base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the parse method.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Using null as input since input is not available\r\n\t\t\t\t\t\t\tvalue = this.baseTypeInfo.parse(value, context, null, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!this.baseTypeInfo.isInstance(value, context, this))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('Enum value [' + value + '] is not an instance of the enum base type [' + this.baseTypeInfo.name + '].');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tentries[key] = value;\r\n\t\t\t\t\t\tkeys[index] = key;\r\n\t\t\t\t\t\tvalues[index] = value;\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error('Enum values must be either an array or an object.');\r\n\t\t\t}\r\n\t\t\tthis.entries = entries;\r\n\t\t\tthis.keys = keys;\r\n\t\t\tthis.values = values;\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.parse(text, context, input, scope);\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeCharacters(this.reprint(value, context, output, scope));\r\n\t\t}\r\n\t},\r\n\treprint : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.isString(value) && !this.isInstance(value, context, scope)) {\r\n\t\t\t// Using null as input since input is not available\r\n\t\t\treturn this.print(this.parse(value, context, null, scope), context, output, scope);\r\n\t\t} else {\r\n\t\t\treturn this.print(value, context, output, scope);\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tfor (var index = 0; index < this.values.length; index++)\r\n\t\t{\r\n\t\t\tif (this.values[index] === value)\r\n\t\t\t{\r\n\t\t\t\treturn this.keys[index];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] is invalid for the enum type [' + this.name + '].');\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (this.entries.hasOwnProperty(text))\r\n\t\t{\r\n\t\t\treturn this.entries[text];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthrow new Error('Value [' + text + '] is invalid for the enum type [' + this.name + '].');\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\tfor (var index = 0; index < this.values.length; index++)\r\n\t\t{\r\n\t\t\tif (this.values[index] === value)\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.EnumLeafInfo'\r\n});\nJsonix.Model.ElementInfo = Jsonix.Class({\r\n\telementName : null,\r\n\ttypeInfo : null,\r\n\tsubstitutionHead : null,\r\n\tscope : null,\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\r\n\t\tvar dens = mapping.defaultElementNamespaceURI||mapping.dens||'';\r\n\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\r\n\t\tvar en = mapping.elementName || mapping.en||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(en);\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t}\r\n\t\t\r\n\t\tvar ti = mapping.typeInfo||mapping.ti||'String';\r\n\t\tthis.typeInfo = ti;\r\n\t\t\r\n\t\tvar sh = mapping.substitutionHead||mapping.sh||null;\r\n\t\tthis.substitutionHead = sh;\r\n\t\t\r\n\t\tvar sc = mapping.scope||mapping.sc||null;\r\n\t\tthis.scope = sc;\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\t// If element info is not yet built\r\n\t\tif (!this.built) {\r\n\t\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t\t\tthis.scope = context.resolveTypeInfo(this.scope, module);\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementInfo'\r\n});\nJsonix.Model.PropertyInfo = Jsonix.Class({\r\n\tname : null,\r\n\tcollection : false,\r\n\ttargetNamespace : '',\r\n\tdefaultElementNamespaceURI : '',\r\n\tdefaultAttributeNamespaceURI : '',\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar n = mapping.name || mapping.n || undefined;\r\n\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\tthis.name = n;\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || mapping.targetNamespace || mapping.tns || '';\r\n\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\tvar tns = mapping.targetNamespace || mapping.tns || mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tthis.targetNamespace = tns;\r\n\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || '';\r\n\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\tvar col = mapping.collection || mapping.col || false;\r\n\t\tthis.collection = col;\r\n\t\tvar rq = mapping.required || mapping.rq || false;\r\n\t\tthis.required = rq;\r\n\t\tif (this.collection) {\r\n\t\t\tvar mno;\r\n\t\t\tif (Jsonix.Util.Type.isNumber(mapping.minOccurs)) {\r\n\t\t\t\tmno = mapping.minOccurs;\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isNumber(mapping.mno)) {\r\n\t\t\t\tmno = mapping.mno;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmno = 1;\r\n\t\t\t}\r\n\t\t\tthis.minOccurs = mno;\r\n\t\t\tvar mxo;\r\n\t\t\tif (Jsonix.Util.Type.isNumber(mapping.maxOccurs)) {\r\n\t\t\t\tmxo = mapping.maxOccurs;\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isNumber(mapping.mxo)) {\r\n\t\t\t\tmxo = mapping.mxo;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmxo = null;\r\n\t\t\t}\r\n\t\t\tthis.maxOccurs = mxo;\r\n\t\t}\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\tif (!this.built) {\r\n\t\t\tthis.doBuild(context, module);\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthrow new Error(\"Abstract method [doBuild].\");\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructure].\");\r\n\t},\r\n\tsetProperty : function(object, value) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tif (this.collection) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(value, 'Collection property requires an array value.');\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(object[this.name])) {\r\n\t\t\t\t\tobject[this.name] = [];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\t\tobject[this.name].push(value[index]);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tobject[this.name] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.PropertyInfo'\r\n});\nJsonix.Model.AnyAttributePropertyInfo = Jsonix.Class(Jsonix.Model.PropertyInfo, {\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar attributeCount = input.getAttributeCount();\r\n\t\tif (attributeCount === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tvar result = {};\r\n\t\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\t\tvar value = input.getAttributeValue(index);\r\n\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\tvar propertyName = this.convertFromAttributeName(input.getAttributeName(index), context, input, scope);\r\n\t\t\t\t\tresult[propertyName] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.isObject(value)) {\r\n\t\t\t// Nothing to do\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor ( var propertyName in value) {\r\n\t\t\tif (value.hasOwnProperty(propertyName)) {\r\n\t\t\t\tvar propertyValue = value[propertyName];\r\n\t\t\t\tif (Jsonix.Util.Type.isString(propertyValue)) {\r\n\t\t\t\t\tvar attributeName = this.convertToAttributeName(propertyName, context, output, scope);\r\n\t\t\t\t\toutput.writeAttribute(attributeName, propertyValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tconvertFromAttributeName : function(attributeName, context, input, scope) {\r\n\t\treturn attributeName.key;\r\n\t},\r\n\tconvertToAttributeName : function(propertyName, context, output, scope) {\r\n\t\treturn Jsonix.XML.QName.fromObjectOrString(propertyName, context);\r\n\t},\r\n\tdoBuild : function(context, module)\t{\r\n\t\t// Nothing to do\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\t// if (Jsonix.Util.Type.exists(structure.anyAttribute))\r\n\t\t// {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an any attribute\r\n\t\t// property.\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\tstructure.anyAttribute = this;\r\n\t\t// }\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AnyAttributePropertyInfo'\r\n});\r\nJsonix.Model.AnyAttributePropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.AnyAttributePropertyInfo, {\r\n\tconvertFromAttributeName : function(attributeName, context, input, scope)\r\n\t{\r\n\t\treturn attributeName.toCanonicalString(context);\r\n\t}\r\n});\r\n\nJsonix.Model.SingleTypePropertyInfo = Jsonix.Class(Jsonix.Model.PropertyInfo, {\r\n\ttypeInfo : 'String',\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tthis.typeInfo = ti;\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tunmarshalValue : function(value, context, input, scope) {\r\n\t\treturn this.parse(value, context, input, scope);\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.typeInfo.parse(value, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.typeInfo.reprint(value, context, output, scope);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.SingleTypePropertyInfo'\r\n});\r\n\nJsonix.Model.AttributePropertyInfo = Jsonix.Class(Jsonix.Model.SingleTypePropertyInfo, {\r\n\tattributeName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.SingleTypePropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar an = mapping.attributeName||mapping.an||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(an)) {\r\n\t\t\tthis.attributeName = Jsonix.XML.QName.fromObject(an);\r\n\t\t} else if (Jsonix.Util.Type.isString(an)) {\r\n\t\t\tthis.attributeName = new Jsonix.XML.QName(this.defaultAttributeNamespaceURI, an);\r\n\t\t} else {\r\n\t\t\tthis.attributeName = new Jsonix.XML.QName(this.defaultAttributeNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar attributeCount = input.getAttributeCount();\r\n\t\tvar result = null;\r\n\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\tvar attributeNameKey = input.getAttributeNameKey(index);\r\n\t\t\tif (this.attributeName.key === attributeNameKey) {\r\n\t\t\t\tvar attributeValue = input.getAttributeValue(index);\r\n\t\t\t\tif (Jsonix.Util.Type.isString(attributeValue)) {\r\n\t\t\t\t\tresult = this.unmarshalValue(attributeValue, context, input, scope);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeAttribute(this.attributeName, this.print(value, context, output, scope));\r\n\t\t}\r\n\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tJsonix.Util.Ensure.ensureObject(structure.attributes);\r\n\t\tvar key = this.attributeName.key;\r\n\t\t// if (Jsonix.Util.Type.exists(structure.attributes[key])) {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an attribute for the key\r\n\t\t// [\"\r\n\t\t// + key + \"].\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\tstructure.attributes[key] = this;\r\n\t\t// }\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AttributePropertyInfo'\r\n});\r\n\nJsonix.Model.ValuePropertyInfo = Jsonix.Class(Jsonix.Model.SingleTypePropertyInfo, {\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.SingleTypePropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.unmarshalValue(text, context, input, scope);\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\toutput.writeCharacters(this.print(value, context, output, scope));\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\t// if (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines a value\r\n\t\t// property.\");\r\n\t\t// } else\r\n\t\tif (Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines element mappings, it cannot define a value property.\");\r\n\t\t} else {\r\n\t\t\tstructure.value = this;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ValuePropertyInfo'\r\n});\r\n\nJsonix.Model.AbstractElementsPropertyInfo = Jsonix.Class(Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.WrapperElement, Jsonix.Model.PropertyInfo, {\r\n\twrapperElementName : null,\r\n\tallowDom : false,\r\n\tallowTypedObject : true,\r\n\tmixed : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar wen = mapping.wrapperElementName||mapping.wen||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(wen)) {\r\n\t\t\tthis.wrapperElementName = Jsonix.XML.QName.fromObject(wen);\r\n\t\t} else if (Jsonix.Util.Type.isString(wen)) {\r\n\t\t\tthis.wrapperElementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, wen);\r\n\t\t} else {\r\n\t\t\tthis.wrapperElementName = null;\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t} else {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t// Do nothing\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t}\r\n\r\n\t\tif (!this.collection) {\r\n\t\t\tthis.marshalElement(value, context, output, scope);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\t// TODO Exception if not array\r\n\t\t\tfor ( var index = 0; index < value.length; index++) {\r\n\t\t\t\tvar item = value[index];\r\n\t\t\t\t// TODO Exception if item does not exist\r\n\t\t\t\tthis.marshalElement(item, context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeEndElement();\r\n\t\t}\r\n\t},\r\n\tconvertFromTypedNamedValue : function(elementValue, context, input, scope) {\r\n\t\treturn elementValue.value;\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tstructure.elements[this.wrapperElementName.key] = this;\r\n\t\t} else {\r\n\t\t\tthis.buildStructureElements(context, structure);\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructureElements].\");\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AbstractElementsPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, Jsonix.Binding.Marshalls.Element, {\r\n\ttypeInfo : 'String',\r\n\telementName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tif (Jsonix.Util.Type.isObject(ti)) {\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(ti);\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t}\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\treturn this.typeInfo;\r\n\t},\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\treturn {\r\n\t\t\tname : this.elementName,\r\n\t\t\tvalue : value,\r\n\t\t\ttypeInfo : this.typeInfo\r\n\t\t};\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tstructure.elements[this.elementName.key] = this;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementsPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, Jsonix.Binding.Marshalls.Element, {\r\n\telementTypeInfos : null,\r\n\telementTypeInfosMap : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar etis = mapping.elementTypeInfos || mapping.etis || [];\r\n\t\tJsonix.Util.Ensure.ensureArray(etis);\r\n\t\tthis.elementTypeInfos = [];\r\n\t\tfor (var index = 0; index < etis.length; index++) {\r\n\t\t\tthis.elementTypeInfos[index] = Jsonix.Util.Type.cloneObject(etis[index]);\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\treturn this.elementTypeInfosMap[elementName.key];\r\n\t},\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tvar typeInfo = elementTypeInfo.typeInfo;\r\n\t\t\tif (typeInfo.isInstance(value, context, scope)) {\r\n\t\t\t\tvar elementName = elementTypeInfo.elementName;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname : elementName,\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If xsi:type is supported\r\n\t\tif (context.supportXsiType) {\r\n\t\t\t// Find the actual type\r\n\t\t\tvar actualTypeInfo = context.getTypeInfoByValue(value);\r\n\t\t\tif (actualTypeInfo && actualTypeInfo.typeName) {\r\n\t\t\t\tfor (var jndex = 0; jndex < this.elementTypeInfos.length; jndex++) {\r\n\t\t\t\t\tvar eti = this.elementTypeInfos[jndex];\r\n\t\t\t\t\tvar ti = eti.typeInfo;\r\n\t\t\t\t\t// TODO Can be optimized\r\n\t\t\t\t\t// Find an element type info which has a type info that is a\r\n\t\t\t\t\t// supertype of the actual type info\r\n\t\t\t\t\tif (actualTypeInfo.isBasedOn(ti)) {\r\n\t\t\t\t\t\tvar en = eti.elementName;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname : en,\r\n\t\t\t\t\t\t\tvalue : value,\r\n\t\t\t\t\t\t\ttypeInfo : ti\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO harmonize error handling. See also marshallElement. Error must\r\n\t\t// only be on one place.\r\n\t\tthrow new Error(\"Could not find an element with type info supporting the value [\" + value + \"].\");\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.elementTypeInfosMap = {};\r\n\t\tvar etiti, etien;\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tJsonix.Util.Ensure.ensureObject(elementTypeInfo);\r\n\t\t\tetiti = elementTypeInfo.typeInfo || elementTypeInfo.ti || 'String';\r\n\t\t\telementTypeInfo.typeInfo = context.resolveTypeInfo(etiti, module);\r\n\t\t\tetien = elementTypeInfo.elementName || elementTypeInfo.en || undefined;\r\n\t\t\telementTypeInfo.elementName = Jsonix.XML.QName.fromObjectOrString(etien, context, this.defaultElementNamespaceURI);\r\n\t\t\tthis.elementTypeInfosMap[elementTypeInfo.elementName.key] = elementTypeInfo.typeInfo;\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tstructure.elements[elementTypeInfo.elementName.key] = this;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementsPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementMapPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, {\r\n\telementName : null,\r\n\tkey : null,\r\n\tvalue : null,\r\n\tentryTypeInfo : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar k = mapping.key || mapping.k || undefined;\r\n\t\tJsonix.Util.Ensure.ensureObject(k);\r\n\t\tvar v = mapping.value || mapping.v || undefined;\r\n\t\tJsonix.Util.Ensure.ensureObject(v);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t\tthis.entryTypeInfo = new Jsonix.Model.ClassInfo({\r\n\t\t\tname : 'Map<' + k.name + ',' + v.name + '>',\r\n\t\t\tpropertyInfos : [ k, v ]\r\n\t\t});\r\n\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\r\n\t\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(value, 'Map property requires an object.');\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(result)) {\r\n\t\t\t\t\tresult = {};\r\n\t\t\t\t}\r\n\t\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\t\tif (that.collection) {\r\n\t\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(result[attributeName])) {\r\n\t\t\t\t\t\t\t\tresult[attributeName] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult[attributeName].push(attributeValue);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(result[attributeName])) {\r\n\t\t\t\t\t\t\t\tresult[attributeName] = attributeValue;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\t\t\t\tthrow new Error(\"Value was already set.\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t} else {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tgetTypeInfoByInputElement : function(context, input, scope) {\r\n\t\treturn this.entryTypeInfo;\r\n\t},\r\n\tconvertFromTypedNamedValue : function(elementValue, context, input, scope) {\r\n\t\tvar entry = elementValue.value;\r\n\t\tvar result = {};\r\n\t\tif (Jsonix.Util.Type.isString(entry[this.key.name])) {\r\n\t\t\tresult[entry[this.key.name]] = entry[this.value.name];\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t// Do nothing\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t}\r\n\r\n\t\tthis.marshalElement(value, context, output, scope);\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeEndElement();\r\n\t\t}\r\n\t},\r\n\tmarshalElement : function(value, context, output, scope) {\r\n\t\tif (!!value) {\r\n\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\tif (!this.collection) {\r\n\t\t\t\t\t\tvar singleEntry = {};\r\n\t\t\t\t\t\tsingleEntry[this.key.name] = attributeName;\r\n\t\t\t\t\t\tsingleEntry[this.value.name] = attributeValue;\r\n\t\t\t\t\t\toutput.writeStartElement(this.elementName);\r\n\t\t\t\t\t\tthis.entryTypeInfo.marshal(singleEntry, context, output, scope);\r\n\t\t\t\t\t\toutput.writeEndElement();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var index = 0; index < attributeValue.length; index++) {\r\n\t\t\t\t\t\t\tvar collectionEntry = {};\r\n\t\t\t\t\t\t\tcollectionEntry[this.key.name] = attributeName;\r\n\t\t\t\t\t\t\tcollectionEntry[this.value.name] = attributeValue[index];\r\n\t\t\t\t\t\t\toutput.writeStartElement(this.elementName);\r\n\t\t\t\t\t\t\tthis.entryTypeInfo.marshal(collectionEntry, context, output, scope);\r\n\t\t\t\t\t\t\toutput.writeEndElement();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.entryTypeInfo.build(context, module);\r\n\t\t// TODO get property by name\r\n\t\tthis.key = this.entryTypeInfo.properties[0];\r\n\t\tthis.value = this.entryTypeInfo.properties[1];\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tstructure.elements[this.elementName.key] = this;\r\n\t},\r\n\tsetProperty : function(object, value) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(value, 'Map property requires an object.');\r\n\t\t\tif (!Jsonix.Util.Type.exists(object[this.name])) {\r\n\t\t\t\tobject[this.name] = {};\r\n\t\t\t}\r\n\t\t\tvar map = object[this.name];\r\n\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\tif (this.collection) {\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(map[attributeName])) {\r\n\t\t\t\t\t\t\tmap[attributeName] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var index = 0; index < attributeValue.length; index++) {\r\n\t\t\t\t\t\t\tmap[attributeName].push(attributeValue[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmap[attributeName] = attributeValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementMapPropertyInfo'\r\n});\r\n\nJsonix.Model.AbstractElementRefsPropertyInfo = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.WrapperElement, Jsonix.Binding.Unmarshalls.Element.AsElementRef, Jsonix.Model.PropertyInfo, {\r\n\twrapperElementName : null,\r\n\tallowDom : true,\r\n\tallowTypedObject : true,\r\n\tmixed : true,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping, 'Mapping must be an object.');\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar wen = mapping.wrapperElementName || mapping.wen || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(wen)) {\r\n\t\t\tthis.wrapperElementName = Jsonix.XML.QName.fromObject(wen);\r\n\t\t} else if (Jsonix.Util.Type.isString(wen)) {\r\n\t\t\tthis.wrapperElementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, wen);\r\n\t\t} else {\r\n\t\t\tthis.wrapperElementName = null;\r\n\t\t}\r\n\t\tvar dom = Jsonix.Util.Type.defaultValue(mapping.allowDom, mapping.dom, true);\r\n\t\tvar typed = Jsonix.Util.Type.defaultValue(mapping.allowTypedObject, mapping.typed, true);\r\n\t\tvar mx = Jsonix.Util.Type.defaultValue(mapping.mixed, mapping.mx, true);\r\n\t\tthis.allowDom = dom;\r\n\t\tthis.allowTypedObject = typed;\r\n\t\tthis.mixed = mx;\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar et = input.eventType;\r\n\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t\t} else {\r\n\t\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t\t}\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\tcallback(input.getText());\r\n\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t// Skip whitespace\r\n\t\t} else {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.collection) {\r\n\t\t\t\tthis.marshalItem(value, context, output, scope);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(value, 'Collection property requires an array value.');\r\n\t\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\t\tvar item = value[index];\r\n\t\t\t\t\tthis.marshalItem(item, context, output, scope);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\toutput.writeEndElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\tmarshalItem : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\tif (!this.mixed) {\r\n\t\t\t\t// TODO\r\n\t\t\t\tthrow new Error(\"Property is not mixed, can't handle string values.\");\r\n\t\t\t} else {\r\n\t\t\t\toutput.writeCharacters(value);\r\n\t\t\t}\r\n\t\t} else if (this.allowDom && Jsonix.Util.Type.exists(value.nodeType)) {\r\n\t\t\t// DOM node\r\n\t\t\toutput.writeNode(value);\r\n\t\t} else if (Jsonix.Util.Type.isObject(value)) {\r\n\t\t\tthis.marshalElement(value, context, output, scope);\r\n\r\n\t\t} else {\r\n\t\t\tif (this.mixed) {\r\n\t\t\t\tthrow new Error(\"Unsupported content type, either objects or strings are supported.\");\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Unsupported content type, only objects are supported.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\tvar propertyElementTypeInfo = this.getPropertyElementTypeInfo(elementName, context);\r\n\t\tif (Jsonix.Util.Type.exists(propertyElementTypeInfo)) {\r\n\t\t\treturn propertyElementTypeInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\tvar contextElementTypeInfo = context.getElementInfo(elementName, scope);\r\n\t\t\tif (Jsonix.Util.Type.exists(contextElementTypeInfo)) {\r\n\t\t\t\treturn contextElementTypeInfo.typeInfo;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tthrow new Error(\"Abstract method [getPropertyElementTypeInfo].\");\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tstructure.elements[this.wrapperElementName.key] = this;\r\n\t\t} else {\r\n\t\t\tthis.buildStructureElements(context, structure);\r\n\t\t}\r\n\r\n\t\t// if (Jsonix.Util.Type.exists(structure.elements[key]))\r\n\t\t// {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an element for\r\n\t\t// the key [\"\r\n\t\t// + key + \"].\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\t// structure.elements[key] = this;\r\n\t\t// }\r\n\r\n\t\tif ((this.allowDom || this.allowTypedObject)) {\r\n\t\t\tstructure.any = this;\r\n\t\t}\r\n\t\tif (this.mixed && !Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.mixed)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the mixed\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.mixed = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructureElements].\");\r\n\t},\r\n\tbuildStructureElementTypeInfos : function(context, structure, elementTypeInfo) {\r\n\t\tstructure.elements[elementTypeInfo.elementName.key] = this;\r\n\t\tvar substitutionMembers = context.getSubstitutionMembers(elementTypeInfo.elementName);\r\n\t\tif (Jsonix.Util.Type.isArray(substitutionMembers)) {\r\n\t\t\tfor (var jndex = 0; jndex < substitutionMembers.length; jndex++) {\r\n\t\t\t\tvar substitutionElementInfo = substitutionMembers[jndex];\r\n\t\t\t\tthis.buildStructureElementTypeInfos(context, structure, substitutionElementInfo);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AbstractElementRefsPropertyInfo'\r\n});\nJsonix.Model.ElementRefPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementRefsPropertyInfo, {\r\n\ttypeInfo : 'String',\r\n\telementName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementRefsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tif (Jsonix.Util.Type.isObject(ti)) {\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(ti);\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t}\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tvar name = Jsonix.XML.QName.fromObjectOrString(elementName, context);\r\n\r\n\t\tif (name.key === this.elementName.key) {\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthis.buildStructureElementTypeInfos(context, structure, this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefPropertyInfo'\r\n});\r\nJsonix.Model.ElementRefPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.ElementRefPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefPropertyInfo.Simplified'\r\n});\nJsonix.Model.ElementRefsPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementRefsPropertyInfo, {\r\n\telementTypeInfos : null,\r\n\telementTypeInfosMap : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementRefsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct arguments\r\n\t\tvar etis = mapping.elementTypeInfos || mapping.etis || [];\r\n\t\tJsonix.Util.Ensure.ensureArray(etis);\r\n\t\tthis.elementTypeInfos = [];\r\n\t\tfor (var index = 0; index < etis.length; index++)\r\n\t\t{\r\n\t\t\tthis.elementTypeInfos[index] = Jsonix.Util.Type.cloneObject(etis[index]);\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tvar name = Jsonix.XML.QName.fromObjectOrString(elementName, context);\r\n\r\n\t\tvar typeInfo = this.elementTypeInfosMap[name.key];\r\n\t\tif (Jsonix.Util.Type.exists(typeInfo)) {\r\n\t\t\treturn {\r\n\t\t\t\telementName : name,\r\n\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.elementTypeInfosMap = {};\r\n\t\tvar etiti, etien;\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tJsonix.Util.Ensure.ensureObject(elementTypeInfo);\r\n\t\t\tetiti = elementTypeInfo.typeInfo || elementTypeInfo.ti || 'String';\r\n\t\t\telementTypeInfo.typeInfo = context.resolveTypeInfo(etiti, module);\r\n\t\t\tetien = elementTypeInfo.elementName || elementTypeInfo.en || undefined;\r\n\t\t\telementTypeInfo.elementName = Jsonix.XML.QName.fromObjectOrString(etien, context, this.defaultElementNamespaceURI);\r\n\t\t\tthis.elementTypeInfosMap[elementTypeInfo.elementName.key] = elementTypeInfo.typeInfo;\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tthis.buildStructureElementTypeInfos(context, structure, elementTypeInfo);\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefsPropertyInfo'\r\n});\r\nJsonix.Model.ElementRefsPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.ElementRefsPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefsPropertyInfo.Simplified'\r\n});\r\n\nJsonix.Model.AnyElementPropertyInfo = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.Element.AsElementRef, Jsonix.Model.PropertyInfo, {\r\n\tallowDom : true,\r\n\tallowTypedObject : true,\r\n\tmixed : true,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar dom = Jsonix.Util.Type.defaultValue(mapping.allowDom, mapping.dom, true);\r\n\t\tvar typed = Jsonix.Util.Type.defaultValue(mapping.allowTypedObject, mapping.typed, true);\r\n\t\tvar mx = Jsonix.Util.Type.defaultValue(mapping.mixed, mapping.mx, true);\r\n\t\tthis.allowDom = dom;\r\n\t\tthis.allowTypedObject = typed;\r\n\t\tthis.mixed = mx;\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar et = input.eventType;\r\n\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\tcallback(input.getText());\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.SPACE)) {\r\n\t\t\t// Whitespace\r\n\t\t\t// return null;\r\n\t\t} else if (et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t// return null;\r\n\t\t} else {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.collection) {\r\n\t\t\tthis.marshalItem(value, context, output, scope);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\tthis.marshalItem(value[index], context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmarshalItem : function(value, context, output, scope) {\r\n\t\tif (this.mixed && Jsonix.Util.Type.isString(value)) {\r\n\t\t\t// Mixed\r\n\t\t\toutput.writeCharacters(value);\r\n\t\t} else if (this.allowDom && Jsonix.Util.Type.exists(value.nodeType)) {\r\n\t\t\t// DOM node\r\n\t\t\toutput.writeNode(value);\r\n\r\n\t\t} else {\r\n\t\t\tif (this.allowTypedObject) {\r\n\t\t\t\tthis.marshalElement(value, context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\t// Nothing to do\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif ((this.allowDom || this.allowTypedObject)) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.any)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the any\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.any = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t\tif (this.mixed) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.mixed)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the mixed\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.mixed = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AnyElementPropertyInfo'\r\n});\r\nJsonix.Model.AnyElementPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.AnyElementPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.AnyElementPropertyInfo.Simplified'\r\n});\nJsonix.Model.Module = Jsonix.Class(Jsonix.Mapping.Styled, {\r\n\tname : null,\r\n\ttypeInfos : null,\r\n\telementInfos : null,\r\n\ttargetNamespace : '',\r\n\tdefaultElementNamespaceURI : '',\r\n\tdefaultAttributeNamespaceURI : '',\r\n\tinitialize : function(mapping, options) {\r\n\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [ options ]);\r\n\t\tthis.typeInfos = [];\r\n\t\tthis.elementInfos = [];\r\n\t\tif (typeof mapping !== 'undefined') {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\tvar n = mapping.name || mapping.n || null;\r\n\t\t\tthis.name = n;\r\n\t\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || mapping.targetNamespace || mapping.tns || '';\r\n\t\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\tvar tns = mapping.targetNamespace || mapping.tns || mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\t\tthis.targetNamespace = tns;\r\n\t\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || '';\r\n\t\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\t\t// Initialize type infos\r\n\t\t\tvar tis = mapping.typeInfos || mapping.tis || [];\r\n\t\t\tthis.initializeTypeInfos(tis);\r\n\r\n\t\t\t// Backwards compatibility: class infos can also be defined\r\n\t\t\t// as properties of the schema, for instance Schema.MyType\r\n\t\t\tfor ( var typeInfoName in mapping) {\r\n\t\t\t\tif (mapping.hasOwnProperty(typeInfoName)) {\r\n\t\t\t\t\tif (mapping[typeInfoName] instanceof this.mappingStyle.classInfo) {\r\n\t\t\t\t\t\tthis.typeInfos.push(mapping[typeInfoName]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar eis = mapping.elementInfos || mapping.eis || [];\r\n\t\t\t// Initialize element infos\r\n\t\t\tthis.initializeElementInfos(eis);\r\n\t\t}\r\n\t},\r\n\tinitializeTypeInfos : function(typeInfoMappings) {\r\n\t\tJsonix.Util.Ensure.ensureArray(typeInfoMappings);\r\n\t\tvar index, typeInfoMapping, typeInfo;\r\n\t\tfor (index = 0; index < typeInfoMappings.length; index++) {\r\n\t\t\ttypeInfoMapping = typeInfoMappings[index];\r\n\t\t\ttypeInfo = this.createTypeInfo(typeInfoMapping);\r\n\t\t\tthis.typeInfos.push(typeInfo);\r\n\t\t}\r\n\t},\r\n\tinitializeElementInfos : function(elementInfoMappings) {\r\n\t\tJsonix.Util.Ensure.ensureArray(elementInfoMappings);\r\n\t\tvar index, elementInfoMapping, elementInfo;\r\n\t\tfor (index = 0; index < elementInfoMappings.length; index++) {\r\n\t\t\telementInfoMapping = elementInfoMappings[index];\r\n\t\t\telementInfo = this.createElementInfo(elementInfoMapping);\r\n\t\t\tthis.elementInfos.push(elementInfo);\r\n\t\t}\r\n\t},\r\n\tcreateTypeInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar typeInfo;\r\n\t\t// If mapping is already a type info, do nothing\r\n\t\tif (mapping instanceof Jsonix.Model.TypeInfo) {\r\n\t\t\ttypeInfo = mapping;\r\n\t\t}\r\n\t\t// Else create it via generic mapping configuration\r\n\t\telse {\r\n\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\tvar type = mapping.type || mapping.t || 'classInfo';\r\n\t\t\t// Locate the creator function\r\n\t\t\tif (Jsonix.Util.Type.isFunction(this.typeInfoCreators[type])) {\r\n\t\t\t\tvar typeInfoCreator = this.typeInfoCreators[type];\r\n\t\t\t\t// Call the creator function\r\n\t\t\t\ttypeInfo = typeInfoCreator.call(this, mapping);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Unknown type info type [\" + type + \"].\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn typeInfo;\r\n\t},\r\n\tinitializeNames : function(mapping) {\r\n\t\tvar ln = mapping.localName || mapping.ln || null;\r\n\t\tmapping.localName = ln;\r\n\t\tvar n = mapping.name || mapping.n || null;\r\n\t\tmapping.name = n;\r\n\t\t// Calculate both name as well as localName\r\n\t\t// name is provided\r\n\t\tif (Jsonix.Util.Type.isString(mapping.name)) {\r\n\t\t\t// Obsolete code below\r\n\t\t\t// // localName is not provided\r\n\t\t\t// if (!Jsonix.Util.Type.isString(mapping.localName)) {\r\n\t\t\t// // But module name is provided\r\n\t\t\t// if (Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t// // If name starts with module name, use second part\r\n\t\t\t// // as local name\r\n\t\t\t// if (mapping.name.indexOf(this.name + '.') === 0) {\r\n\t\t\t// mapping.localName = mapping.name\r\n\t\t\t// .substring(this.name.length + 1);\r\n\t\t\t// }\r\n\t\t\t// // Else use name as local name\r\n\t\t\t// else {\r\n\t\t\t// mapping.localName = mapping.name;\r\n\t\t\t// }\r\n\t\t\t// }\r\n\t\t\t// // Module name is not provided, use name as local name\r\n\t\t\t// else {\r\n\t\t\t// mapping.localName = mapping.name;\r\n\t\t\t// }\r\n\t\t\t// }\r\n\t\t\tif (mapping.name.length > 0 && mapping.name.charAt(0) === '.' && Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t\tmapping.name = this.name + mapping.name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// name is not provided but local name is provided\r\n\t\telse if (Jsonix.Util.Type.isString(ln)) {\r\n\t\t\t// Module name is provided\r\n\t\t\tif (Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t\tmapping.name = this.name + '.' + ln;\r\n\t\t\t}\r\n\t\t\t// Module name is not provided\r\n\t\t\telse {\r\n\t\t\t\tmapping.name = ln;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Neither [name/n] nor [localName/ln] was provided for the class info.\");\r\n\t\t}\r\n\t},\r\n\tcreateClassInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tmapping.defaultElementNamespaceURI = dens;\r\n\t\tvar tns = mapping.targetNamespace || mapping.tns || this.targetNamespace;\r\n\t\tmapping.targetNamespace = tns;\r\n\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || this.defaultAttributeNamespaceURI;\r\n\t\tmapping.defaultAttributeNamespaceURI = dans;\r\n\t\tthis.initializeNames(mapping);\r\n\t\t// Now both name an local name are initialized\r\n\t\tvar classInfo = new this.mappingStyle.classInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn classInfo;\r\n\t},\r\n\tcreateEnumLeafInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tthis.initializeNames(mapping);\r\n\t\t// Now both name an local name are initialized\r\n\t\tvar enumLeafInfo = new this.mappingStyle.enumLeafInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn enumLeafInfo;\r\n\t},\r\n\tcreateList : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar ti = mapping.baseTypeInfo || mapping.typeInfo || mapping.bti || mapping.ti || 'String';\r\n\t\tvar tn = mapping.typeName || mapping.tn || null;\r\n\r\n\t\tif (Jsonix.Util.Type.exists(tn)) {\r\n\t\t\tif (Jsonix.Util.Type.isString(tn)) {\r\n\t\t\t\ttn = new Jsonix.XML.QName(this.targetNamespace, tn);\r\n\t\t\t} else {\r\n\t\t\t\ttn = Jsonix.XML.QName.fromObject(tn);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar s = mapping.separator || mapping.sep || ' ';\r\n\t\tJsonix.Util.Ensure.ensureExists(ti);\r\n\t\treturn new Jsonix.Schema.XSD.List(ti, tn, s);\r\n\t},\r\n\tcreateElementInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tmapping.defaultElementNamespaceURI = dens;\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tJsonix.Util.Ensure.ensureExists(en);\r\n\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tJsonix.Util.Ensure.ensureExists(ti);\r\n\r\n\t\tmapping.typeInfo = ti;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tmapping.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tmapping.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Element info [' + mapping + '] must provide an element name.');\r\n\t\t}\r\n\r\n\t\tvar sh = mapping.substitutionHead || mapping.sh || null;\r\n\t\tif (Jsonix.Util.Type.exists(sh)) {\r\n\t\t\tif (Jsonix.Util.Type.isObject(sh)) {\r\n\t\t\t\tmapping.substitutionHead = Jsonix.XML.QName.fromObject(sh);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(sh);\r\n\t\t\t\tmapping.substitutionHead = new Jsonix.XML.QName(this.defaultElementNamespaceURI, sh);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar elementInfo = new this.mappingStyle.elementInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn elementInfo;\r\n\t},\r\n\tregisterTypeInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.typeInfos.length; index++) {\r\n\t\t\tvar typeInfo = this.typeInfos[index];\r\n\t\t\tcontext.registerTypeInfo(typeInfo, this);\r\n\t\t}\r\n\t},\r\n\tbuildTypeInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.typeInfos.length; index++) {\r\n\t\t\tvar typeInfo = this.typeInfos[index];\r\n\t\t\ttypeInfo.build(context, this);\r\n\t\t}\r\n\t},\r\n\tregisterElementInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.elementInfos.length; index++) {\r\n\t\t\tvar elementInfo = this.elementInfos[index];\r\n\t\t\tcontext.registerElementInfo(elementInfo, this);\r\n\t\t}\r\n\t},\r\n\tbuildElementInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.elementInfos.length; index++) {\r\n\t\t\tvar elementInfo = this.elementInfos[index];\r\n\t\t\telementInfo.build(context, this);\r\n\t\t}\r\n\t},\r\n\t// Obsolete, retained for backwards compatibility\r\n\tcs : function() {\r\n\t\treturn this;\r\n\t},\r\n\t// Obsolete, retained for backwards compatibility\r\n\tes : function() {\r\n\t\treturn this;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.Module'\r\n});\r\nJsonix.Model.Module.prototype.typeInfoCreators = {\r\n\t\"classInfo\" : Jsonix.Model.Module.prototype.createClassInfo,\r\n\t\"c\" : Jsonix.Model.Module.prototype.createClassInfo,\r\n\t\"enumInfo\" : Jsonix.Model.Module.prototype.createEnumLeafInfo,\r\n\t\"enum\" : Jsonix.Model.Module.prototype.createEnumLeafInfo,\r\n\t\"list\" : Jsonix.Model.Module.prototype.createList,\r\n\t\"l\" : Jsonix.Model.Module.prototype.createList\r\n};\nJsonix.Mapping.Style.Standard = Jsonix.Class(Jsonix.Mapping.Style, {\r\n\tmarshaller : Jsonix.Binding.Marshaller,\r\n\tunmarshaller : Jsonix.Binding.Unmarshaller,\r\n\tmodule : Jsonix.Model.Module,\r\n\telementInfo : Jsonix.Model.ElementInfo,\r\n\tclassInfo : Jsonix.Model.ClassInfo,\r\n\tenumLeafInfo : Jsonix.Model.EnumLeafInfo,\r\n\tanyAttributePropertyInfo : Jsonix.Model.AnyAttributePropertyInfo,\r\n\tanyElementPropertyInfo : Jsonix.Model.AnyElementPropertyInfo,\r\n\tattributePropertyInfo : Jsonix.Model.AttributePropertyInfo,\r\n\telementMapPropertyInfo : Jsonix.Model.ElementMapPropertyInfo,\r\n\telementPropertyInfo : Jsonix.Model.ElementPropertyInfo,\r\n\telementsPropertyInfo : Jsonix.Model.ElementsPropertyInfo,\r\n\telementRefPropertyInfo : Jsonix.Model.ElementRefPropertyInfo,\r\n\telementRefsPropertyInfo : Jsonix.Model.ElementRefsPropertyInfo,\r\n\tvaluePropertyInfo : Jsonix.Model.ValuePropertyInfo,\r\n\tinitialize : function() {\r\n\t\tJsonix.Mapping.Style.prototype.initialize.apply(this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style.Standard'\r\n});\r\nJsonix.Mapping.Style.STYLES.standard = new Jsonix.Mapping.Style.Standard();\r\n\nJsonix.Mapping.Style.Simplified = Jsonix.Class(Jsonix.Mapping.Style, {\r\n\tmarshaller : Jsonix.Binding.Marshaller.Simplified,\r\n\tunmarshaller : Jsonix.Binding.Unmarshaller.Simplified,\r\n\tmodule : Jsonix.Model.Module,\r\n\telementInfo : Jsonix.Model.ElementInfo,\r\n\tclassInfo : Jsonix.Model.ClassInfo,\r\n\tenumLeafInfo : Jsonix.Model.EnumLeafInfo,\r\n\tanyAttributePropertyInfo : Jsonix.Model.AnyAttributePropertyInfo.Simplified,\r\n\tanyElementPropertyInfo : Jsonix.Model.AnyElementPropertyInfo.Simplified,\r\n\tattributePropertyInfo : Jsonix.Model.AttributePropertyInfo,\r\n\telementMapPropertyInfo : Jsonix.Model.ElementMapPropertyInfo,\r\n\telementPropertyInfo : Jsonix.Model.ElementPropertyInfo,\r\n\telementsPropertyInfo : Jsonix.Model.ElementsPropertyInfo,\r\n\telementRefPropertyInfo : Jsonix.Model.ElementRefPropertyInfo.Simplified,\r\n\telementRefsPropertyInfo : Jsonix.Model.ElementRefsPropertyInfo.Simplified,\r\n\tvaluePropertyInfo : Jsonix.Model.ValuePropertyInfo,\r\n\tinitialize : function() {\r\n\t\tJsonix.Mapping.Style.prototype.initialize.apply(this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style.Simplified'\r\n});\r\nJsonix.Mapping.Style.STYLES.simplified = new Jsonix.Mapping.Style.Simplified();\r\n\nJsonix.Schema.XSD = {};\r\nJsonix.Schema.XSD.NAMESPACE_URI = 'http://www.w3.org/2001/XMLSchema';\r\nJsonix.Schema.XSD.PREFIX = 'xsd';\r\nJsonix.Schema.XSD.qname = function(localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\treturn new Jsonix.XML.QName(Jsonix.Schema.XSD.NAMESPACE_URI, localPart,\r\n\t\t\tJsonix.Schema.XSD.PREFIX);\r\n};\r\n\nJsonix.Schema.XSD.AnyType = Jsonix.Class(Jsonix.Model.ClassInfo, {\r\n\ttypeName : Jsonix.Schema.XSD.qname('anyType'),\r\n\tinitialize : function() {\r\n\t\tJsonix.Model.ClassInfo.prototype.initialize.call(this, {\r\n\t\t\tname : 'AnyType',\r\n\t\t\tpropertyInfos : [ {\r\n\t\t\t\ttype : 'anyAttribute',\r\n\t\t\t\tname : 'attributes'\r\n\t\t\t}, {\r\n\t\t\t\ttype : 'anyElement',\r\n\t\t\t\tname : 'content',\r\n\t\t\t\tcollection : true\r\n\t\t\t} ]\r\n\t\t});\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnyType'\r\n});\r\nJsonix.Schema.XSD.AnyType.INSTANCE = new Jsonix.Schema.XSD.AnyType();\nJsonix.Schema.XSD.AnySimpleType = Jsonix.Class(Jsonix.Model.TypeInfo, {\r\n\tname : 'AnySimpleType',\r\n\ttypeName : Jsonix.Schema.XSD.qname('anySimpleType'),\r\n\tinitialize : function() {\r\n\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t},\t\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn true;\r\n\t},\r\n\treprint : function(value, context, output, scope) {\r\n\t\t// Only reprint when the value is a string but not an instance\r\n\t\tif (Jsonix.Util.Type.isString(value) && !this.isInstance(value, context, scope)) {\r\n\t\t\t// Using null as input as input is not available\r\n\t\t\treturn this.print(this.parse(value, context, null, scope), context, output, scope);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn this.print(value, context, output, scope);\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\tif (Jsonix.Util.StringUtils.isNotBlank(text)) {\r\n\t\t\treturn this.parse(text, context, input, scope);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeCharacters(this.reprint(value, context, output, scope));\r\n\t\t}\r\n\t},\r\n\tbuild: function(context, module)\r\n\t{\r\n\t\t// Nothing to do\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnySimpleType'\r\n});\r\nJsonix.Schema.XSD.AnySimpleType.INSTANCE = new Jsonix.Schema.XSD.AnySimpleType();\nJsonix.Schema.XSD.List = Jsonix\r\n\t\t.Class(\r\n\t\t\t\tJsonix.Schema.XSD.AnySimpleType,\r\n\t\t\t\t{\r\n\t\t\t\t\tname : null,\r\n\t\t\t\t\ttypeName : null,\r\n\t\t\t\t\ttypeInfo : null,\r\n\t\t\t\t\tseparator : ' ',\r\n\t\t\t\t\ttrimmedSeparator : Jsonix.Util.StringUtils.whitespaceCharacters,\r\n\t\t\t\t\tsimpleType : true,\r\n\t\t\t\t\tbuilt : false,\r\n\t\t\t\t\tinitialize : function(typeInfo, typeName, separator) {\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureExists(typeInfo);\r\n\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\tthis.typeInfo = typeInfo;\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(this.name)) {\r\n\t\t\t\t\t\t\tthis.name = typeInfo.name + \"*\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(typeName)) {\r\n\t\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\t\tthis.typeName = typeName;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.isString(separator)) {\r\n\t\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\t\tthis.separator = separator;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.separator = ' ';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar trimmedSeparator = Jsonix.Util.StringUtils\r\n\t\t\t\t\t\t\t\t.trim(this.separator);\r\n\t\t\t\t\t\tif (trimmedSeparator.length === 0) {\r\n\t\t\t\t\t\t\tthis.trimmedSeparator = Jsonix.Util.StringUtils.whitespaceCharacters;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.trimmedSeparator = trimmedSeparator;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbuild : function(context, module) {\r\n\t\t\t\t\t\tif (!this.built) {\r\n\t\t\t\t\t\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t\t\t\t\t\t\tthis.built = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tprint : function(value, context, output, scope) {\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// TODO Exception if not an array\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\t\t\t\tvar result = '';\r\n\t\t\t\t\t\tfor ( var index = 0; index < value.length; index++) {\r\n\t\t\t\t\t\t\tif (index > 0) {\r\n\t\t\t\t\t\t\t\tresult = result + this.separator;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult = result + this.typeInfo.reprint(value[index], context, output, scope);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tparse : function(text, context, input, scope) {\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\t\t\t\t\tvar items = Jsonix.Util.StringUtils\r\n\t\t\t\t\t\t\t\t.splitBySeparatorChars(text,\r\n\t\t\t\t\t\t\t\t\t\tthis.trimmedSeparator);\r\n\t\t\t\t\t\tvar result = [];\r\n\t\t\t\t\t\tfor ( var index = 0; index < items.length; index++) {\r\n\t\t\t\t\t\t\tresult.push(this.typeInfo\r\n\t\t\t\t\t\t\t\t\t.parse(Jsonix.Util.StringUtils.trim(items[index]), context, input, scope));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// TODO isInstance?\r\n\t\t\t\t\tCLASS_NAME : 'Jsonix.Schema.XSD.List'\r\n\t\t\t\t});\r\n\nJsonix.Schema.XSD.String = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'String',\r\n\ttypeName : Jsonix.Schema.XSD.qname('string'),\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.parse(text, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isString(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.String'\r\n});\r\nJsonix.Schema.XSD.String.INSTANCE = new Jsonix.Schema.XSD.String();\r\nJsonix.Schema.XSD.String.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.String.INSTANCE);\nJsonix.Schema.XSD.Strings = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'Strings',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.String.INSTANCE, Jsonix.Schema.XSD.qname('strings'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Strings'\r\n});\r\nJsonix.Schema.XSD.Strings.INSTANCE = new Jsonix.Schema.XSD.Strings();\nJsonix.Schema.XSD.NormalizedString = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'NormalizedString',\r\n\ttypeName : Jsonix.Schema.XSD.qname('normalizedString'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NormalizedString'\r\n});\r\nJsonix.Schema.XSD.NormalizedString.INSTANCE = new Jsonix.Schema.XSD.NormalizedString();\r\nJsonix.Schema.XSD.NormalizedString.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.NormalizedString.INSTANCE);\nJsonix.Schema.XSD.Token = Jsonix.Class(Jsonix.Schema.XSD.NormalizedString, {\r\n\tname : 'Token',\r\n\ttypeName : Jsonix.Schema.XSD.qname('token'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Token'\r\n});\r\nJsonix.Schema.XSD.Token.INSTANCE = new Jsonix.Schema.XSD.Token();\r\nJsonix.Schema.XSD.Token.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Token.INSTANCE);\nJsonix.Schema.XSD.Language = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'Language',\r\n\ttypeName : Jsonix.Schema.XSD.qname('language'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Language'\r\n});\r\nJsonix.Schema.XSD.Language.INSTANCE = new Jsonix.Schema.XSD.Language();\r\nJsonix.Schema.XSD.Language.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Language.INSTANCE);\nJsonix.Schema.XSD.Name = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'Name',\r\n\ttypeName : Jsonix.Schema.XSD.qname('Name'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Name'\r\n});\r\nJsonix.Schema.XSD.Name.INSTANCE = new Jsonix.Schema.XSD.Name();\r\nJsonix.Schema.XSD.Name.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Name.INSTANCE);\nJsonix.Schema.XSD.NCName = Jsonix.Class(Jsonix.Schema.XSD.Name, {\r\n\tname : 'NCName',\r\n\ttypeName : Jsonix.Schema.XSD.qname('NCName'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NCName'\r\n});\r\nJsonix.Schema.XSD.NCName.INSTANCE = new Jsonix.Schema.XSD.NCName();\r\nJsonix.Schema.XSD.NCName.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.NCName.INSTANCE);\nJsonix.Schema.XSD.NMToken = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'NMToken',\r\n\ttypeName : Jsonix.Schema.XSD.qname('NMTOKEN'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NMToken'\r\n});\r\nJsonix.Schema.XSD.NMToken.INSTANCE = new Jsonix.Schema.XSD.NMToken();\nJsonix.Schema.XSD.NMTokens = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'NMTokens',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.NMToken.INSTANCE, Jsonix.Schema.XSD.qname('NMTOKEN'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NMTokens'\r\n});\r\nJsonix.Schema.XSD.NMTokens.INSTANCE = new Jsonix.Schema.XSD.NMTokens();\nJsonix.Schema.XSD.Boolean = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Boolean',\r\n\ttypeName : Jsonix.Schema.XSD.qname('boolean'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureBoolean(value);\r\n\t\treturn value ? 'true' : 'false';\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text === 'true' || text === '1') {\r\n\t\t\treturn true;\r\n\t\t} else if (text === 'false' || text === '0') {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Either [true], [1], [0] or [false] expected as boolean value.\");\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isBoolean(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Boolean'\r\n});\r\nJsonix.Schema.XSD.Boolean.INSTANCE = new Jsonix.Schema.XSD.Boolean();\r\nJsonix.Schema.XSD.Boolean.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Boolean.INSTANCE);\nJsonix.Schema.XSD.Base64Binary = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Base64Binary',\r\n\ttypeName : Jsonix.Schema.XSD.qname('base64Binary'),\r\n\tcharToByte : {},\r\n\tbyteToChar : [],\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.AnySimpleType.prototype.initialize.apply(this);\r\n\t\t// Initialize charToByte and byteToChar table for fast\r\n\t\t// lookups\r\n\t\tvar charTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t\tfor (var i = 0; i < charTable.length; i++) {\r\n\t\t\tvar _char = charTable.charAt(i);\r\n\t\t\tvar _byte = charTable.charCodeAt(i);\r\n\t\t\tthis.byteToChar[i] = _char;\r\n\t\t\tthis.charToByte[_char] = i;\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\treturn this.encode(value);\r\n\t},\r\n\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn this.decode(text);\r\n\t},\r\n\tencode : function(uarray) {\r\n\t\tvar output = \"\";\r\n\t\tvar byte0;\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar char0;\r\n\t\tvar char1;\r\n\t\tvar char2;\r\n\t\tvar char3;\r\n\t\tvar i = 0;\r\n\t\tvar j = 0;\r\n\t\tvar length = uarray.length;\r\n\r\n\t\tfor (i = 0; i < length; i += 3) {\r\n\t\t\tbyte0 = uarray[i] & 0xFF;\r\n\t\t\tchar0 = this.byteToChar[byte0 >> 2];\r\n\r\n\t\t\tif (i + 1 < length) {\r\n\t\t\t\tbyte1 = uarray[i + 1] & 0xFF;\r\n\t\t\t\tchar1 = this.byteToChar[((byte0 & 0x03) << 4) | (byte1 >> 4)];\r\n\t\t\t\tif (i + 2 < length) {\r\n\t\t\t\t\tbyte2 = uarray[i + 2] & 0xFF;\r\n\t\t\t\t\tchar2 = this.byteToChar[((byte1 & 0x0F) << 2) | (byte2 >> 6)];\r\n\t\t\t\t\tchar3 = this.byteToChar[byte2 & 0x3F];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchar2 = this.byteToChar[(byte1 & 0x0F) << 2];\r\n\t\t\t\t\tchar3 = \"=\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tchar1 = this.byteToChar[(byte0 & 0x03) << 4];\r\n\t\t\t\tchar2 = \"=\";\r\n\t\t\t\tchar3 = \"=\";\r\n\t\t\t}\r\n\t\t\toutput = output + char0 + char1 + char2 + char3;\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\tdecode : function(text) {\r\n\r\n\t\tinput = text.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\tvar length = (input.length / 4) * 3;\r\n\t\tif (input.charAt(input.length - 1) === \"=\") {\r\n\t\t\tlength--;\r\n\t\t}\r\n\t\tif (input.charAt(input.length - 2) === \"=\") {\r\n\t\t\tlength--;\r\n\t\t}\r\n\r\n\t\tvar uarray = new Array(length);\r\n\r\n\t\tvar byte0;\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar char0;\r\n\t\tvar char1;\r\n\t\tvar char2;\r\n\t\tvar char3;\r\n\t\tvar i = 0;\r\n\t\tvar j = 0;\r\n\r\n\t\tfor (i = 0; i < length; i += 3) {\r\n\t\t\t// get the 3 octects in 4 ascii chars\r\n\t\t\tchar0 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar1 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar2 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar3 = this.charToByte[input.charAt(j++)];\r\n\r\n\t\t\tbyte0 = (char0 << 2) | (char1 >> 4);\r\n\t\t\tbyte1 = ((char1 & 0x0F) << 4) | (char2 >> 2);\r\n\t\t\tbyte2 = ((char2 & 0x03) << 6) | char3;\r\n\r\n\t\t\tuarray[i] = byte0;\r\n\t\t\tif (char2 != 64) {\r\n\t\t\t\tuarray[i + 1] = byte1;\r\n\t\t\t}\r\n\t\t\tif (char3 != 64) {\r\n\t\t\t\tuarray[i + 2] = byte2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn uarray;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isArray(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Base64Binary'\r\n});\r\nJsonix.Schema.XSD.Base64Binary.INSTANCE = new Jsonix.Schema.XSD.Base64Binary();\r\nJsonix.Schema.XSD.Base64Binary.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Base64Binary.INSTANCE);\nJsonix.Schema.XSD.HexBinary = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'HexBinary',\r\n\ttypeName : Jsonix.Schema.XSD.qname('hexBinary'),\r\n\tcharToQuartet : {},\r\n\tbyteToDuplet : [],\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.AnySimpleType.prototype.initialize.apply(this);\r\n\t\tvar charTableUpperCase = \"0123456789ABCDEF\";\r\n\t\tvar charTableLowerCase = charTableUpperCase.toLowerCase();\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < 16; i++) {\r\n\t\t\tthis.charToQuartet[charTableUpperCase.charAt(i)] = i;\r\n\t\t\tif (i >= 0xA) {\r\n\t\t\t\tthis.charToQuartet[charTableLowerCase.charAt(i)] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i = 0; i < 256; i++) {\r\n\t\t\tthis.byteToDuplet[i] =\r\n\t\t\t//\r\n\t\t\tcharTableUpperCase[i >> 4] + charTableUpperCase[i & 0xF];\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\treturn this.encode(value);\r\n\t},\r\n\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn this.decode(text);\r\n\t},\r\n\tencode : function(uarray) {\r\n\t\tvar output = \"\";\r\n\t\tfor ( var i = 0; i < uarray.length; i++) {\r\n\t\t\toutput = output + this.byteToDuplet[uarray[i] & 0xFF];\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\tdecode : function(text) {\r\n\t\tvar input = text.replace(/[^A-Fa-f0-9]/g, \"\");\r\n\t\t// Round by two\r\n\t\tvar length = input.length >> 1;\r\n\t\tvar uarray = new Array(length);\r\n\t\tfor ( var i = 0; i < length; i++) {\r\n\t\t\tvar char0 = input.charAt(2 * i);\r\n\t\t\tvar char1 = input.charAt(2 * i + 1);\r\n\t\t\tuarray[i] = this.charToQuartet[char0] << 4\r\n\t\t\t\t\t| this.charToQuartet[char1];\r\n\t\t}\r\n\t\treturn uarray;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isArray(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.HexBinary'\r\n});\r\nJsonix.Schema.XSD.HexBinary.INSTANCE = new Jsonix.Schema.XSD.HexBinary();\r\nJsonix.Schema.XSD.HexBinary.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.HexBinary.INSTANCE);\nJsonix.Schema.XSD.Number = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Number',\r\n\ttypeName : Jsonix.Schema.XSD.qname('number'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureNumberOrNaN(value);\r\n\t\tif (Jsonix.Util.Type.isNaN(value)) {\r\n\t\t\treturn 'NaN';\r\n\t\t} else if (value === Infinity) {\r\n\t\t\treturn 'INF';\r\n\t\t} else if (value === -Infinity) {\r\n\t\t\treturn '-INF';\r\n\t\t} else {\r\n\t\t\tvar text = String(value);\r\n\t\t\treturn text;\r\n\t\t}\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text === '-INF') {\r\n\t\t\treturn -Infinity;\r\n\t\t} else if (text === 'INF') {\r\n\t\t\treturn Infinity;\r\n\t\t} else if (text === 'NaN') {\r\n\t\t\treturn NaN;\r\n\t\t} else {\r\n\t\t\tvar value = Number(text);\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\t\treturn value;\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNumberOrNaN(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Number'\r\n});\r\nJsonix.Schema.XSD.Number.INSTANCE = new Jsonix.Schema.XSD.Number();\r\nJsonix.Schema.XSD.Number.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Number.INSTANCE);\nJsonix.Schema.XSD.Float = Jsonix.Class(Jsonix.Schema.XSD.Number, {\r\n\tname : 'Float',\r\n\ttypeName : Jsonix.Schema.XSD.qname('float'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNaN(value) || value === -Infinity || value === Infinity || (Jsonix.Util.Type.isNumber(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE);\r\n\t},\r\n\tMIN_VALUE : -3.4028235e+38,\r\n\tMAX_VALUE : 3.4028235e+38,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Float'\r\n});\r\nJsonix.Schema.XSD.Float.INSTANCE = new Jsonix.Schema.XSD.Float();\r\nJsonix.Schema.XSD.Float.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Float.INSTANCE);\nJsonix.Schema.XSD.Decimal = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Decimal',\r\n\ttypeName : Jsonix.Schema.XSD.qname('decimal'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\tvar text = String(value);\r\n\t\treturn text;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar value = Number(text);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\treturn value;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNumber(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Decimal'\r\n});\r\nJsonix.Schema.XSD.Decimal.INSTANCE = new Jsonix.Schema.XSD.Decimal();\r\nJsonix.Schema.XSD.Decimal.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Decimal.INSTANCE);\nJsonix.Schema.XSD.Integer = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Integer',\r\n\ttypeName : Jsonix.Schema.XSD.qname('integer'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\tvar text = String(value);\r\n\t\treturn text;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar value = Number(text);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\treturn value;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.NumberUtils.isInteger(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE;\r\n\t},\r\n\tMIN_VALUE : -9223372036854775808,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Integer'\r\n});\r\nJsonix.Schema.XSD.Integer.INSTANCE = new Jsonix.Schema.XSD.Integer();\r\nJsonix.Schema.XSD.Integer.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Integer.INSTANCE);\nJsonix.Schema.XSD.NonPositiveInteger = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'NonPositiveInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('nonPositiveInteger'),\r\n\tMIN_VALUE: -9223372036854775808,\r\n\tMAX_VALUE: 0,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NonPositiveInteger'\r\n});\r\nJsonix.Schema.XSD.NonPositiveInteger.INSTANCE = new Jsonix.Schema.XSD.NonPositiveInteger();\r\nJsonix.Schema.XSD.NonPositiveInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NonPositiveInteger.INSTANCE);\nJsonix.Schema.XSD.NegativeInteger = Jsonix.Class(Jsonix.Schema.XSD.NonPositiveInteger, {\r\n\tname : 'NegativeInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('negativeInteger'),\r\n\tMIN_VALUE: -9223372036854775808,\r\n\tMAX_VALUE: -1,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NegativeInteger'\r\n});\r\nJsonix.Schema.XSD.NegativeInteger.INSTANCE = new Jsonix.Schema.XSD.NegativeInteger();\r\nJsonix.Schema.XSD.NegativeInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NegativeInteger.INSTANCE);\nJsonix.Schema.XSD.Long = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'Long',\r\n\ttypeName : Jsonix.Schema.XSD.qname('long'),\r\n\tMIN_VALUE : -9223372036854775808,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Long'\r\n});\r\nJsonix.Schema.XSD.Long.INSTANCE = new Jsonix.Schema.XSD.Long();\r\nJsonix.Schema.XSD.Long.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.Long.INSTANCE);\nJsonix.Schema.XSD.Int = Jsonix.Class(Jsonix.Schema.XSD.Long, {\r\n\tname : 'Int',\r\n\ttypeName : Jsonix.Schema.XSD.qname('int'),\r\n\tMIN_VALUE : -2147483648,\r\n\tMAX_VALUE : 2147483647,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Int'\r\n});\r\nJsonix.Schema.XSD.Int.INSTANCE = new Jsonix.Schema.XSD.Int();\r\nJsonix.Schema.XSD.Int.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.Int.INSTANCE);\nJsonix.Schema.XSD.Short = Jsonix.Class(Jsonix.Schema.XSD.Int, {\r\n\tname : 'Short',\r\n\ttypeName : Jsonix.Schema.XSD.qname('short'),\r\n\tMIN_VALUE : -32768,\r\n\tMAX_VALUE : 32767,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Short'\r\n});\r\nJsonix.Schema.XSD.Short.INSTANCE = new Jsonix.Schema.XSD.Short();\r\nJsonix.Schema.XSD.Short.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Short.INSTANCE);\nJsonix.Schema.XSD.Byte = Jsonix.Class(Jsonix.Schema.XSD.Short, {\r\n\tname : 'Byte',\r\n\ttypeName : Jsonix.Schema.XSD.qname('byte'),\r\n\tMIN_VALUE : -128,\r\n\tMAX_VALUE : 127,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Byte'\r\n});\r\nJsonix.Schema.XSD.Byte.INSTANCE = new Jsonix.Schema.XSD.Byte();\r\nJsonix.Schema.XSD.Byte.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Byte.INSTANCE);\nJsonix.Schema.XSD.NonNegativeInteger = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'NonNegativeInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('nonNegativeInteger'),\r\n\tMIN_VALUE: 0,\r\n\tMAX_VALUE: 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NonNegativeInteger'\r\n});\r\nJsonix.Schema.XSD.NonNegativeInteger.INSTANCE = new Jsonix.Schema.XSD.NonNegativeInteger();\r\nJsonix.Schema.XSD.NonNegativeInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NonNegativeInteger.INSTANCE);\nJsonix.Schema.XSD.UnsignedLong = Jsonix.Class(Jsonix.Schema.XSD.NonNegativeInteger, {\r\n\tname : 'UnsignedLong',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedLong'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 18446744073709551615,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedLong'\r\n});\r\nJsonix.Schema.XSD.UnsignedLong.INSTANCE = new Jsonix.Schema.XSD.UnsignedLong();\r\nJsonix.Schema.XSD.UnsignedLong.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedLong.INSTANCE);\nJsonix.Schema.XSD.UnsignedInt = Jsonix.Class(Jsonix.Schema.XSD.UnsignedLong, {\r\n\tname : 'UnsignedInt',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedInt'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 4294967295,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedInt'\r\n});\r\nJsonix.Schema.XSD.UnsignedInt.INSTANCE = new Jsonix.Schema.XSD.UnsignedInt();\r\nJsonix.Schema.XSD.UnsignedInt.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedInt.INSTANCE);\nJsonix.Schema.XSD.UnsignedShort = Jsonix.Class(Jsonix.Schema.XSD.UnsignedInt, {\r\n\tname : 'UnsignedShort',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedShort'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 65535,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedShort'\r\n});\r\nJsonix.Schema.XSD.UnsignedShort.INSTANCE = new Jsonix.Schema.XSD.UnsignedShort();\r\nJsonix.Schema.XSD.UnsignedShort.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedShort.INSTANCE);\nJsonix.Schema.XSD.UnsignedByte = Jsonix.Class(Jsonix.Schema.XSD.UnsignedShort, {\r\n\tname : 'UnsignedByte',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedByte'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 255,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedByte'\r\n});\r\nJsonix.Schema.XSD.UnsignedByte.INSTANCE = new Jsonix.Schema.XSD.UnsignedByte();\r\nJsonix.Schema.XSD.UnsignedByte.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedByte.INSTANCE);\nJsonix.Schema.XSD.PositiveInteger = Jsonix.Class(Jsonix.Schema.XSD.NonNegativeInteger, {\r\n\tname : 'PositiveInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('positiveInteger'),\r\n\tMIN_VALUE : 1,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.PositiveInteger'\r\n});\r\nJsonix.Schema.XSD.PositiveInteger.INSTANCE = new Jsonix.Schema.XSD.PositiveInteger();\r\nJsonix.Schema.XSD.PositiveInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.PositiveInteger.INSTANCE);\nJsonix.Schema.XSD.Double = Jsonix.Class(Jsonix.Schema.XSD.Number, {\r\n\tname : 'Double',\r\n\ttypeName : Jsonix.Schema.XSD.qname('double'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNaN(value) || value === -Infinity || value === Infinity || (Jsonix.Util.Type.isNumber(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE);\r\n\t},\r\n\tMIN_VALUE : -1.7976931348623157e+308,\r\n\tMAX_VALUE : 1.7976931348623157e+308,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Double'\r\n});\r\nJsonix.Schema.XSD.Double.INSTANCE = new Jsonix.Schema.XSD.Double();\r\nJsonix.Schema.XSD.Double.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Double.INSTANCE);\nJsonix.Schema.XSD.AnyURI = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'AnyURI',\r\n\ttypeName : Jsonix.Schema.XSD.qname('anyURI'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isString(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnyURI'\r\n});\r\nJsonix.Schema.XSD.AnyURI.INSTANCE = new Jsonix.Schema.XSD.AnyURI();\r\nJsonix.Schema.XSD.AnyURI.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.AnyURI.INSTANCE);\nJsonix.Schema.XSD.QName = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'QName',\r\n\ttypeName : Jsonix.Schema.XSD.qname('QName'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tvar qName = Jsonix.XML.QName.fromObject(value);\r\n\t\tvar prefix;\r\n\t\tvar localPart = qName.localPart;\r\n\t\tif (output) {\r\n\t\t\t// If QName does not provide the prefix, let it be generated\r\n\t\t\tprefix = output.getPrefix(qName.namespaceURI, qName.prefix||null);\r\n\t\t\toutput.declareNamespace(qName.namespaceURI, prefix);\r\n\t\t} else {\r\n\t\t\tprefix = qName.prefix;\r\n\t\t}\r\n\t\treturn !prefix ? localPart : (prefix + ':' + localPart);\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\tvalue = Jsonix.Util.StringUtils.trim(value);\r\n\t\tvar prefix;\r\n\t\tvar localPart;\r\n\t\tvar colonPosition = value.indexOf(':');\r\n\t\tif (colonPosition === -1) {\r\n\t\t\tprefix = '';\r\n\t\t\tlocalPart = value;\r\n\t\t} else if (colonPosition > 0 && colonPosition < (value.length - 1)) {\r\n\t\t\tprefix = value.substring(0, colonPosition);\r\n\t\t\tlocalPart = value.substring(colonPosition + 1);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid QName [' + value + '].');\r\n\t\t}\r\n\t\tvar namespaceContext = input || context || null;\r\n\t\tif (!namespaceContext)\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar namespaceURI = namespaceContext.getNamespaceURI(prefix);\r\n\t\t\tif (Jsonix.Util.Type.isString(namespaceURI))\r\n\t\t\t{\r\n\t\t\t\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('Prefix [' + prefix + '] of the QName [' + value + '] is not bound in this context.');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn (value instanceof Jsonix.XML.QName) || (Jsonix.Util.Type.isObject(value) && Jsonix.Util.Type.isString(value.localPart || value.lp));\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.QName'\r\n});\r\nJsonix.Schema.XSD.QName.INSTANCE = new Jsonix.Schema.XSD.QName();\r\nJsonix.Schema.XSD.QName.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.QName.INSTANCE);\nJsonix.Schema.XSD.Calendar = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Calendar',\r\n\ttypeName : Jsonix.Schema.XSD.qname('calendar'),\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATETIME_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseDateTime(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATE_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseDate(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIME_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseTime(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGYearMonth(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGYear(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGMonthDay(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGMonth(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GDAY_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGDay(text, context, input, scope);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + text + '] does not match xs:dateTime, xs:date, xs:time, xs:gYearMonth, xs:gYear, xs:gMonthDay, xs:gMonth or xs:gDay patterns.');\r\n\t\t}\r\n\t},\r\n\tparseGYearMonth : function(value, context, input, scope) {\r\n\t\tvar gYearMonthExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN + \"$\");\r\n\t\tvar results = value.match(gYearMonthExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[7])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gYearMonth pattern.');\r\n\t},\r\n\tparseGYear : function(value, context, input, scope) {\r\n\t\tvar gYearExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_PATTERN + \"$\");\r\n\t\tvar results = value.match(gYearExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[5])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gYear pattern.');\r\n\t},\r\n\tparseGMonthDay : function(value, context, input, scope) {\r\n\t\tvar gMonthDayExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN + \"$\");\r\n\t\tvar results = value.match(gMonthDayExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tmonth : parseInt(results[2], 10),\r\n\t\t\t\tday : parseInt(results[3], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[5])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gMonthDay pattern.');\r\n\t},\r\n\tparseGMonth : function(value, context, input, scope) {\r\n\t\tvar gMonthExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_PATTERN + \"$\");\r\n\t\tvar results = value.match(gMonthExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tmonth : parseInt(results[2], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[3])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gMonth pattern.');\r\n\t},\r\n\tparseGDay : function(value, context, input, scope) {\r\n\t\tvar gDayExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GDAY_PATTERN + \"$\");\r\n\t\tvar results = value.match(gDayExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tday : parseInt(results[2], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[3])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gDay pattern.');\r\n\t},\r\n\tparseDateTime : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATETIME_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\tday : parseInt(results[7], 10),\r\n\t\t\t\thour : parseInt(results[9], 10),\r\n\t\t\t\tminute : parseInt(results[10], 10),\r\n\t\t\t\tsecond : parseInt(results[11], 10),\r\n\t\t\t\tfractionalSecond : (results[12] ? parseFloat(results[12]) : 0),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[14])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:date pattern.');\r\n\t},\r\n\tparseDate : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATE_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\tday : parseInt(results[7], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[9])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:date pattern.');\r\n\t},\r\n\tparseTime : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIME_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\thour : parseInt(results[1], 10),\r\n\t\t\t\tminute : parseInt(results[2], 10),\r\n\t\t\t\tsecond : parseInt(results[3], 10),\r\n\t\t\t\tfractionalSecond : (results[4] ? parseFloat(results[4]) : 0),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[6])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:time pattern.');\r\n\t},\r\n\tparseTimezoneString : function(text) {\r\n\t\t// (('+' | '-') hh ':' mm) | 'Z'\r\n\t\tif (!Jsonix.Util.Type.isString(text)) {\r\n\t\t\treturn NaN;\r\n\t\t} else if (text === '') {\r\n\t\t\treturn NaN;\r\n\t\t} else if (text === 'Z') {\r\n\t\t\treturn 0;\r\n\t\t} else if (text === '+14:00') {\r\n\t\t\treturn 14 * 60;\r\n\t\t} else if (text === '-14:00') {\r\n\t\t\treturn -14 * 60;\r\n\t\t} else {\r\n\t\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \"$\");\r\n\t\t\tvar results = text.match(expression);\r\n\t\t\tif (results !== null) {\r\n\t\t\t\tvar sign = results[1] === '+' ? 1 : -1;\r\n\t\t\t\tvar hour = parseInt(results[4], 10);\r\n\t\t\t\tvar minute = parseInt(results[5], 10);\r\n\t\t\t\treturn sign * (hour * 60 + minute);\r\n\t\t\t}\r\n\t\t\tthrow new Error('Value [' + value + '] does not match the timezone pattern.');\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day) && Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)) {\r\n\t\t\treturn this.printDateTime(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printDate(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)) {\r\n\t\t\treturn this.printTime(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month)) {\r\n\t\t\treturn this.printGYearMonth(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printGMonthDay(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year)) {\r\n\t\t\treturn this.printGYear(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.month)) {\r\n\t\t\treturn this.printGMonth(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printGDay(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + value + '] is not recognized as dateTime, date or time.');\r\n\t\t}\r\n\t},\r\n\tprintDateTime : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalString)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalString);\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\t\tvar result = this.printDateString(value);\r\n\t\tresult = result + 'T';\r\n\t\tresult = result + this.printTimeString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintDate : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.year);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.month);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.day);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\t\tvar result = this.printDateString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintTime : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalString)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalString);\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\r\n\t\tvar result = this.printTimeString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintDateString : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\treturn (value.year < 0 ? ('-' + this.printYear(-value.year)) : this.printYear(value.year)) + '-' + this.printMonth(value.month) + '-' + this.printDay(value.day);\r\n\t},\r\n\tprintTimeString : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalSecond)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalSecond);\r\n\t\t}\r\n\t\tvar result = this.printHour(value.hour);\r\n\t\tresult = result + ':';\r\n\t\tresult = result + this.printMinute(value.minute);\r\n\t\tresult = result + ':';\r\n\t\tresult = result + this.printSecond(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalSecond)) {\r\n\t\t\tresult = result + this.printFractionalSecond(value.fractionalSecond);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintTimezoneString : function(value) {\r\n\t\tif (!Jsonix.Util.Type.exists(value) || Jsonix.Util.Type.isNaN(value)) {\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\r\n\t\t\tvar sign = value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n\t\t\tvar data = value * sign;\r\n\t\t\tvar minute = data % 60;\r\n\t\t\tvar hour = Math.floor(data / 60);\r\n\r\n\t\t\tvar result;\r\n\t\t\tif (sign === 0) {\r\n\t\t\t\treturn 'Z';\r\n\t\t\t} else {\r\n\t\t\t\tif (sign > 0) {\r\n\t\t\t\t\tresult = '+';\r\n\t\t\t\t} else if (sign < 0) {\r\n\t\t\t\t\tresult = '-';\r\n\t\t\t\t}\r\n\t\t\t\tresult = result + this.printHour(hour);\r\n\t\t\t\tresult = result + ':';\r\n\t\t\t\tresult = result + this.printMinute(minute);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tprintGDay : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar day = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tday = value.getDate();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\t\tday = value.day;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateDay(day);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"---\" + this.printDay(day) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGMonth : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar month = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\t\tmonth = value.month;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateMonth(month);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"--\" + this.printMonth(month) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGMonthDay : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar month = undefined;\r\n\t\tvar day = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t\tday = value.getDate();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\t\tmonth = value.month;\r\n\t\t\tday = value.day;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateMonthDay(month, day);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"--\" + this.printMonth(month) + \"-\" + this.printDay(day) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGYear : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar year = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tyear = value.getFullYear();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\t\tyear = value.year;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateYear(year);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn this.printSignedYear(year) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGYearMonth : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar year = undefined;\r\n\t\tvar month = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tyear = value.getFullYear();\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\t\tyear = value.year;\r\n\t\t\tmonth = value.month;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateYear(year);\r\n\t\tJsonix.XML.Calendar.validateMonth(month);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn this.printSignedYear(year) + \"-\" + this.printMonth(month) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintSignedYear : function(value) {\r\n\t\treturn value < 0 ? (\"-\" + this.printYear(value * -1)) : (this.printYear(value));\r\n\t},\r\n\tprintYear : function(value) {\r\n\t\treturn this.printInteger(value, 4);\r\n\t},\r\n\tprintMonth : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintDay : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintHour : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintMinute : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintSecond : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintFractionalSecond : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\tif (value < 0 || value >= 1) {\r\n\t\t\tthrow new Error('Fractional second [' + value + '] must be between 0 and 1.');\r\n\t\t} else if (value === 0) {\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\tvar string = String(value);\r\n\t\t\tvar dotIndex = string.indexOf('.');\r\n\t\t\tif (dotIndex < 0) {\r\n\t\t\t\treturn '';\r\n\t\t\t} else {\r\n\t\t\t\treturn string.substring(dotIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tprintInteger : function(value, length) {\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(length);\r\n\t\tif (length <= 0) {\r\n\t\t\tthrow new Error('Length [' + value + '] must be positive.');\r\n\t\t}\r\n\t\tif (value < 0) {\r\n\t\t\tthrow new Error('Value [' + value + '] must not be negative.');\r\n\t\t}\r\n\t\tvar result = String(value);\r\n\t\tfor (var i = result.length; i < length; i++) {\r\n\t\t\tresult = '0' + result;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isObject(value) && ((Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) || (Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)));\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Calendar'\r\n});\r\n\r\nJsonix.Schema.XSD.Calendar.YEAR_PATTERN = \"-?([1-9][0-9]*)?((?!(0000))[0-9]{4})\";\r\nJsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN = \"Z|([\\\\-\\\\+])(((0[0-9]|1[0-3]):([0-5][0-9]))|(14:00))\";\r\nJsonix.Schema.XSD.Calendar.MONTH_PATTERN = \"(0[1-9]|1[0-2])\";\r\nJsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN = \"\\\\-\\\\-\" + Jsonix.Schema.XSD.Calendar.MONTH_PATTERN;\r\nJsonix.Schema.XSD.Calendar.DAY_PATTERN = \"(0[1-9]|[12][0-9]|3[01])\";\r\nJsonix.Schema.XSD.Calendar.SINGLE_DAY_PATTERN = \"\\\\-\\\\-\\\\-\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN;\r\nJsonix.Schema.XSD.Calendar.GYEAR_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GMONTH_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GDAY_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.DATE_PART_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.MONTH_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\";\r\nJsonix.Schema.XSD.Calendar.TIME_PART_PATTERN = \"([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\\\.([0-9]+))?\";\r\nJsonix.Schema.XSD.Calendar.TIME_PATTERN = Jsonix.Schema.XSD.Calendar.TIME_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.DATE_PATTERN = Jsonix.Schema.XSD.Calendar.DATE_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.DATETIME_PATTERN = Jsonix.Schema.XSD.Calendar.DATE_PART_PATTERN + 'T' + Jsonix.Schema.XSD.Calendar.TIME_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.INSTANCE = new Jsonix.Schema.XSD.Calendar();\r\nJsonix.Schema.XSD.Calendar.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Calendar.INSTANCE);\nJsonix.Schema.XSD.Duration = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Duration',\r\n\ttypeName : Jsonix.Schema.XSD.qname('duration'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isObject(value) && (\r\n\t\t\t\t(Jsonix.Util.Type.exists(value.sign) ? (value.sign === -1 || value.sign === 1) : true)\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.years) && value.years >=0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.months) && value.months >=0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.days) && value.days >= 0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.hours) && value.hours >= 0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.minutes) && value.minutes >= 0) ||\r\n\t\t\t\t(Jsonix.Util.Type.isNumber(value.seconds) && value.seconds >= 0) );\r\n\t},\r\n\tvalidate : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.sign)) {\r\n\t\t\tif (!(value.sign === 1 || value.sign === -1)) {\r\n\t\t\t\tthrow new Error(\"Sign of the duration [\" + value.sign + \"] must be either [1] or [-1].\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar empty = true;\r\n\t\tvar ifExistsEnsureUnsignedInteger = function(v, message) {\r\n\t\t\tif (Jsonix.Util.Type.exists(v)) {\r\n\t\t\t\tif (!(Jsonix.Util.NumberUtils.isInteger(v) && v >= 0)) {\r\n\t\t\t\t\tthrow new Error(message.replace(\"{0}\", v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar ifExistsEnsureUnsignedNumber = function(v, message) {\r\n\t\t\tif (Jsonix.Util.Type.exists(v)) {\r\n\t\t\t\tif (!(Jsonix.Util.Type.isNumber(v) && v >= 0)) {\r\n\t\t\t\t\tthrow new Error(message.replace(\"{0}\", v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.years, \"Number of years [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.months, \"Number of months [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.days, \"Number of days [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.hours, \"Number of hours [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.minutes, \"Number of minutes [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedNumber(value.seconds, \"Number of seconds [{0}] must be an unsigned number.\");\r\n\t\tif (empty) {\r\n\t\t\tthrow new Error(\"At least one of the components (years, months, days, hours, minutes, seconds) must be set.\");\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tthis.validate(value);\r\n\t\tvar result = '';\r\n\t\tif (value.sign === -1)\r\n\t\t{\r\n\t\t\tresult += '-';\r\n\t\t}\r\n\t\tresult += 'P';\r\n\t\tif (value.years) {\r\n\t\t\tresult += (value.years + 'Y');\r\n\t\t}\r\n\t\tif (value.months) {\r\n\t\t\tresult += (value.months + 'M');\r\n\t\t}\r\n\t\tif (value.days) {\r\n\t\t\tresult += (value.days + 'D');\r\n\t\t}\r\n\t\tif (value.hours || value.minutes || value.seconds)\r\n\t\t{\r\n\t\t\tresult += 'T';\r\n\t\t\tif (value.hours) {\r\n\t\t\t\tresult += (value.hours + 'H');\r\n\t\t\t}\r\n\t\t\tif (value.minutes) {\r\n\t\t\t\tresult += (value.minutes + 'M');\r\n\t\t\t}\r\n\t\t\tif (value.seconds) {\r\n\t\t\t\tresult += (value.seconds + 'S');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar durationExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Duration.PATTERN + \"$\");\r\n\t\tvar results = value.match(durationExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar empty = true;\r\n\t\t\tvar duration = {};\r\n\t\t\tif (results[1]) { duration.sign = -1; }\r\n\t\t\tif (results[3]) { duration.years = parseInt(results[3], 10); empty = false; }\r\n\t\t\tif (results[5]) { duration.months = parseInt(results[5], 10); empty = false; }\r\n\t\t\tif (results[7]) { duration.days = parseInt(results[7], 10); empty = false; }\r\n\t\t\tif (results[10]) { duration.hours = parseInt(results[10], 10); empty = false; }\r\n\t\t\tif (results[12]) { duration.minutes = parseInt(results[12], 10); empty = false; }\r\n\t\t\tif (results[14]) { duration.seconds = Number(results[14]); empty = false; }\r\n\t\t\treturn duration;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + value + '] does not match the duration pattern.');\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Duration'\r\n});\r\nJsonix.Schema.XSD.Duration.PATTERN = '(-)?P(([0-9]+)Y)?(([0-9]+)M)?(([0-9]+)D)?(T(([0-9]+)H)?(([0-9]+)M)?(([0-9]+(\\\\.[0-9]+)?)S)?)?';\r\nJsonix.Schema.XSD.Duration.INSTANCE = new Jsonix.Schema.XSD.Duration();\r\nJsonix.Schema.XSD.Duration.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Duration.INSTANCE);\nJsonix.Schema.XSD.DateTime = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateTime',\r\n\ttypeName : Jsonix.Schema.XSD.qname('dateTime'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseDateTime(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printDateTime(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateTime'\r\n});\r\nJsonix.Schema.XSD.DateTime.INSTANCE = new Jsonix.Schema.XSD.DateTime();\r\nJsonix.Schema.XSD.DateTime.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateTime.INSTANCE);\r\n\nJsonix.Schema.XSD.DateTimeAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateTimeAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('dateTime'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseDateTime(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(calendar.year);\r\n\t\tdate.setMonth(calendar.month - 1);\r\n\t\tdate.setDate(calendar.day);\r\n\t\tdate.setHours(calendar.hour);\r\n\t\tdate.setMinutes(calendar.minute);\r\n\t\tdate.setSeconds(calendar.second);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * (- timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = calendar.timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar timezone;\r\n\t\tvar localTimezone = - value.getTimezoneOffset();\r\n\t\tvar correctedValue;\r\n\t\t// If original time zone was unknown, print the given value without\r\n\t\t// the timezone\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printDateTime(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\tday : value.getDate(),\r\n\t\t\t\thour : value.getHours(),\r\n\t\t\t\tminute : value.getMinutes(),\r\n\t\t\t\tsecond : value.getSeconds(),\r\n\t\t\t\tfractionalSecond : (value.getMilliseconds() / 1000)\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// If original timezone was known, correct and print the value with the timezone\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\ttimezone = value.originalTimezone;\r\n\t\t\t\tcorrectedValue = new Date(value.getTime() - (60000 * ( - timezone + localTimezone)));\r\n\t\t\t}\r\n\t\t\t// If original timezone was not specified, do not correct and use the local time zone\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttimezone = localTimezone;\r\n\t\t\t\tcorrectedValue = value;\r\n\t\t\t}\r\n\t\t\tvar x = this.printDateTime(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : correctedValue.getFullYear(),\r\n\t\t\t\tmonth : correctedValue.getMonth() + 1,\r\n\t\t\t\tday : correctedValue.getDate(),\r\n\t\t\t\thour : correctedValue.getHours(),\r\n\t\t\t\tminute : correctedValue.getMinutes(),\r\n\t\t\t\tsecond : correctedValue.getSeconds(),\r\n\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\ttimezone: timezone\r\n\t\t\t}));\r\n\t\t\treturn x;\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateTimeAsDate'\r\n});\r\nJsonix.Schema.XSD.DateTimeAsDate.INSTANCE = new Jsonix.Schema.XSD.DateTimeAsDate();\r\nJsonix.Schema.XSD.DateTimeAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateTimeAsDate.INSTANCE);\r\n\nJsonix.Schema.XSD.Time = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'Time',\r\n\ttypeName : Jsonix.Schema.XSD.qname('time'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseTime(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printTime(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Time'\r\n});\r\nJsonix.Schema.XSD.Time.INSTANCE = new Jsonix.Schema.XSD.Time();\r\nJsonix.Schema.XSD.Time.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Time.INSTANCE);\nJsonix.Schema.XSD.TimeAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'TimeAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('time'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseTime(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(1970);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(calendar.hour);\r\n\t\tdate.setMinutes(calendar.minute);\r\n\t\tdate.setSeconds(calendar.second);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * ( - timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar time = value.getTime();\r\n\t\tif (time <= -86400000 && time >= 86400000) {\r\n\t\t\tthrow new Error('Invalid time [' + value + '].');\r\n\t\t}\r\n\t\t// Original timezone was unknown, just use current time, no timezone\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\thour : value.getHours(),\r\n\t\t\t\tminute : value.getMinutes(),\r\n\t\t\t\tsecond : value.getSeconds(),\r\n\t\t\t\tfractionalSecond : (value.getMilliseconds() / 1000)\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar correctedValue;\r\n\t\t\tvar timezone;\r\n\t\t\tvar localTimezone = - value.getTimezoneOffset();\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\ttimezone = value.originalTimezone;\r\n\t\t\t\tcorrectedValue = new Date(value.getTime() - (60000 * ( - timezone + localTimezone)));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttimezone = localTimezone;\r\n\t\t\t\tcorrectedValue = value;\r\n\t\t\t}\r\n\t\t\tvar correctedTime = correctedValue.getTime();\r\n\t\t\tif (correctedTime >= (- localTimezone * 60000)) {\r\n\t\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\t\thour : correctedValue.getHours(),\r\n\t\t\t\t\tminute : correctedValue.getMinutes(),\r\n\t\t\t\t\tsecond : correctedValue.getSeconds(),\r\n\t\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\t\ttimezone: timezone\r\n\t\t\t\t}));\r\n\t\t\t} else {\r\n\t\t\t\tvar timezoneHours = Math.ceil(-correctedTime / 3600000);\r\n\t\t\t\t\r\n\t\t\t\tvar correctedTimeInSeconds = correctedValue.getSeconds() +\r\n\t\t\t\t\tcorrectedValue.getMinutes() * 60 +\r\n\t\t\t\t\tcorrectedValue.getHours() * 3600 +\r\n\t\t\t\t\ttimezoneHours * 3600 -\r\n\t\t\t\t\ttimezone * 60;\r\n\t\t\t\t\r\n\t\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\t\thour : correctedTimeInSeconds % 86400,\r\n\t\t\t\t\tminute : correctedTimeInSeconds % 3600,\r\n\t\t\t\t\tsecond : correctedTimeInSeconds % 60,\r\n\t\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\t\ttimezone : timezoneHours * 60\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value) && value.getTime() > -86400000 && value.getTime() < 86400000;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.TimeAsDate'\r\n});\r\nJsonix.Schema.XSD.TimeAsDate.INSTANCE = new Jsonix.Schema.XSD.TimeAsDate();\r\nJsonix.Schema.XSD.TimeAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.TimeAsDate.INSTANCE);\nJsonix.Schema.XSD.Date = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'Date',\r\n\ttypeName : Jsonix.Schema.XSD.qname('date'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseDate(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Date'\r\n});\r\nJsonix.Schema.XSD.Date.INSTANCE = new Jsonix.Schema.XSD.Date();\r\nJsonix.Schema.XSD.Date.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Date.INSTANCE);\nJsonix.Schema.XSD.DateAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('date'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseDate(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(calendar.year);\r\n\t\tdate.setMonth(calendar.month - 1);\r\n\t\tdate.setDate(calendar.day);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * ( - timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar localDate = new Date(value.getTime());\r\n\t\tlocalDate.setHours(0);\r\n\t\tlocalDate.setMinutes(0);\r\n\t\tlocalDate.setSeconds(0);\r\n\t\tlocalDate.setMilliseconds(0);\r\n\t\t\r\n\t\t// Original timezone is unknown\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\tday : value.getDate()\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// If original timezone was known, correct and print the value with the timezone\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\tvar correctedValue = new Date(value.getTime() - (60000 * (- value.originalTimezone - value.getTimezoneOffset())));\r\n\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\tyear : correctedValue.getFullYear(),\r\n\t\t\t\t\tmonth : correctedValue.getMonth() + 1,\r\n\t\t\t\t\tday : correctedValue.getDate(),\r\n\t\t\t\t\ttimezone : value.originalTimezone\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t// If original timezone was not specified, do not correct and use the local time zone\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// We assume that the difference between the date value and local midnight\r\n\t\t\t\t// should be interpreted as a timezone offset.\r\n\t\t\t\t// In case there's no difference, we assume default/unknown timezone\r\n\t\t\t\tvar localTimezone = - value.getTime() + localDate.getTime();\r\n\t\t\t\tif (localTimezone === 0) {\r\n\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\t\t\tday : value.getDate()\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar timezone = localTimezone - (60000 * value.getTimezoneOffset());\r\n\t\t\t\t\tif (timezone >= -43200000) {\r\n\t\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\t\t\t\tday : value.getDate(),\r\n\t\t\t\t\t\t\ttimezone : Math.floor(timezone / 60000)\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar nextDay = new Date(value.getTime() + 86400000);\r\n\t\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\t\tyear : nextDay.getFullYear(),\r\n\t\t\t\t\t\t\tmonth : nextDay.getMonth() + 1,\r\n\t\t\t\t\t\t\tday : nextDay.getDate(),\r\n\t\t\t\t\t\t\ttimezone : (Math.floor(timezone / 60000) + 1440)\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateAsDate'\r\n});\r\nJsonix.Schema.XSD.DateAsDate.INSTANCE = new Jsonix.Schema.XSD.DateAsDate();\r\nJsonix.Schema.XSD.DateAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateAsDate.INSTANCE);\nJsonix.Schema.XSD.GYearMonth = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GYearMonth',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gYearMonth'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GYearMonth',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGYearMonth(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGYearMonth(value, context, output, scope);\r\n\t}\r\n\r\n});\r\nJsonix.Schema.XSD.GYearMonth.INSTANCE = new Jsonix.Schema.XSD.GYearMonth();\r\nJsonix.Schema.XSD.GYearMonth.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GYearMonth.INSTANCE);\nJsonix.Schema.XSD.GYear = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GYear',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gYear'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GYear',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGYear(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGYear(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GYear.INSTANCE = new Jsonix.Schema.XSD.GYear();\r\nJsonix.Schema.XSD.GYear.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GYear.INSTANCE);\nJsonix.Schema.XSD.GMonthDay = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GMonthDay',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gMonthDay'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GMonthDay',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGMonthDay(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGMonthDay(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GMonthDay.INSTANCE = new Jsonix.Schema.XSD.GMonthDay();\r\nJsonix.Schema.XSD.GMonthDay.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GMonthDay.INSTANCE);\nJsonix.Schema.XSD.GDay = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GDay',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gDay'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GDay',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGDay(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGDay(value, context, output, scope);\r\n\t}\r\n\r\n});\r\nJsonix.Schema.XSD.GDay.INSTANCE = new Jsonix.Schema.XSD.GDay();\r\nJsonix.Schema.XSD.GDay.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GDay.INSTANCE);\nJsonix.Schema.XSD.GMonth = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GMonth',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gMonth'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GMonth',\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGMonth(value, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGMonth(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GMonth.INSTANCE = new Jsonix.Schema.XSD.GMonth();\r\nJsonix.Schema.XSD.GMonth.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GMonth.INSTANCE);\nJsonix.Schema.XSD.ID = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'ID',\r\n\ttypeName : Jsonix.Schema.XSD.qname('ID'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.ID'\r\n});\r\nJsonix.Schema.XSD.ID.INSTANCE = new Jsonix.Schema.XSD.ID();\r\nJsonix.Schema.XSD.ID.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.ID.INSTANCE);\nJsonix.Schema.XSD.IDREF = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'IDREF',\r\n\ttypeName : Jsonix.Schema.XSD.qname('IDREF'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.IDREF'\r\n});\r\nJsonix.Schema.XSD.IDREF.INSTANCE = new Jsonix.Schema.XSD.IDREF();\r\nJsonix.Schema.XSD.IDREF.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.IDREF.INSTANCE);\nJsonix.Schema.XSD.IDREFS = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'IDREFS',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.IDREF.INSTANCE, Jsonix.Schema.XSD.qname('IDREFS'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.IDREFS'\r\n});\r\nJsonix.Schema.XSD.IDREFS.INSTANCE = new Jsonix.Schema.XSD.IDREFS();\nJsonix.Schema.XSI = {};\r\nJsonix.Schema.XSI.NAMESPACE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\nJsonix.Schema.XSI.PREFIX = 'xsi';\r\nJsonix.Schema.XSI.TYPE = 'type';\r\nJsonix.Schema.XSI.NIL = 'nil';\r\nJsonix.Schema.XSI.qname = function(localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\treturn new Jsonix.XML.QName(Jsonix.Schema.XSI.NAMESPACE_URI, localPart,\r\n\t\t\tJsonix.Schema.XSI.PREFIX);\r\n};\r\nJsonix.Schema.XSI.TYPE_QNAME = Jsonix.Schema.XSI.qname(Jsonix.Schema.XSI.TYPE);\r\n\nJsonix.Context = Jsonix\r\n\t\t.Class(Jsonix.Mapping.Styled, {\r\n\t\t\tmodules : [],\r\n\t\t\ttypeInfos : null,\r\n\t\t\ttypeNameKeyToTypeInfo : null,\r\n\t\t\telementInfos : null,\r\n\t\t\toptions : null,\r\n\t\t\tsubstitutionMembersMap : null,\r\n\t\t\tscopedElementInfosMap : null,\r\n\t\t\tsupportXsiType : true,\r\n\t\t\tinitialize : function(mappings, options) {\r\n\t\t\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [options]);\r\n\t\t\t\tthis.modules = [];\r\n\t\t\t\tthis.elementInfos = [];\r\n\t\t\t\tthis.typeInfos = {};\r\n\t\t\t\tthis.typeNameKeyToTypeInfo = {};\r\n\t\t\t\tthis.registerBuiltinTypeInfos();\r\n\t\t\t\tthis.namespacePrefixes = {};\r\n\t\t\t\tthis.prefixNamespaces = {};\r\n\t\t\t\tthis.substitutionMembersMap = {};\r\n\t\t\t\tthis.scopedElementInfosMap = {};\r\n\r\n\t\t\t\t// Initialize options\r\n\t\t\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isObject(options.namespacePrefixes)) {\r\n\t\t\t\t\t\tthis.namespacePrefixes = \r\n\t\t\t\t\t\t\tJsonix.Util.Type.cloneObject(options.namespacePrefixes, {});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isBoolean(options.supportXsiType)) {\r\n\t\t\t\t\t\tthis.supportXsiType = options.supportXsiType; \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Initialize prefix/namespace mapping\r\n\t\t\t\tfor (var ns in this.namespacePrefixes)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this.namespacePrefixes.hasOwnProperty(ns))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = this.namespacePrefixes[ns];\r\n\t\t\t\t\t\tthis.prefixNamespaces[p] = ns;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Initialize modules\r\n\t\t\t\tif (Jsonix.Util.Type.exists(mappings)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureArray(mappings);\r\n\t\t\t\t\t// Initialize modules\r\n\t\t\t\t\tvar index, mapping, module;\r\n\t\t\t\t\tfor (index = 0; index < mappings.length; index++) {\r\n\t\t\t\t\t\tmapping = mappings[index];\r\n\t\t\t\t\t\tmodule = this.createModule(mapping);\r\n\t\t\t\t\t\tthis.modules[index] = module;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.processModules();\r\n\t\t\t},\r\n\t\t\tcreateModule : function(mapping) {\r\n\t\t\t\tvar module;\r\n\t\t\t\tif (mapping instanceof this.mappingStyle.module) {\r\n\t\t\t\t\tmodule = mapping;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\t\t\tmodule = new this.mappingStyle.module(mapping, \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn module;\r\n\t\t\t},\r\n\t\t\tregisterBuiltinTypeInfos : function() {\r\n\t\t\t\tfor ( var index = 0; index < this.builtinTypeInfos.length; index++) {\r\n\t\t\t\t\tthis.registerTypeInfo(this.builtinTypeInfos[index]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprocessModules : function() {\r\n\t\t\t\tvar index, module;\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.registerTypeInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.buildTypeInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.registerElementInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.buildElementInfos(this);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tregisterTypeInfo : function(typeInfo) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(typeInfo);\r\n\t\t\t\tvar n = typeInfo.name||typeInfo.n||null;\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\t\t\tthis.typeInfos[n] = typeInfo;\r\n\t\t\t\tif (typeInfo.typeName && typeInfo.typeName.key)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.typeNameKeyToTypeInfo[typeInfo.typeName.key] = typeInfo;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresolveTypeInfo : function(mapping, module) {\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(mapping)) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else if (mapping instanceof Jsonix.Model.TypeInfo) {\r\n\t\t\t\t\treturn mapping;\r\n\t\t\t\t} else if (Jsonix.Util.Type.isString(mapping)) {\r\n\t\t\t\t\tvar typeInfoName;\r\n\t\t\t\t\t// If mapping starts with '.' consider it to be a local type name in this module\r\n\t\t\t\t\tif (mapping.length > 0 && mapping.charAt(0) === '.')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar n = module.name || module.n || undefined;\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureObject(module, 'Type info mapping can only be resolved if module is provided.');\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureString(n, 'Type info mapping can only be resolved if module name is provided.');\r\n\t\t\t\t\t\ttypeInfoName = n + mapping;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypeInfoName = mapping;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.typeInfos[typeInfoName]) {\r\n\t\t\t\t\t\tthrow new Error('Type info [' + typeInfoName + '] is not known in this context.');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.typeInfos[typeInfoName];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(module, 'Type info mapping can only be resolved if module is provided.');\r\n\t\t\t\t\tvar typeInfo = module.createTypeInfo(mapping);\r\n\t\t\t\t\ttypeInfo.build(this, module);\r\n\t\t\t\t\treturn typeInfo;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tregisterElementInfo : function(elementInfo, module) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(elementInfo);\r\n\t\t\t\tthis.elementInfos.push(elementInfo);\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.exists(elementInfo.substitutionHead)) {\r\n\t\t\t\t\tvar substitutionHead = elementInfo.substitutionHead;\r\n\t\t\t\t\tvar substitutionHeadKey = substitutionHead.key;\r\n\t\t\t\t\tvar substitutionMembers = this.substitutionMembersMap[substitutionHeadKey];\r\n\r\n\t\t\t\t\tif (!Jsonix.Util.Type.isArray(substitutionMembers)) {\r\n\t\t\t\t\t\tsubstitutionMembers = [];\r\n\t\t\t\t\t\tthis.substitutionMembersMap[substitutionHeadKey] = substitutionMembers;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubstitutionMembers.push(elementInfo);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopeKey;\r\n\t\t\t\tif (Jsonix.Util.Type.exists(elementInfo.scope)) {\r\n\t\t\t\t\tscopeKey = this.resolveTypeInfo(elementInfo.scope, module).name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscopeKey = '##global';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopedElementInfos = this.scopedElementInfosMap[scopeKey];\r\n\r\n\t\t\t\tif (!Jsonix.Util.Type.isObject(scopedElementInfos)) {\r\n\t\t\t\t\tscopedElementInfos = {};\r\n\t\t\t\t\tthis.scopedElementInfosMap[scopeKey] = scopedElementInfos;\r\n\t\t\t\t}\r\n\t\t\t\tscopedElementInfos[elementInfo.elementName.key] = elementInfo;\r\n\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByValue : function(value)\r\n\t\t\t{\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(value))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(value))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar typeName = value.TYPE_NAME;\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(typeName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar typeInfoByName = this.getTypeInfoByName(typeName);\r\n\t\t\t\t\t\tif (typeInfoByName)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn typeInfoByName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\t// TODO public API\r\n\t\t\tgetTypeInfoByName : function(name) {\r\n\t\t\t\treturn this.typeInfos[name];\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByTypeName : function(typeName) {\r\n\t\t\t\tvar tn = Jsonix.XML.QName.fromObjectOrString(typeName, this);\r\n\t\t\t\treturn this.typeNameKeyToTypeInfo[tn.key];\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByTypeNameKey : function(typeNameKey) {\r\n\t\t\t\treturn this.typeNameKeyToTypeInfo[typeNameKey];\r\n\t\t\t},\r\n\t\t\tgetElementInfo : function(name, scope) {\r\n\t\t\t\tif (Jsonix.Util.Type.exists(scope)) {\r\n\t\t\t\t\tvar scopeKey = scope.name;\r\n\t\t\t\t\tvar scopedElementInfos = this.scopedElementInfosMap[scopeKey];\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(scopedElementInfos)) {\r\n\t\t\t\t\t\tvar scopedElementInfo = scopedElementInfos[name.key];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(scopedElementInfo)) {\r\n\t\t\t\t\t\t\treturn scopedElementInfo;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar globalScopeKey = '##global';\r\n\t\t\t\tvar globalScopedElementInfos = this.scopedElementInfosMap[globalScopeKey];\r\n\t\t\t\tif (Jsonix.Util.Type.exists(globalScopedElementInfos)) {\r\n\t\t\t\t\tvar globalScopedElementInfo = globalScopedElementInfos[name.key];\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(globalScopedElementInfo)) {\r\n\t\t\t\t\t\treturn globalScopedElementInfo;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t\t//\r\n\t\t\t\t// throw new Error(\"Element [\" + name.key\r\n\t\t\t\t// + \"] could not be found in the given context.\");\r\n\t\t\t},\r\n\t\t\tgetSubstitutionMembers : function(name) {\r\n\t\t\t\treturn this.substitutionMembersMap[Jsonix.XML.QName\r\n\t\t\t\t\t\t.fromObject(name).key];\r\n\t\t\t},\r\n\t\t\tcreateMarshaller : function() {\r\n\t\t\t\treturn new this.mappingStyle.marshaller(this);\r\n\t\t\t},\r\n\t\t\tcreateUnmarshaller : function() {\r\n\t\t\t\treturn new this.mappingStyle.unmarshaller(this);\r\n\t\t\t},\r\n\t\t\tgetNamespaceURI : function(prefix) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(prefix);\r\n\t\t\t\treturn this.prefixNamespaces[prefix];\r\n\t\t\t},\r\n\t\t\tgetPrefix : function(namespaceURI, defaultPrefix) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(namespaceURI);\r\n\t\t\t\tvar prefix = this.namespacePrefixes[namespaceURI];\r\n\t\t\t\tif (Jsonix.Util.Type.isString(prefix))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn prefix;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn defaultPrefix;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Builtin type infos.\r\n\t\t\t */\r\n\t\t\tbuiltinTypeInfos : [\r\n\t\t\t        Jsonix.Schema.XSD.AnyType.INSTANCE,\r\n\t\t\t        Jsonix.Schema.XSD.AnySimpleType.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.AnyURI.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Base64Binary.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Boolean.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Byte.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Calendar.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Date.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateTimeAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateTime.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Decimal.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Double.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Duration.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Float.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GDay.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GMonth.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GMonthDay.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GYear.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GYearMonth.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.HexBinary.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.ID.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.IDREF.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.IDREFS.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Int.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Integer.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Language.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Long.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Name.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NCName.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NegativeInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NMToken.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NMTokens.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NonNegativeInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NonPositiveInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NormalizedString.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Number.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.PositiveInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.QName.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Short.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.String.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Strings.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.TimeAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Time.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Token.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedByte.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedInt.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedLong.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedShort.INSTANCE ],\r\n\t\t\tCLASS_NAME : 'Jsonix.Context'\r\n\t\t});\n\t// Complete Jsonix script is included above\r\n\treturn { Jsonix: Jsonix };\r\n};\r\n\r\n// If the require function exists ...\r\nif (typeof require === 'function') {\r\n\t// ... but the define function does not exists\r\n\tif (typeof define !== 'function') {\r\n\t\t// Load the define function via amdefine\r\n\t\tvar define = require('amdefine')(module);\r\n\t\t// If we're not in browser\r\n\t\tif (typeof window === 'undefined')\r\n\t\t{\r\n\t\t\t// Require xmldom, xmlhttprequest and fs\r\n\t\t\tdefine([\"xmldom\", \"xmlhttprequest\", \"fs\"], _jsonix_factory);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// We're probably in browser, maybe browserify\r\n\t\t\t// Do not require xmldom, xmlhttprequest as they'r provided by the browser\r\n\t\t\t// Do not require fs since file system is not available anyway\r\n\t\t\tdefine([], _jsonix_factory);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Otherwise assume we're in the browser/RequireJS environment\r\n\t\t// Load the module without xmldom and xmlhttprequests dependencies\r\n\t\tdefine([], _jsonix_factory);\r\n\t}\r\n}\r\n// If the require function does not exists, we're not in Node.js and therefore in browser environment\r\nelse\r\n{\r\n\t// Just call the factory and set Jsonix as global.\r\n\tvar Jsonix = _jsonix_factory().Jsonix;\r\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonix/jsonix.js\n// module id = 74\n// module chunks = 4 5","var XLink_1_0_Module_Factory = function () {\n  var XLink_1_0 = {\n    n: 'XLink_1_0',\n    dens: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    dans: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    tis: [{\n        ln: 'ResourceType',\n        tn: 'resourceType',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'label',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LocatorType',\n        tn: 'locatorType',\n        ps: [{\n            n: 'locatorTitle',\n            mno: 0,\n            col: true,\n            en: 'title',\n            ti: '.TitleEltType'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'href',\n            rq: true,\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'label',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        ln: 'Extended',\n        tn: 'extended',\n        ps: [{\n            n: 'extendedModel',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'title',\n                ti: '.TitleEltType'\n              }, {\n                en: 'resource',\n                ti: '.ResourceType'\n              }, {\n                en: 'locator',\n                ti: '.LocatorType'\n              }, {\n                en: 'arc',\n                ti: '.ArcType'\n              }],\n            t: 'es'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }]\n      }, {\n        ln: 'Simple',\n        tn: 'simple',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'Token',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TitleEltType',\n        tn: 'titleEltType',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ArcType',\n        tn: 'arcType',\n        ps: [{\n            n: 'locatorTitle',\n            mno: 0,\n            col: true,\n            en: 'title',\n            ti: '.TitleEltType'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'from',\n            ti: 'NCName',\n            t: 'a'\n          }, {\n            n: 'to',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'TypeType',\n        bti: 'Token',\n        vs: ['simple', 'extended', 'title', 'resource', 'locator', 'arc']\n      }, {\n        t: 'enum',\n        ln: 'ShowType',\n        bti: 'Token',\n        vs: ['new', 'replace', 'embed', 'other', 'none']\n      }, {\n        t: 'enum',\n        ln: 'ActuateType',\n        bti: 'Token',\n        vs: ['onLoad', 'onRequest', 'other', 'none']\n      }],\n    eis: [{\n        en: 'arc',\n        ti: '.ArcType'\n      }, {\n        en: 'resource',\n        ti: '.ResourceType'\n      }, {\n        en: 'locator',\n        ti: '.LocatorType'\n      }, {\n        en: 'title',\n        ti: '.TitleEltType'\n      }]\n  };\n  return {\n    XLink_1_0: XLink_1_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], XLink_1_0_Module_Factory);\n}\nelse {\n  var XLink_1_0_Module = XLink_1_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.XLink_1_0 = XLink_1_0_Module.XLink_1_0;\n  }\n  else {\n    var XLink_1_0 = XLink_1_0_Module.XLink_1_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/w3c-schemas/lib/XLink_1_0.js\n// module id = 99\n// module chunks = 4 5"],"sourceRoot":""}