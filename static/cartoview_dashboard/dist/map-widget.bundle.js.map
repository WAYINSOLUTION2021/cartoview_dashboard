{"version":3,"sources":["webpack:///./src/components/FieldSet.jsx?d030*","webpack:///./src/events/Events.jsx?1090","webpack:///./~/events/events.js?7c71","webpack:///./~/boundless-sdk/util.js","webpack:///./~/boundless-sdk/services/MapConfigService.js","webpack:///./~/boundless-sdk/services/MapConfigTransformService.js","webpack:///./~/boundless-sdk/services/LayerIdService.js","webpack:///./~/boundless-sdk/services/WFSService.js","webpack:///./~/querystringify/index.js","webpack:///./~/ogc-schemas/lib/Filter_1_1_0.js","webpack:///./~/ogc-schemas/lib/GML_3_1_1.js","webpack:///./~/ogc-schemas/lib/OWS_1_0_0.js","webpack:///./~/ogc-schemas/lib/SMIL_2_0.js","webpack:///./~/ogc-schemas/lib/SMIL_2_0_Language.js","webpack:///./~/ogc-schemas/lib/WFS_1_1_0.js","webpack:///./~/requires-port/index.js","webpack:///./~/url-parse/index.js","webpack:///./~/w3c-schemas/lib/XSD_1_0.js","webpack:///./src/map-widget.jsx","webpack:///./~/jsonix/jsonix.js","webpack:///./~/w3c-schemas/lib/XLink_1_0.js"],"names":["JSONField","props","Object","defineProperty","get","JSON","parse","refs","textarea","value","set","newValue","stringify","enumerable","configurable","render","ref","FieldSet","state","schema","getSchema","data","getInitialData","fields","keys","map","field","key","getValue","name","className","f","fieldSet","indexOf","type","getSelectOptions","label","charAt","toUpperCase","slice","options","getData","MapWidget","loaded","Map","layers","layer","Tile","title","source","OSM","view","View","center","zoom","on","extent","getView","calculateExtent","getSize","eventName","id","emit","shouldComponentUpdate","nextProps","nextState","config","update","mapId","url","getMapConfigUrl","fetch","method","credentials","then","response","status","json","load","transform","URLS","proxy","ready","componentWillMount","componentDidMount","setTarget","findDOMNode","BaseWidget","displayName","MapWidgetConfigForm","maps","widget","getConfig","m","getMapsData","setState","res","objects","ConfigForm","Dashboard","registerWidget"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;IAEMA,S;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,iDAChB,sBAAMA,KAAN,CADgB;;AAEhBC,WAAOC,cAAP,QAA4B,OAA5B,EAAqC;AACnCC,WAAK,eAAM;AAAE,eAAOC,KAAKC,KAAL,CAAW,MAAKC,IAAL,CAAUC,QAAV,CAAmBC,KAA9B,CAAP;AAA8C,OADxB;AAEnCC,WAAK,aAACC,QAAD,EAAc;AAAE,cAAKJ,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,GAA2BJ,KAAKO,SAAL,CAAeD,YAAY,EAA3B,CAA3B;AAA4D,OAF9C;AAGnCE,kBAAY,IAHuB;AAInCC,oBAAc;AAJqB,KAArC;AAFgB;AAQjB;;sBACDC,M,qBAAQ;AAAA,QACId,KADJ,4BACa,KAAKA,KADlB;;AAEN,WAAOA,MAAMe,GAAb;AACA,WAAO,uDAAcf,KAAd,IAAqB,KAAI,UAAzB,IAAP;AACD,G;;;;;IAEGgB,Q;;;AACJ,oBAAYhB,KAAZ,EAAkB;AAAA;;AAAA,kDAChB,uBAAMA,KAAN,CADgB;;AAEhB,WAAKiB,KAAL,GAAa;AACXC,cAAQlB,MAAMkB,MAAN,IAAgB,OAAKC,SAAL,CAAenB,KAAf,CADb;AAEXoB,YAAMpB,MAAMoB,IAAN,IAAc,OAAKC,cAAL,CAAoBrB,KAApB;AAFT,KAAb;AAIA,WAAKsB,MAAL,GAAc,EAAd;AANgB;AAOjB;;qBACDH,S,wBAAW;AACT,WAAO,EAAP;AACD,G;;qBACDE,c,6BAAgB;AACd,WAAO,EAAP;AACD,G;;qBACDP,M,qBAAQ;AAAA;;AAAA,iBACiB,KAAKG,KADtB;AAAA,QACCC,MADD,UACCA,MADD;AAAA,QACSE,IADT,UACSA,IADT;;AAEN,mCACGnB,OAAOsB,IAAP,CAAYL,MAAZ,EAAoBM,GAApB,CAAwB;AAAA,aAAO,OAAKC,KAAL,CAAWC,GAAX,EAAgBR,OAAOQ,GAAP,CAAhB,EAA6BR,OAAOQ,GAAP,EAAYC,QAAZ,GAAuBT,OAAOQ,GAAP,EAAYC,QAAZ,CAAqBP,IAArB,CAAvB,GAAoDA,KAAKM,GAAL,KAAa,IAA9F,CAAP;AAAA,KAAxB,CADH;AAGD,G;;qBAEDD,K,kBAAMG,I,EAAMV,M,EAAQV,K,EAAM;AAAA;;AAAA,wBACPU,MADO,CACnBlB,KADmB;AAAA,QACnBA,KADmB,iCACb,EADa;;AAExBA,UAAM6B,SAAN,GAAkB,cAAlB;AACA7B,UAAMe,GAAN,GAAY,UAACe,CAAD,EAAO;AACjB,UAAGA,CAAH,EAAK;AACHA,UAAEtB,KAAF,GAAUA,KAAV;AACA,eAAKc,MAAL,CAAYM,IAAZ,IAAoBE,CAApB;AACAA,UAAEC,QAAF;AACD;AACF,KAND;AAOA,QAAIN,QAAQ,IAAZ;;AAEA,QAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,OAA1B,EAAmCO,OAAnC,CAA2Cd,OAAOe,IAAlD,KAA2D,CAAC,CAA/D,EAAiE;AAC/DjC,YAAMiC,IAAN,GAAaf,OAAOe,IAApB;AACAR,cAAQ,uCAAWzB,KAAX,CAAR;AACD,KAHD,MAIK,IAAGkB,OAAOe,IAAP,IAAe,UAAlB,EAA6B;AAChCR,cAAQ,0CAAczB,KAAd,CAAR;AACD,KAFI,MAGA,IAAGkB,OAAOe,IAAP,IAAe,MAAlB,EAAyB;AAC5BR,cAAQ,8BAAC,SAAD,EAAezB,KAAf,CAAR;AACD,KAFI,MAGA,IAAGkB,OAAOe,IAAP,IAAe,QAAlB,EAA2B;AAC9BR,cAAS;AAAA;AAAYzB,aAAZ;AACN,aAAKkC,gBAAL,CAAsBN,IAAtB,EAA4BV,MAA5B,EAAoCV,KAApC;AADM,OAAT;AAGD;AACD,QAAI2B,QAAQjB,OAAOiB,KAAP,IAAiBP,KAAKQ,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BT,KAAKU,KAAL,CAAW,CAAX,CAA5D;AACA;AAAA,iBAAsB;AAAtB,yCACUH,KADV,GAEGV,KAFH;AAID,G;;qBACDS,gB,6BAAiBN,I,EAAMV,M,EAAQV,K,EAAM;AAAA,QAC9B+B,OAD8B,GACnBrB,MADmB,CAC9BqB,OAD8B;;AAEnC,QAAG,CAACA,OAAJ,EAAa,OAAO,IAAP;AACb,QAAG,QAAOA,OAAP,yCAAOA,OAAP,MAAkB,QAArB,EAA8B;AAC5B,aAAOtC,OAAOsB,IAAP,CAAYgB,OAAZ,EAAqBf,GAArB,CAAyB;AAAA;AAAA,iBAAsBE;AAAtB,mBAA4Ba,QAAQb,GAAR,CAA5B;AAAA,OAAzB,CAAP;AACD,KAFD,MAGK,IAAG,OAAOa,OAAP,IAAkB,UAArB,EAAiC;AACpC,aAAOA,QAAQ,IAAR,EAAc,KAAKtB,KAAL,CAAWG,IAAzB,CAAP;AACD;AACD,WAAO,IAAP;AACD,G;;qBACDoB,O,sBAAS;AAAA;;AACP,QAAIpB,OAAO,EAAX;AACAnB,WAAOsB,IAAP,CAAY,KAAKD,MAAjB,EAAyBE,GAAzB,CAA6B,UAACE,GAAD,EAAS;AAAEN,WAAKM,GAAL,IAAY,OAAKJ,MAAL,CAAYI,GAAZ,EAAiBlB,KAA7B;AAAqC,KAA7E;AACA,WAAOY,IAAP;AACD,G;;;;;kBAGYJ,Q;;;;;;;;;;;;AC3Ff;;kBACe,0B;;;;;;;ACDf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC7SA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,8BAA8B,EAAE,UAAU,EAAE,UAAU,EAAE;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;ACjIA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE,GAAG;AACpjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjqCAAqC,QAAQ;AAC7C;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,yC;;;;;;;;AC/SA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE,GAAG;AACpjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,sEAAsE,EAAE,kBAAkB,EAAE,kBAAkB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kHAAkH;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,kD;;;;;;;;AC1ZA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED,uC;;;;;;;;8CCxCA;;AAEA;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE,GAAG;AACpjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,8BAA8B,wCAAwC;AACtE,OAAO;AACP;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uDAAuD;AAChmC;;;;;;;;;ACnbA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACzvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbeAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbeAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACfaAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACzjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACvpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AC7qBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,iBAAiB;AACjB;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;ACz4BA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;8CCrCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;AACH,sCAAsC;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACtZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACbaAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;ACl4CA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMyB,S;;;AAEF,uBAAYzC,KAAZ,EAAmB;AAAA;;AAAA,qDACf,uBAAMA,KAAN,CADe;;AAEf,cAAK0C,MAAL,GAAc,KAAd;AACA,cAAKlB,GAAL,GAAW,IAAI,qBAAGmB,GAAP,CAAW;AAClB;AACAC,oBAAQ,CACJ,IAAI,qBAAGC,KAAH,CAASC,IAAb,CAAkB,EAACC,OAAO,eAAR,EAAyBC,QAAQ,IAAI,qBAAGA,MAAH,CAAUC,GAAd,EAAjC,EAAlB,CADI,CAFU;AAKlBC,kBAAM,IAAI,qBAAGC,IAAP,CAAY,EAACC,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiBC,MAAM,CAAvB,EAAZ;AALY,SAAX,CAAX;AAOA,cAAK7B,GAAL,CAAS8B,EAAT,CAAY,SAAZ,EAAuB,YAAM;AACzB,gBAAIC,SAAS,MAAK/B,GAAL,CAASgC,OAAT,GAAmBC,eAAnB,CAAoC,MAAKjC,GAAL,CAASkC,OAAT,EAApC,CAAb;AACA,gBAAIC,YAAY,qBAAqB,GAArB,GAA2B,MAAK3D,KAAL,CAAW4D,EAAtD;AACA,6BAAOC,IAAP,CAAYF,SAAZ,EAAuB,MAAKnC,GAA5B,EAAiC+B,MAAjC;AACH,SAJD;;AAVe;AAgBlB;;wBAEDO,qB,kCAAsBC,S,EAAWC,S,EAAU;AACzC,YAAG,KAAK/C,KAAL,CAAWgD,MAAX,IAAqBD,UAAUC,MAAlC,EAA0C;AACxC,iBAAKC,MAAL,CAAYF,UAAUC,MAAtB;AACA,mBAAO,IAAP;AACD;AACD,eAAO,KAAP;AACD,K;;wBACDC,M,mBAAOD,M,EAAQ;AAAA;;AACX,YAAIA,UAAUA,OAAOE,KAArB,EAA4B;AACxB,gBAAIC,MAAMC,gBAAgBJ,OAAOE,KAAvB,CAAV;AACAG,kBAAMF,GAAN,EAAU;AACRG,wBAAQ,KADA;AAERC,6BAAa;AAFL,aAAV,EAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,oBAAGA,SAASC,MAAT,IAAmB,GAAtB,EAA2B;AACvB,2BAAOD,SAASE,IAAT,EAAP;AACH;AACJ,aAPD,EAOGH,IAPH,CAOQ,UAACR,MAAD,EAAY;AAChB,oBAAGA,MAAH,EAAW;AACP,+CAAiBY,IAAjB,CAAsB,oCAA0BC,SAA1B,CAAoCb,MAApC,CAAtB,EAAmE,OAAKzC,GAAxE,EAA4EuD,KAAKC,KAAjF;AACA,2BAAKC,KAAL,GAAa,IAAb;AACA,qCAAOpB,IAAP,CAAY,aAAa,GAAb,GAAmB,OAAK7D,KAAL,CAAW4D,EAA1C,EAA8C,OAAKpC,GAAnD;AACH;AACJ,aAbD;AAeH;AACJ,K;;wBACD0D,kB,iCAAqB;AACnB,aAAKhB,MAAL,CAAY,KAAKjD,KAAL,CAAWgD,MAAvB;AACD,K;;wBACDkB,iB,gCAAmB;AACjB,aAAK3D,GAAL,CAAS4D,SAAT,CAAmB,mBAASC,WAAT,CAAqB,KAAK/E,IAAL,CAAUkB,GAA/B,CAAnB;AACD,K;;wBACDV,M,qBAAS;AACL,eAAQ,uCAAK,KAAI,KAAT,EAAe,WAAU,QAAzB,GAAR;AACH,K;;;EAvDmBwE,U;;AAAlB7C,S,CACK8C,W,GAAc,K;;IAyDnBC,mB;;;AACJ,iCAAYxF,KAAZ,EAAkB;AAAA;;AAAA,sDAChB,qBAAMA,KAAN,CADgB;;AAEhB,eAAKiB,KAAL,CAAWwE,IAAX,GAAkB,EAAlB;AAFgB;AAGjB;;kCACDtE,S,sBAAUnB,K,EAAM;AACd,eAAO;AACLmE,mBAAO;AACLlC,sBAAK,QADA;AAELM,yBAAS;AAFJ;AADF,SAAP;AAMD,K;;kCACDlB,c,2BAAerB,K,EAAM;AACnB,eAAOA,MAAM0F,MAAN,CAAaC,SAAb,EAAP;AACD,K;;kCACDzD,gB,6BAAiBN,I,EAAMqC,M,EAAQzD,K,EAAM;AACjC,eAAO,KAAKS,KAAL,CAAWwE,IAAX,CAAgBjE,GAAhB,CAAoB;AAAA;AAAA,uBAAoBoE,EAAEhC;AAAtB,uBAA2BgC,EAAE7C,KAA7B;AAAA,SAApB,CAAP;AACH,K;;kCACDmC,kB,iCAAoB;AAAA;;AAClBW,sBAAcpB,IAAd,CAAmB;AAAA,mBAAO,OAAKqB,QAAL,CAAc,EAACL,MAAKM,IAAIC,OAAV,EAAd,CAAP;AAAA,SAAnB;AACD,K;;;;;AAIHvD,UAAUwD,UAAV,GAAuBT,mBAAvB;;AAGAU,UAAUC,cAAV,CAAyB1D,SAAzB;kBACeA,S;;;;;;;AC/Ff;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA,OAAO;AACP;;AAEA,OAAO;AACP,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACruCAAuC,qBAAqB;AAC5D,0CAA0C,qBAAqB;AAC/D,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,EAAE;AACF;AACA,CAAC;AACD;AACA,2CAA2C;AAC3C,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,qBAAqB;AAChC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA,yBAAyB,yDAAyD;AAClF;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,0CAA0C,KAAK,2BAA2B;AAC5K;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,K;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,yB;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,+BAA+B;AACxD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,iBAAiB,oCAAoC;AACrD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;;AAED,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kFAAkF,EAAE;AACpF,oFAAoF,EAAE;AACtF,gFAAgF,EAAE;AAClF,kFAAkF,EAAE;AACpF,sFAAsF,EAAE;AACxF,qFAAqF,EAAE;AACvF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,oBAAoB,2CAA2C,eAAe;AAC9E,oBAAoB,4CAA4C,eAAe;AAC/E,oBAAoB,0CAA0C,eAAe;AAC7E,qBAAqB,4CAA4C,eAAe;AAChF,qBAAqB,8CAA8C,eAAe;AAClF,qBAAqB,wCAAwC,eAAe;AAC5E;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,mD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA,IAAI;AACJ;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACh/LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"map-widget.bundle.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass JSONField extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    Object.defineProperty(this, 'value', {\r\n      get: () => { return JSON.parse(this.refs.textarea.value); },\r\n      set: (newValue) => { this.refs.textarea.value = JSON.stringify(newValue || {}); },\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  }\r\n  render(){\r\n    const {...props} = this.props;\r\n    delete props.ref;\r\n    return <textarea {...props} ref=\"textarea\" />;\r\n  }\r\n}\r\nclass FieldSet extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      schema: props.schema || this.getSchema(props),\r\n      data: props.data || this.getInitialData(props)\r\n    };\r\n    this.fields = {};\r\n  }\r\n  getSchema(){\r\n    return {};\r\n  }\r\n  getInitialData(){\r\n    return {};\r\n  }\r\n  render(){\r\n    const {schema, data} = this.state;\r\n    return <div>\r\n      {Object.keys(schema).map(key => this.field(key, schema[key], schema[key].getValue ? schema[key].getValue(data) : data[key] || null))}\r\n    </div>\r\n  }\r\n\r\n  field(name, schema, value){\r\n    var {props={}} = schema;\r\n    props.className = \"form-control\";\r\n    props.ref = (f) => {\r\n      if(f){\r\n        f.value = value;\r\n        this.fields[name] = f;\r\n        f.fieldSet = this;\r\n      }\r\n    };\r\n    var field = null;\r\n\r\n    if(['text', 'number', 'url', 'email'].indexOf(schema.type) != -1){\r\n      props.type = schema.type;\r\n      field = <input {...props} />;\r\n    }\r\n    else if(schema.type == \"textarea\"){\r\n      field = <textarea {...props} />;\r\n    }\r\n    else if(schema.type == \"json\"){\r\n      field = <JSONField {...props}/>\r\n    }\r\n    else if(schema.type == 'select'){\r\n      field =  <select {...props}>\r\n        {this.getSelectOptions(name, schema, value)}\r\n      </select>;\r\n    }\r\n    var label = schema.label || (name.charAt(0).toUpperCase() + name.slice(1));\r\n    return <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      {field}\r\n    </div>;\r\n  }\r\n  getSelectOptions(name, schema, value){\r\n    var {options} = schema;\r\n    if(!options) return null;\r\n    if(typeof options == \"object\"){\r\n      return Object.keys(options).map(key => <option value={key}>{options[key]}</option>)\r\n    }\r\n    else if(typeof options == 'function' ){\r\n      return options(this, this.state.data);\r\n    }\r\n    return null\r\n  }\r\n  getData(){\r\n    var data = {};\r\n    Object.keys(this.fields).map((key) => { data[key] = this.fields[key].value; });\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default FieldSet;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FieldSet.jsx","import {EventEmitter}  from 'events';\r\nexport default new EventEmitter();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/Events.jsx","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 20\n// module chunks = 0 4 5 6 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  getProxiedUrl: function getProxiedUrl(url, opt_proxy) {\n    if (opt_proxy) {\n      return opt_proxy + encodeURIComponent(url);\n    } else {\n      return url;\n    }\n  },\n  getResolutionForScale: function getResolutionForScale(scale, units) {\n    var dpi = 25.4 / 0.28;\n    var mpu = _openlayers2.default.proj.METERS_PER_UNIT[units];\n    var inchesPerMeter = 39.37;\n    return parseFloat(scale) / (mpu * inchesPerMeter * dpi);\n  },\n  getTimeInfo: function getTimeInfo(layer) {\n    if (layer.Dimension) {\n      for (var i = 0, ii = layer.Dimension.length; i < ii; ++i) {\n        var dimension = layer.Dimension[i];\n        if (dimension.name === 'time') {\n          return dimension.values;\n        }\n      }\n    }\n  },\n  rgbToHex: function rgbToHex(rgb) {\n    rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n  },\n  hexToRgb: function hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  },\n  transformColor: function transformColor(color) {\n    var colorObj = color.rgb ? color.rgb : color;\n    return [colorObj.r, colorObj.g, colorObj.b, colorObj.a];\n  },\n  doJSONP: function doJSONP(url, success, failure, scope) {\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n    var cbname = 'fn' + Date.now() + getRandomInt(1, 10000);\n    var script = document.createElement('script');\n    script.onerror = function () {\n      if (failure) {\n        failure.call(scope);\n      }\n    };\n    script.src = url.replace('__cbname__', cbname);\n    window[cbname] = function (jsonData) {\n      success.call(scope, jsonData);\n      delete window[cbname];\n    };\n    document.head.appendChild(script);\n  },\n  doGET: function doGET(url, success, failure, scope, opt_requestHeaders) {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4) {\n        if (xmlhttp.status === 200) {\n          if (success) {\n            success.call(scope, xmlhttp);\n          }\n        } else if (failure) {\n          failure.call(scope, xmlhttp);\n        }\n      }\n    };\n    xmlhttp.open('GET', url, true);\n    if (opt_requestHeaders) {\n      for (var key in opt_requestHeaders) {\n        if (opt_requestHeaders.hasOwnProperty(key)) {\n          xmlhttp.setRequestHeader(key, opt_requestHeaders[key]);\n        }\n      }\n    }\n    xmlhttp.send();\n    return xmlhttp;\n  },\n  doPOST: function doPOST(url, data, success, failure, scope, contentType, put, opt_requestHeaders) {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.open(put ? 'PUT' : 'POST', url, true);\n    xmlhttp.setRequestHeader('Content-Type', contentType ? contentType : 'text/xml');\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4) {\n        if (xmlhttp.status === 200 || xmlhttp.status === 201) {\n          success.call(scope, xmlhttp);\n        } else {\n          failure.call(scope, xmlhttp);\n        }\n      }\n    };\n    if (opt_requestHeaders) {\n      for (var key in opt_requestHeaders) {\n        if (opt_requestHeaders.hasOwnProperty(key)) {\n          xmlhttp.setRequestHeader(key, opt_requestHeaders[key]);\n        }\n      }\n    }\n    xmlhttp.send(data);\n    return xmlhttp;\n  }\n}; /*\n    * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\n    * Licensed under the Apache License, Version 2.0 (the \"License\").\n    * You may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    * http://www.apache.org/licenses/LICENSE-2.0\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and limitations under the License.\n    */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/util.js\n// module id = 27\n// module chunks = 4 5 6","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\nicensed under the Apache License, Version 2.0 (the \"License\").\nou may not use this file except in compliance with the License.\nou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\nee the License for the specific language governing permissions and limitations under the License.\nn\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nvar _util = require('../util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _LayerIdService = require('./LayerIdService');\n\nvar _LayerIdService2 = _interopRequireDefault(_LayerIdService);\n\nvar _WFSService = require('./WFSService');\n\nvar _WFSService2 = _interopRequireDefault(_WFSService);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MapConfigService = function () {\n  function MapConfigService() {\n    _classCallCheck(this, MapConfigService);\n  }\n\n  _createClass(MapConfigService, [{\n    key: 'generateSourceFromConfig',\n    value: function generateSourceFromConfig(map, config, opt_proxy, opt_wfsUrl, opt_wfsTypeName) {\n      var props = config.properties || {};\n      if (props.attributions) {\n        var attributions = [];\n        for (var i = 0, ii = props.attributions.length; i < ii; ++i) {\n          attributions.push(new _openlayers2.default.Attribution({\n            html: props.attributions[i]\n          }));\n        }\n        props.attributions = attributions;\n      }\n      props.wrapX = false;\n      if (config.type === 'Cluster') {\n        props.source = this.generateSourceFromConfig(map, config.source, opt_proxy, opt_wfsUrl, opt_wfsTypeName);\n      }\n      if (config.type === 'Vector') {\n        props.format = props.format.type === 'GeoJSON' ? new _openlayers2.default.format.GeoJSON() : undefined;\n        if (opt_wfsUrl && opt_wfsTypeName) {\n          return _WFSService2.default.createSource(opt_wfsUrl, map.getView().getProjection(), opt_wfsTypeName, opt_proxy);\n        }\n      }\n      if (config.type === 'TMS') {\n        config.type = 'XYZ';\n        var urls = props.urls || [props.url];\n        props.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n          var min = 0;\n          var max = urls.length - 1;\n          var idx = Math.floor(Math.random() * (max - min + 1)) + min;\n          var x, y, z;\n          z = tileCoord[0];\n          x = tileCoord[1];\n          y = tileCoord[2] + (1 << z);\n          return urls[idx] + z + '/' + x + '/' + y + '.' + props.format;\n        };\n        delete props.urls;\n        delete props.url;\n        var source = new _openlayers2.default.source[config.type](props);\n        source.set('originalType', 'TMS');\n        source.set('originalProperties', Object.assign({}, props, {\n          urls: urls\n        }));\n        return source;\n      }\n      var sourceObj = new _openlayers2.default.source[config.type](props);\n      if (opt_proxy && config.type === 'TileWMS') {\n        sourceObj.once('tileloaderror', function () {\n          sourceObj.setTileLoadFunction(function () {\n            var tileLoadFn = sourceObj.getTileLoadFunction();\n            return function (tile, src) {\n              tileLoadFn(tile, _util2.default.getProxiedUrl(src, opt_proxy));\n            };\n          }());\n        });\n      }\n      return sourceObj;\n    }\n  }, {\n    key: 'generateLayerFromConfig',\n    value: function generateLayerFromConfig(config, map, opt_proxy) {\n      var type = config.type;\n      var layerConfig = config.properties || {};\n      layerConfig.id = _LayerIdService2.default.generateId();\n      if (type === 'Group') {\n        layerConfig.layers = [];\n        for (var i = 0, ii = config.children.length; i < ii; ++i) {\n          layerConfig.layers.push(this.generateLayerFromConfig(config.children[i], map, opt_proxy));\n        }\n      }\n      var layer = new _openlayers2.default.layer[type](layerConfig);\n      var sourceConfig = config.source;\n      if (sourceConfig) {\n        var source = this.generateSourceFromConfig(map, sourceConfig, opt_proxy, layerConfig.url, layerConfig.name);\n        layer.setSource(source);\n      }\n      return layer;\n    }\n  }, {\n    key: 'getLayerType',\n    value: function getLayerType(layer) {\n      if (layer instanceof _openlayers2.default.layer.Group) {\n        return 'Group';\n      } else if (layer instanceof _openlayers2.default.layer.Vector) {\n        return 'Vector';\n      } else if (layer instanceof _openlayers2.default.layer.Tile) {\n        return 'Tile';\n      } else if (layer instanceof _openlayers2.default.layer.Image) {\n        return 'Image';\n      }\n    }\n  }, {\n    key: 'getFormatType',\n    value: function getFormatType(format) {\n      if (format instanceof _openlayers2.default.format.GeoJSON) {\n        return 'GeoJSON';\n      }\n    }\n  }, {\n    key: 'getSourceConfig',\n    value: function getSourceConfig(source) {\n      var config = {};\n      var attributions;\n      var attr = source.getAttributions();\n      if (attr !== null) {\n        attributions = [];\n        for (var i = 0, ii = attr.length; i < ii; ++i) {\n          attributions.push(attr[i].getHTML());\n        }\n      }\n      if (source instanceof _openlayers2.default.source.TileWMS) {\n        config.type = 'TileWMS';\n        config.properties = {\n          params: source.getParams(),\n          urls: source.getUrls()\n        };\n      } else if (source instanceof _openlayers2.default.source.Cluster) {\n        config.type = 'Cluster';\n        config.source = this.getSourceConfig(source.getSource());\n      } else if (source instanceof _openlayers2.default.source.Vector) {\n        config.type = 'Vector';\n        config.properties = {\n          attributions: attributions,\n          format: {\n            type: this.getFormatType(source.getFormat())\n          },\n          url: source.getUrl()\n        };\n      } else if (source instanceof _openlayers2.default.source.ImageWMS) {\n        config.type = 'ImageWMS';\n        config.properties = {\n          url: source.getUrl(),\n          params: source.getParams(),\n          attributions: attributions\n        };\n      } else if (source instanceof _openlayers2.default.source.OSM) {\n        config.type = 'OSM';\n        config.properties = {\n          attributions: attributions\n        };\n      } else if (source instanceof _openlayers2.default.source.BingMaps) {\n        config.type = 'BingMaps';\n        config.properties = {\n          key: source.getApiKey(),\n          imagerySet: source.getImagerySet()\n        };\n      } else if (source instanceof _openlayers2.default.source.XYZ) {\n        if (source.get('originalType') === 'TMS') {\n          config.type = 'TMS';\n          config.properties = source.get('originalProperties');\n        } else {\n          config.type = 'XYZ';\n          config.properties = {\n            attributions: attributions,\n            urls: source.getUrls()\n          };\n        }\n      } else if (source instanceof _openlayers2.default.source.TileArcGISRest) {\n        config.type = 'TileArcGISRest';\n        config.properties = {\n          urls: source.getUrls(),\n          params: source.getParams()\n        };\n      }\n      return config;\n    }\n  }, {\n    key: 'getLayerConfig',\n    value: function getLayerConfig(config, layer) {\n      config.type = this.getLayerType(layer);\n      config.properties = layer.getProperties();\n      delete config.properties.maxResolution;\n      delete config.properties.minResolution;\n      var source = config.type !== 'Group' ? layer.getSource() : null;\n      if (source) {\n        delete config.properties.source;\n        config.source = this.getSourceConfig(source);\n      }\n      if (layer instanceof _openlayers2.default.layer.Group) {\n        delete config.properties.layers;\n        config.children = [];\n        layer.getLayers().forEach(function (child) {\n          if (child.get('title') !== null) {\n            var childConfig = {};\n            config.children.push(childConfig);\n            this.getLayerConfig(childConfig, child);\n          }\n        }, this);\n      }\n      return config;\n    }\n  }, {\n    key: 'load',\n    value: function load(mapConfig, map, opt_proxy) {\n      var viewConfig = mapConfig.view;\n      var layerConfig = mapConfig.layers;\n      var remove = [];\n      map.getLayers().forEach(function (lyr) {\n        if (lyr.get('title') !== null) {\n          remove.push(lyr);\n        }\n      });\n      var i, ii;\n      for (i = 0, ii = remove.length; i < ii; ++i) {\n        map.removeLayer(remove[i]);\n      }\n      for (i = 0, ii = layerConfig.length; i < ii; ++i) {\n        var layer = this.generateLayerFromConfig(layerConfig[i], map, opt_proxy);\n        map.addLayer(layer);\n      }\n      var view = map.getView(),\n          proj = _openlayers2.default.proj.get(viewConfig.projection);\n      if (proj && !_openlayers2.default.proj.equivalent(view.getProjection(), proj)) {\n        map.setView(new _openlayers2.default.View({\n          center: viewConfig.center,\n          resolution: viewConfig.resolution,\n          zoom: viewConfig.zoom,\n          rotation: viewConfig.rotation,\n          projection: viewConfig.projection\n        }));\n      } else {\n        view.setCenter(viewConfig.center);\n        if (viewConfig.resolution !== undefined) {\n          view.setResolution(viewConfig.resolution);\n        } else if (viewConfig.zoom !== undefined) {\n          view.setZoom(viewConfig.zoom);\n        }\n        if (viewConfig.rotation !== undefined) {\n          view.setRotation(viewConfig.rotation);\n        }\n      }\n    }\n  }, {\n    key: 'save',\n    value: function save(map) {\n      var layers = [];\n      map.getLayers().forEach(function (layer) {\n        if (layer.get('title') !== null) {\n          var config = {};\n          layers.push(config);\n          this.getLayerConfig(config, layer);\n        }\n      }, this);\n      var config = {};\n      config.layers = layers;\n      var view = map.getView();\n      config.view = {\n        projection: view.getProjection().getCode(),\n        center: view.getCenter(),\n        resolution: view.getResolution(),\n        zoom: view.getZoom(),\n        rotation: view.getRotation()\n      };\n      return config;\n    }\n  }]);\n\n  return MapConfigService;\n}();\n\nexports.default = new MapConfigService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/MapConfigService.js\n// module id = 287\n// module chunks = 4","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\nicensed under the Apache License, Version 2.0 (the \"License\").\nou may not use this file except in compliance with the License.\nou may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * http://www.apache.org/licenses/LICENSE-2.0\nnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\nee the License for the specific language governing permissions and limitations under the License.\nn\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar sourceIdx;\n\nvar baseMapTitle = 'Base Maps';\nvar gxpGroup = 'background';\n\n/**\n * Transforms GXP style map config to our internal format.\n */\n\nvar MapConfigTransformService = function () {\n  function MapConfigTransformService() {\n    _classCallCheck(this, MapConfigTransformService);\n  }\n\n  _createClass(MapConfigTransformService, [{\n    key: '_writeLayer',\n    value: function _writeLayer(config, sources, layers, group) {\n      var key;\n      var layerConfig = {};\n      // name is mandatory\n      layerConfig.name = config.properties.name || config.properties.title.split(' ').join('_');\n      layerConfig.title = config.properties.title;\n      layerConfig.visibility = config.properties.visible;\n      if (group) {\n        layerConfig.group = group;\n      }\n      layers.push(layerConfig);\n      if (config.source.type === 'XYZ') {\n        layerConfig.type = 'OpenLayers.Layer.XYZ';\n        var options;\n        if (config.source.properties.attributions && config.source.properties.attributions.length > 0) {\n          options = { attribution: config.source.properties.attributions[0] };\n        }\n        layerConfig.args = [config.properties.title, config.source.properties.urls[0]];\n        if (options) {\n          layerConfig.args.push(options);\n        }\n        sourceIdx++;\n        sources[sourceIdx] = {\n          ptype: 'gxp_olsource'\n        };\n      } else if (config.source.type === 'TileArcGISRest') {\n        layerConfig.layerid = config.source.properties.params.LAYERS;\n        sourceIdx++;\n        sources[sourceIdx] = {\n          url: config.source.properties.urls[0],\n          ptype: 'gxp_arcrestsource'\n        };\n      } else if (config.source.type === 'BingMaps') {\n        var hasBing = false;\n        for (key in sources) {\n          if (sources[key].ptype == 'gxp_bingsource' && sources[key].apiKey === config.source.properties.key) {\n            hasBing = true;\n            break;\n          }\n        }\n        if (!hasBing) {\n          sourceIdx++;\n          sources[sourceIdx] = {\n            ptype: 'gxp_bingsource',\n            apiKey: config.source.properties.key\n          };\n        }\n      } else if (config.source.type === 'TMS') {\n        if (config.source.properties.urls[0].indexOf('tiles.mapbox.com/v1/mapbox') !== -1) {\n          var hasMapBox = false;\n          for (key in sources) {\n            if (sources[key].ptype == 'gxp_mapboxsource') {\n              hasMapBox = true;\n              break;\n            }\n          }\n          if (!hasMapBox) {\n            sourceIdx++;\n            sources[sourceIdx] = {\n              ptype: 'gxp_mapboxsource'\n            };\n          }\n        }\n      } else if (config.source.type === 'TileWMS') {\n        if (config.source.properties.params.SLD_BODY) {\n          layerConfig.params = {\n            TILED: 'false',\n            SLD_BODY: config.source.properties.params.SLD_BODY\n          };\n        }\n        layerConfig.queryable = config.properties.isSelectable;\n        layerConfig.capability = {\n          queryable: config.properties.isSelectable,\n          styles: [{\n            name: config.properties.styleName,\n            legend: {\n              href: config.properties.legendUrl\n            }\n          }],\n          llbbox: config.properties.EX_GeographicBoundingBox\n        };\n        var hasWMSC = false;\n        for (key in sources) {\n          if (sources[key].ptype == 'gxp_wmscsource' && sources[key].url === config.source.url) {\n            hasWMSC = true;\n            break;\n          }\n        }\n        if (!hasWMSC) {\n          sourceIdx++;\n          sources[sourceIdx] = {\n            ptype: 'gxp_wmscsource',\n            url: config.source.properties.urls[0]\n          };\n        }\n      } else if (config.source.type === 'OSM') {\n        var hasOSM = false;\n        for (key in sources) {\n          if (sources[key].ptype == 'gxp_osmsource') {\n            hasOSM = true;\n            break;\n          }\n        }\n        if (!hasOSM) {\n          sourceIdx++;\n          sources[sourceIdx] = {\n            ptype: 'gxp_osmsource'\n          };\n        }\n        if (!layerConfig.name) {\n          layerConfig.name = 'mapnik';\n        }\n      }\n      layerConfig.source = '' + sourceIdx;\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      var viewConfig = data.view;\n      var layerConfig = data.layers;\n      var layers = [];\n      var sources = {};\n      sourceIdx = -1;\n      for (var i = 0, ii = layerConfig.length; i < ii; ++i) {\n        if (layerConfig[i].type === 'Group') {\n          for (var j = 0, jj = layerConfig[i].children.length; j < jj; ++j) {\n            var config = layerConfig[i].children[j];\n            this._writeLayer(config, sources, layers, layerConfig[i].properties.title.replace(baseMapTitle, gxpGroup));\n          }\n        } else {\n          this._writeLayer(layerConfig[i], sources, layers);\n        }\n      }\n      var result = {\n        sources: sources\n      };\n      result.map = {\n        layers: layers,\n        center: viewConfig.center,\n        projection: viewConfig.projection,\n        zoom: viewConfig.zoom\n      };\n      return result;\n    }\n  }, {\n    key: '_transformTileService',\n    value: function _transformTileService(layerConfig) {\n      var thumbnail;\n      if (layerConfig.source.type === 'OSM') {\n        thumbnail = 'https://a.tile.openstreetmap.org/0/0/0.png';\n      } else {\n        if (layerConfig.source.properties.urls) {\n          thumbnail = layerConfig.source.properties.urls[0].replace('{z}', '0').replace('{y}', '0').replace('{x}', '0');\n        }\n      }\n      return {\n        name: layerConfig.properties.name,\n        description: layerConfig.properties.title,\n        standard: layerConfig.source.type,\n        attribution: layerConfig.source.properties.attributions ? layerConfig.source.properties.attributions[0] : undefined,\n        endpoint: layerConfig.source.properties.urls ? layerConfig.source.properties.urls[0] : undefined,\n        thumbnail: thumbnail\n      };\n    }\n  }, {\n    key: 'transform',\n    value: function transform(data, opt_errors, opt_tileServices) {\n      var i,\n          ii,\n          layers = [];\n      var groups = {};\n      for (i = 0, ii = data.map.layers.length; i < ii; ++i) {\n        var layer = data.map.layers[i];\n        var source = data.sources[layer.source];\n        var url = source.url;\n        var layerConfig = {\n          properties: {\n            isRemovable: true,\n            visible: layer.visibility,\n            title: layer.title || (layer.name ? layer.name.split(':').pop() : undefined),\n            id: layer.name,\n            name: layer.name\n          }\n        };\n        if (source.ptype === 'gxp_olsource' && layer.type === 'OpenLayers.Layer.XYZ') {\n          layerConfig.type = 'Tile';\n          layerConfig.properties.title = layer.args[0];\n          layerConfig.properties.name = layerConfig.properties.title.split(' ').join('_');\n          var xyzUrls;\n          var urlConfig = layer.args[1];\n          if (Array.isArray(urlConfig)) {\n            xyzUrls = urlConfig;\n          } else {\n            xyzUrls = [urlConfig];\n          }\n          for (var j = 0, jj = xyzUrls.length; j < jj; ++j) {\n            xyzUrls[j] = xyzUrls[j].replace(/\\$/g, '');\n            if (xyzUrls[j].indexOf('cartocdn') !== -1) {\n              xyzUrls[j] = xyzUrls[j].replace('https:', 'http:');\n            }\n          }\n          layerConfig.source = {\n            type: 'XYZ',\n            properties: {\n              crossOrigin: 'anonymous',\n              urls: xyzUrls\n            }\n          };\n          if (layer.args.length === 3 && layer.args[2].attribution) {\n            layerConfig.source.properties.attributions = [layer.args[2].attribution];\n          }\n        } else if (source.ptype === 'gxp_osmsource') {\n          if (!layer.group) {\n            // force OSM as base layer\n            layerConfig.properties.type = 'base';\n          }\n          layerConfig.type = 'Tile';\n          layerConfig.source = {\n            type: 'OSM',\n            properties: {\n              crossOrigin: 'anonymous'\n            }\n          };\n        } else if (source.ptype === 'gxp_arcrestsource') {\n          layerConfig.type = 'Tile';\n          layerConfig.source = {\n            type: 'TileArcGISRest',\n            properties: {\n              crossOrigin: 'anonymous',\n              urls: [url],\n              params: {\n                LAYERS: layer.layerid,\n                FORMAT: layer.format\n              }\n            }\n          };\n        } else if (source.ptype === 'gxp_wmscsource' && layer.name) {\n          layerConfig.properties.popupInfo = '#AllAttributes';\n          layerConfig.properties.isSelectable = layer.queryable;\n          layerConfig.properties.isWFST = layer.queryable;\n          if (layer.capability) {\n            if (layer.queryable === undefined) {\n              layerConfig.properties.isSelectable = layer.capability.queryable;\n              layerConfig.properties.isWFST = layer.capability.queryable;\n            }\n            layerConfig.properties.styleName = layer.capability.styles[0].name;\n            layerConfig.properties.legendUrl = layer.capability.styles[0].legend.href;\n            layerConfig.properties.EX_GeographicBoundingBox = layer.capability.llbbox;\n          }\n          if (!layerConfig.properties.EX_GeographicBoundingBox) {\n            if (layer.bbox && layer.srs && _openlayers2.default.proj.get(layer.srs)) {\n              layerConfig.properties.EX_GeographicBoundingBox = _openlayers2.default.proj.transformExtent(layer.bbox, layer.srs, 'EPSG:4326');\n            }\n          }\n          layerConfig.type = 'Tile';\n          var params = layer.params || {};\n          params.LAYERS = layer.name;\n          if (params.TILED === undefined) {\n            params.TILED = 'TRUE';\n          }\n          if (layer.styles) {\n            params.STYLES = layer.styles;\n          }\n          if (layer.format) {\n            params.FORMAT = layer.format;\n          }\n          if (layer.transparent !== undefined) {\n            params.TRANSPARENT = layer.transparent;\n          }\n          layerConfig.source = {\n            type: 'TileWMS',\n            properties: {\n              crossOrigin: 'anonymous',\n              params: params,\n              urls: [url]\n            }\n          };\n        } else if (source.ptype === 'gxp_mapboxsource') {\n          var urls = ['http://a.tiles.mapbox.com/v1/mapbox.' + layer.name + '/', 'http://b.tiles.mapbox.com/v1/mapbox.' + layer.name + '/', 'http://c.tiles.mapbox.com/v1/mapbox.' + layer.name + '/', 'http://d.tiles.mapbox.com/v1/mapbox.' + layer.name + '/'];\n          var attribution = /^world/.test(layer.name) ? '<a href=\"http://mapbox.com\">MapBox</a> | Some Data &copy; OSM CC-BY-SA | <a href=\"http://mapbox.com/tos\">Terms of Service</a>' : '<a href=\"http://mapbox.com\">MapBox</a> | <a href=\"http://mapbox.com/tos\">Terms of Service</a>';\n          var maxZoom = {\n            'blue-marble-topo-bathy-jan': 8,\n            'blue-marble-topo-bathy-jul': 8,\n            'blue-marble-topo-jan': 8,\n            'blue-marble-topo-jul': 8,\n            'control-room': 8,\n            'geography-class': 8,\n            'natural-earth-hypso': 6,\n            'natural-earth-hypso-bathy': 6,\n            'natural-earth-1': 6,\n            'natural-earth-2': 6,\n            'world-dark': 11,\n            'world-light': 11,\n            'world-glass': 10,\n            'world-print': 9\n          };\n          layerConfig.type = 'Tile';\n          layerConfig.source = {\n            type: 'TMS',\n            properties: {\n              attributions: [attribution],\n              format: 'png',\n              urls: urls,\n              maxZoom: maxZoom[layer.name]\n            }\n          };\n        } else if (source.ptype === 'gxp_bingsource') {\n          layerConfig.type = 'Tile';\n          layerConfig.source = {\n            type: 'BingMaps',\n            properties: {\n              key: source.apiKey,\n              imagerySet: layer.name\n            }\n          };\n        } else {\n          if (opt_errors) {\n            opt_errors.push({\n              msg: 'Unable to load layer ' + layerConfig.properties.title,\n              layer: layer,\n              source: source\n            });\n          }\n          layerConfig = undefined;\n        }\n        if (layerConfig !== undefined) {\n          if (layer.group) {\n            if (layer.group === gxpGroup) {\n              layerConfig.properties.type = 'base';\n              if (opt_tileServices) {\n                var tileService = this._transformTileService(layerConfig);\n                if (tileService) {\n                  opt_tileServices.push(tileService);\n                }\n              }\n            }\n            if (!groups[layer.group]) {\n              groups[layer.group] = {\n                type: 'Group',\n                properties: {\n                  name: layer.group,\n                  title: layer.group === gxpGroup ? baseMapTitle : layer.group,\n                  type: layer.group === gxpGroup ? 'base-group' : undefined\n                },\n                children: []\n              };\n              layers.push(groups[layer.group]);\n            }\n            groups[layer.group].children.push(layerConfig);\n          } else {\n            layers.push(layerConfig);\n          }\n        }\n      }\n      return {\n        layers: layers,\n        view: {\n          center: data.map.center,\n          projection: data.map.projection,\n          zoom: data.map.zoom\n        }\n      };\n    }\n  }]);\n\n  return MapConfigTransformService;\n}();\n\nexports.default = new MapConfigTransformService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/MapConfigTransformService.js\n// module id = 288\n// module chunks = 4","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * Copyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar LayerIdService = function () {\n  function LayerIdService() {\n    _classCallCheck(this, LayerIdService);\n\n    this._counter = 0;\n  }\n\n  _createClass(LayerIdService, [{\n    key: 'generateId',\n    value: function generateId() {\n      this._counter++;\n      return 'sdk-layer-' + this._counter;\n    }\n  }]);\n\n  return LayerIdService;\n}();\n\nexports.default = new LayerIdService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/LayerIdService.js\n// module id = 305\n// module chunks = 4","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\nopyright 2015-present Boundless Spatial Inc., http://boundlessgeo.com\nicensed under the Apache License, Version 2.0 (the \"License\").\nou may not use this file except in compliance with the License.\nou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\neither express or implied.\nee the License for the specific language governing permissions and limitations under the License.\nn\nvar _openlayers = require('openlayers');\n\nvar _openlayers2 = _interopRequireDefault(_openlayers);\n\nvar _util = require('../util');\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _jsonix = require('jsonix');\n\nvar _urlParse = require('url-parse');\n\nvar _urlParse2 = _interopRequireDefault(_urlParse);\n\nvar _XSD_1_ = require('w3c-schemas/lib/XSD_1_0');\n\nvar _XLink_1_ = require('w3c-schemas/lib/XLink_1_0');\n\nvar _OWS_1_0_ = require('ogc-schemas/lib/OWS_1_0_0');\n\nvar _Filter_1_1_ = require('ogc-schemas/lib/Filter_1_1_0');\n\nvar _SMIL_2_ = require('ogc-schemas/lib/SMIL_2_0');\n\nvar _SMIL_2_0_Language = require('ogc-schemas/lib/SMIL_2_0_Language');\n\nvar _GML_3_1_ = require('ogc-schemas/lib/GML_3_1_1');\n\nvar _WFS_1_1_ = require('ogc-schemas/lib/WFS_1_1_0');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar wfsFormat = new _openlayers2.default.format.WFS();\nvar geojsonFormat = new _openlayers2.default.format.GeoJSON();\nvar xmlSerializer = new XMLSerializer();\nvar wfsContext = new _jsonix.Jsonix.Context([_OWS_1_0_.OWS_1_0_0, _Filter_1_1_.Filter_1_1_0, _SMIL_2_.SMIL_2_0, _SMIL_2_0_Language.SMIL_2_0_Language, _XLink_1_.XLink_1_0, _GML_3_1_.GML_3_1_1, _WFS_1_1_.WFS_1_1_0]);\nvar wfsUnmarshaller = wfsContext.createUnmarshaller();\nvar xsdContext = new _jsonix.Jsonix.Context([_XSD_1_.XSD_1_0]);\nvar xsdUnmarshaller = xsdContext.createUnmarshaller();\n\nvar proj4326 = new _openlayers2.default.proj.Projection({\n  code: 'http://www.opengis.net/gml/srs/epsg.xml#4326',\n  axis: 'enu'\n});\n_openlayers2.default.proj.addEquivalentProjections([_openlayers2.default.proj.get('EPSG:4326'), proj4326]);\n\nvar WFSService = function () {\n  function WFSService() {\n    _classCallCheck(this, WFSService);\n  }\n\n  _createClass(WFSService, [{\n    key: 'createSource',\n    value: function createSource(_url, projection, typeName, opt_proxy) {\n      return new _openlayers2.default.source.Vector({\n        wrapX: false,\n        url: function url(extent) {\n          var urlObj = new _urlParse2.default(_url);\n          urlObj.set('query', {\n            service: 'WFS',\n            request: 'GetFeature',\n            version: '1.1.0',\n            typename: typeName,\n            outputFormat: 'application/json',\n            srsname: projection.getCode(),\n            bbox: extent.join(',') + ',' + projection.getCode()\n          });\n          return _util2.default.getProxiedUrl(urlObj.toString(), opt_proxy);\n        },\n        format: geojsonFormat,\n        strategy: _openlayers2.default.loadingstrategy.bbox\n      });\n    }\n  }, {\n    key: 'createLayer',\n    value: function createLayer(layer, url, titleObj, projection, opt_proxy) {\n      return new _openlayers2.default.layer.Vector({\n        title: titleObj.title,\n        emptyTitle: titleObj.empty,\n        id: layer.Name,\n        name: layer.Name,\n        isWFST: true,\n        timeInfo: _util2.default.getTimeInfo(layer),\n        isRemovable: true,\n        isSelectable: true,\n        popupInfo: '#AllAttributes',\n        url: url,\n        source: this.createSource(url, projection, layer.Name, opt_proxy)\n      });\n    }\n  }, {\n    key: 'parseCapabilities',\n    value: function parseCapabilities(xmlhttp) {\n      var layers = [];\n      var info = wfsUnmarshaller.unmarshalDocument(xmlhttp.responseXML).value;\n      if (info && info.featureTypeList && info.featureTypeList.featureType) {\n        for (var i = 0, ii = info.featureTypeList.featureType.length; i < ii; ++i) {\n          var ft = info.featureTypeList.featureType[i];\n          var layer = {};\n          layer.Name = ft.name.prefix + ':' + ft.name.localPart;\n          if (ft.keywords) {\n            layer.KeywordList = ft.keywords[0].keyword;\n          }\n          layer.Title = ft.title;\n          layer.Abstract = ft._abstract;\n          layer.EX_GeographicBoundingBox = [ft.wgs84BoundingBox[0].lowerCorner[0], ft.wgs84BoundingBox[0].lowerCorner[1], ft.wgs84BoundingBox[0].upperCorner[0], ft.wgs84BoundingBox[0].upperCorner[1]];\n          layers.push(layer);\n        }\n      }\n      return {\n        layers: layers,\n        title: info.serviceIdentification.title\n      };\n    }\n  }, {\n    key: 'getCapabilitiesUrl',\n    value: function getCapabilitiesUrl(url, opt_proxy) {\n      var urlObj = new _urlParse2.default(url);\n      urlObj.set('query', {\n        service: 'WFS',\n        version: '1.1.0',\n        request: 'GetCapabilities'\n      });\n      return _util2.default.getProxiedUrl(urlObj.toString(), opt_proxy);\n    }\n  }, {\n    key: 'getCapabilities',\n    value: function getCapabilities(url, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      return _util2.default.doGET(this.getCapabilitiesUrl(url, opt_proxy), function (xmlhttp) {\n        var info = this.parseCapabilities(xmlhttp);\n        onSuccess.call(this, { Title: info.title, Layer: info.layers });\n      }, function (xmlhttp) {\n        onFailure.call(this, xmlhttp);\n      }, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'describeFeatureType',\n    value: function describeFeatureType(url, layerName, onSuccess, onFailure, scope, opt_proxy, opt_requestHeaders) {\n      var dftUrl = new _urlParse2.default(url);\n      dftUrl.set('query', {\n        service: 'WFS',\n        request: 'DescribeFeatureType',\n        version: '1.0.0',\n        typename: layerName\n      });\n      _util2.default.doGET(_util2.default.getProxiedUrl(dftUrl.toString(), opt_proxy), function (xmlhttp) {\n        if (xmlhttp.responseText.indexOf('<?xml') !== -1 && xmlhttp.responseText.indexOf('ServiceExceptionReport') === -1) {\n          var schema = xsdUnmarshaller.unmarshalString(xmlhttp.responseText).value;\n          var element = schema.complexType[0].complexContent.extension.sequence.element;\n          var geometryType, geometryName;\n          var attributes = [];\n          for (var i = 0, ii = element.length; i < ii; ++i) {\n            var el = element[i];\n            if (el.type.namespaceURI === 'http://www.opengis.net/gml') {\n              geometryName = el.name;\n              var lp = el.type.localPart;\n              geometryType = lp.replace('PropertyType', '');\n            } else if (el.name !== 'boundedBy') {\n              // TODO if needed, use attribute type as well\n              attributes.push(el.name);\n            }\n          }\n          attributes.sort(function (a, b) {\n            return a.toLowerCase().localeCompare(b.toLowerCase());\n          });\n          onSuccess.call(scope || this, {\n            featureNS: schema.targetNamespace,\n            featurePrefix: layerName.split(':').shift(),\n            featureType: schema.element[0].name,\n            geometryType: geometryType,\n            geometryName: geometryName,\n            attributes: attributes,\n            url: url\n          });\n        } else {\n          onFailure.call(scope || this, xmlhttp);\n        }\n      }, function (xmlhttp) {\n        onFailure.call(scope || this, xmlhttp);\n      }, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'loadFeatures',\n    value: function loadFeatures(layer, startIndex, maxFeatures, sortingInfo, srsName, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      var wfsInfo = layer.get('wfsInfo');\n      var url = wfsInfo.url;\n      var urlObj = new _urlParse2.default(url);\n      var params = {\n        service: 'WFS',\n        request: 'GetFeature',\n        startIndex: startIndex,\n        maxFeatures: maxFeatures,\n        version: '1.1.0',\n        typename: wfsInfo.featureType,\n        srsname: 'EPSG:4326'\n      };\n      if (sortingInfo.length === 1) {\n        params.sortBy = sortingInfo[0].id + ' ' + (sortingInfo[0].asc ? 'A' : 'D');\n      }\n      urlObj.set('query', params);\n      _util2.default.doGET(_util2.default.getProxiedUrl(urlObj.toString(), opt_proxy), function (xmlhttp) {\n        var data = xmlhttp.responseXML;\n        if (data !== null) {\n          this.readResponse(data, xmlhttp, function (data) {\n            var features = wfsFormat.readFeatures(data, { dataProjection: proj4326, featureProjection: srsName });\n            onSuccess.call(this, features);\n          }, onFailure);\n        } else {\n          onFailure.call(this, xmlhttp);\n        }\n      }, function (xmlhttp) {\n        onFailure.call(this, xmlhttp);\n      }, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'getNumberOfFeatures',\n    value: function getNumberOfFeatures(layer, callback, opt_proxy, opt_requestHeaders) {\n      if (layer.get('numberOfFeatures') === undefined) {\n        var wfsInfo = layer.get('wfsInfo');\n        var url = wfsInfo.url;\n        var urlObj = new _urlParse2.default(url);\n        urlObj.set('query', {\n          service: 'WFS',\n          request: 'GetFeature',\n          resultType: 'hits',\n          version: '1.1.0',\n          typename: wfsInfo.featureType\n        });\n        _util2.default.doGET(_util2.default.getProxiedUrl(urlObj.toString(), opt_proxy), function (xmlhttp) {\n          var info = wfsFormat.readFeatureCollectionMetadata(xmlhttp.responseXML);\n          callback.call(this, info.numberOfFeatures);\n        }, undefined, opt_requestHeaders);\n      }\n    }\n  }, {\n    key: 'bboxFilter',\n    value: function bboxFilter(layer, view, extent, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      var wfsInfo = layer.get('wfsInfo');\n      var url = new _urlParse2.default(wfsInfo.url);\n      var srs = view.getProjection().getCode();\n      url.set('query', {\n        service: 'WFS',\n        request: 'GetFeature',\n        version: '1.1.0',\n        srsName: srs,\n        typename: wfsInfo.featureType,\n        bbox: extent.join(',') + ',' + srs\n      });\n      return _util2.default.doGET(_util2.default.getProxiedUrl(url.toString(), opt_proxy), function (xmlhttp) {\n        var features = wfsFormat.readFeatures(xmlhttp.responseXML);\n        onSuccess.call(this, features);\n      }, onFailure, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'generateDistanceWithinUrl',\n    value: function generateDistanceWithinUrl(layer, view, coord) {\n      var point = _openlayers2.default.proj.toLonLat(coord);\n      var wfsInfo = layer.get('wfsInfo');\n      var url = new _urlParse2.default(wfsInfo.url);\n      url.set('query', {\n        service: 'WFS',\n        request: 'GetFeature',\n        version: '1.1.0',\n        srsName: view.getProjection().getCode(),\n        typename: wfsInfo.featureType,\n        cql_filter: 'DWITHIN(' + wfsInfo.geometryName + ', Point(' + point[1] + ' ' + point[0] + '), 0.1, meters)'\n      });\n      return url.toString();\n    }\n  }, {\n    key: 'distanceWithin',\n    value: function distanceWithin(layer, view, coord, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      return _util2.default.doGET(_util2.default.getProxiedUrl(this.generateDistanceWithinUrl(layer, view, coord), opt_proxy), function (xmlhttp) {\n        var features = wfsFormat.readFeatures(xmlhttp.responseXML);\n        if (features.length > 0) {\n          onSuccess.call(this, features[0]);\n        } else if (onFailure) {\n          onFailure.call(this, xmlhttp);\n        }\n      }, onFailure, this, opt_requestHeaders);\n    }\n  }, {\n    key: 'readResponse',\n    value: function readResponse(data, xmlhttp, onSuccess, onFailure) {\n      if (global.Document && data instanceof global.Document && data.documentElement && data.documentElement.localName == 'ExceptionReport') {\n        if (onFailure) {\n          onFailure.call(this, xmlhttp, data.getElementsByTagNameNS('http://www.opengis.net/ows', 'ExceptionText').item(0).textContent);\n        }\n      } else {\n        onSuccess(data);\n      }\n    }\n  }, {\n    key: 'getDeletePayload',\n    value: function getDeletePayload(wfsInfo, feature) {\n      var node = wfsFormat.writeTransaction(null, null, [feature], {\n        featureNS: wfsInfo.featureNS,\n        featureType: wfsInfo.featureType\n      });\n      return xmlSerializer.serializeToString(node);\n    }\n  }, {\n    key: 'deleteFeature',\n    value: function deleteFeature(layer, feature, onSuccess, onFailure) {\n      var wfsInfo = layer.get('wfsInfo');\n      return _util2.default.doPOST(wfsInfo.url, this.getDeletePayload(wfsInfo, feature), function (xmlhttp) {\n        this.handleDeleteResponse(xmlhttp, onSuccess, onFailure);\n      }, onFailure, this);\n    }\n  }, {\n    key: 'handleDeleteResponse',\n    value: function handleDeleteResponse(xmlhttp, onSuccess, onFailure) {\n      var data = xmlhttp.responseXML;\n      this.readResponse(data, xmlhttp, function (data) {\n        var result = wfsFormat.readTransactionResponse(data);\n        if (result && result.transactionSummary.totalDeleted === 1) {\n          onSuccess.call(this);\n        } else {\n          onFailure.call(this, xmlhttp);\n        }\n      }, onFailure);\n    }\n  }, {\n    key: 'getUpdatePayload',\n    value: function getUpdatePayload(wfsInfo, view, feature, values) {\n      var fid = feature.getId();\n      var clone;\n      var featureGeometryName = feature.getGeometryName();\n      if (values !== null) {\n        clone = new _openlayers2.default.Feature(values);\n      } else {\n        var properties = feature.getProperties();\n        // get rid of boundedBy which is not a real property\n        // get rid of bbox (in the case of GeoJSON)\n        delete properties.boundedBy;\n        delete properties.bbox;\n        if (wfsInfo.geometryName !== featureGeometryName) {\n          properties[wfsInfo.geometryName] = properties[featureGeometryName];\n          delete properties[featureGeometryName];\n        }\n        clone = new _openlayers2.default.Feature(properties);\n      }\n      clone.setId(fid);\n      if (view !== null && wfsInfo.geometryName !== featureGeometryName) {\n        clone.setGeometryName(wfsInfo.geometryName);\n      }\n      var node = wfsFormat.writeTransaction(null, [clone], null, {\n        gmlOptions: view !== null ? {\n          srsName: view.getProjection().getCode()\n        } : undefined,\n        featureNS: wfsInfo.featureNS,\n        featureType: wfsInfo.featureType\n      });\n      return xmlSerializer.serializeToString(node);\n    }\n  }, {\n    key: 'handleUpdateResponse',\n    value: function handleUpdateResponse(xmlhttp, onSuccess, onFailure) {\n      var data = xmlhttp.responseXML;\n      this.readResponse(data, xmlhttp, function (data) {\n        var result = wfsFormat.readTransactionResponse(data);\n        if (result) {\n          onSuccess.call(this, result);\n        } else {\n          onFailure.call(this, xmlhttp);\n        }\n      }, onFailure);\n    }\n  }, {\n    key: 'updateFeature',\n    value: function updateFeature(layer, view, feature, values, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      var wfsInfo = layer.get('wfsInfo');\n      return _util2.default.doPOST(_util2.default.getProxiedUrl(wfsInfo.url, opt_proxy), this.getUpdatePayload(wfsInfo, view, feature, values), function (xmlhttp) {\n        this.handleUpdateResponse(xmlhttp, onSuccess, onFailure);\n      }, onFailure, this, undefined, false, opt_requestHeaders);\n    }\n  }, {\n    key: 'getInsertPayload',\n    value: function getInsertPayload(wfsInfo, view, feature) {\n      var node = wfsFormat.writeTransaction([feature], null, null, {\n        gmlOptions: {\n          srsName: view.getProjection().getCode()\n        },\n        featureNS: wfsInfo.featureNS,\n        featureType: wfsInfo.featureType\n      });\n      return xmlSerializer.serializeToString(node);\n    }\n  }, {\n    key: 'handleInsertResponse',\n    value: function handleInsertResponse(xmlhttp, onSuccess, onFailure) {\n      var data = xmlhttp.responseXML;\n      this.readResponse(data, xmlhttp, function (data) {\n        var result = wfsFormat.readTransactionResponse(data);\n        if (result) {\n          var insertId = result.insertIds[0];\n          onSuccess.call(this, insertId);\n        } else {\n          onFailure.call(this, xmlhttp);\n        }\n      }, onFailure);\n    }\n  }, {\n    key: 'insertFeature',\n    value: function insertFeature(layer, view, feature, onSuccess, onFailure, opt_proxy, opt_requestHeaders) {\n      var wfsInfo = layer.get('wfsInfo');\n      return _util2.default.doPOST(_util2.default.getProxiedUrl(wfsInfo.url, opt_proxy), this.getInsertPayload(wfsInfo, view, feature), function (xmlhttp) {\n        this.handleInsertResponse(xmlhttp, onSuccess, onFailure);\n      }, onFailure, this, undefined, false, opt_requestHeaders);\n    }\n  }]);\n\n  return WFSService;\n}();\n\nexports.default = new WFSService();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/boundless-sdk/services/WFSService.js\n// module id = 307\n// module chunks = 4","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystringify/index.js\n// module id = 45\n// module chunks = 4 5 6","var Filter_1_1_0_Module_Factory = function () {\n  var Filter_1_1_0 = {\n    n: 'Filter_1_1_0',\n    dens: 'http:\\/\\/www.opengis.net\\/ogc',\n    deps: ['GML_3_1_1'],\n    tis: [{\n        ln: 'FunctionType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'expression',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }, {\n            n: 'name',\n            rq: true,\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'DistanceBufferType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: '_Geometry',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_3_1_1.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'distance',\n            rq: true,\n            en: 'Distance',\n            ti: '.DistanceType'\n          }]\n      }, {\n        ln: 'DistanceType',\n        ps: [{\n            n: 'value',\n            ti: 'Double',\n            t: 'v'\n          }, {\n            n: 'units',\n            rq: true,\n            an: {\n              lp: 'units'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeometryOperandsType',\n        ps: [{\n            n: 'geometryOperand',\n            rq: true,\n            col: true,\n            en: 'GeometryOperand',\n            ti: 'QName'\n          }]\n      }, {\n        ln: 'LiteralType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            t: 'ae'\n          }]\n      }, {\n        ln: 'FunctionsType',\n        ps: [{\n            n: 'functionNames',\n            rq: true,\n            en: 'FunctionNames',\n            ti: '.FunctionNamesType'\n          }]\n      }, {\n        ln: 'FunctionNamesType',\n        ps: [{\n            n: 'functionName',\n            rq: true,\n            col: true,\n            en: 'FunctionName',\n            ti: '.FunctionNameType'\n          }]\n      }, {\n        ln: 'SpatialOpsType'\n      }, {\n        ln: 'ScalarCapabilitiesType',\n        tn: 'Scalar_CapabilitiesType',\n        ps: [{\n            n: 'logicalOperators',\n            en: 'LogicalOperators',\n            ti: '.LogicalOperators'\n          }, {\n            n: 'comparisonOperators',\n            en: 'ComparisonOperators',\n            ti: '.ComparisonOperatorsType'\n          }, {\n            n: 'arithmeticOperators',\n            en: 'ArithmeticOperators',\n            ti: '.ArithmeticOperatorsType'\n          }]\n      }, {\n        ln: 'FeatureIdType',\n        bti: '.AbstractIdType',\n        ps: [{\n            n: 'fid',\n            rq: true,\n            ti: 'ID',\n            an: {\n              lp: 'fid'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SortPropertyType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'sortOrder',\n            en: 'SortOrder'\n          }]\n      }, {\n        ln: 'ArithmeticOperatorsType',\n        ps: [{\n            n: 'ops',\n            rq: true,\n            col: true,\n            etis: [{\n                en: 'SimpleArithmetic',\n                ti: '.SimpleArithmetic'\n              }, {\n                en: 'Functions',\n                ti: '.FunctionsType'\n              }],\n            t: 'es'\n          }]\n      }, {\n        ln: 'GmlObjectIdType',\n        bti: '.AbstractIdType',\n        ps: [{\n            n: 'id',\n            rq: true,\n            ti: 'ID',\n            an: {\n              lp: 'id',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'BinarySpatialOpType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName1',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'propertyName2',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: '_Geometry',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_3_1_1.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'envelope',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: 'Envelope',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_3_1_1.EnvelopeType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'FilterType',\n        ps: [{\n            n: 'spatialOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.SpatialOpsType',\n            t: 'er'\n          }, {\n            n: 'comparisonOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ComparisonOpsType',\n            t: 'er'\n          }, {\n            n: 'logicOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.LogicOpsType',\n            t: 'er'\n          }, {\n            n: 'id',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Id',\n            ti: '.AbstractIdType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'PropertyIsLikeType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'literal',\n            rq: true,\n            en: 'Literal',\n            ti: '.LiteralType'\n          }, {\n            n: 'wildCard',\n            rq: true,\n            an: {\n              lp: 'wildCard'\n            },\n            t: 'a'\n          }, {\n            n: 'singleChar',\n            rq: true,\n            an: {\n              lp: 'singleChar'\n            },\n            t: 'a'\n          }, {\n            n: 'escapeChar',\n            rq: true,\n            an: {\n              lp: 'escapeChar'\n            },\n            t: 'a'\n          }, {\n            n: 'matchCase',\n            ti: 'Boolean',\n            an: {\n              lp: 'matchCase'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LogicalOperators',\n        tn: null\n      }, {\n        ln: 'SimpleArithmetic',\n        tn: null\n      }, {\n        ln: 'BBOXType',\n        bti: '.SpatialOpsType',\n        ps: [{\n            n: 'propertyName',\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }, {\n            n: 'envelope',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: 'Envelope',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_3_1_1.EnvelopeType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'BinaryOperatorType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'FID',\n        tn: null\n      }, {\n        ln: 'IdCapabilitiesType',\n        tn: 'Id_CapabilitiesType',\n        ps: [{\n            n: 'ids',\n            rq: true,\n            col: true,\n            etis: [{\n                en: 'EID',\n                ti: '.EID'\n              }, {\n                en: 'FID',\n                ti: '.FID'\n              }],\n            t: 'es'\n          }]\n      }, {\n        ln: 'AbstractIdType'\n      }, {\n        ln: 'ComparisonOperatorsType',\n        ps: [{\n            n: 'comparisonOperator',\n            rq: true,\n            col: true,\n            en: 'ComparisonOperator'\n          }]\n      }, {\n        ln: 'SortByType',\n        ps: [{\n            n: 'sortProperty',\n            rq: true,\n            col: true,\n            en: 'SortProperty',\n            ti: '.SortPropertyType'\n          }]\n      }, {\n        ln: 'LowerBoundaryType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'PropertyIsBetweenType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }, {\n            n: 'lowerBoundary',\n            rq: true,\n            en: 'LowerBoundary',\n            ti: '.LowerBoundaryType'\n          }, {\n            n: 'upperBoundary',\n            rq: true,\n            en: 'UpperBoundary',\n            ti: '.UpperBoundaryType'\n          }]\n      }, {\n        ln: 'SpatialOperatorType',\n        ps: [{\n            n: 'geometryOperands',\n            en: 'GeometryOperands',\n            ti: '.GeometryOperandsType'\n          }, {\n            n: 'name',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SpatialCapabilitiesType',\n        tn: 'Spatial_CapabilitiesType',\n        ps: [{\n            n: 'geometryOperands',\n            rq: true,\n            en: 'GeometryOperands',\n            ti: '.GeometryOperandsType'\n          }, {\n            n: 'spatialOperators',\n            rq: true,\n            en: 'SpatialOperators',\n            ti: '.SpatialOperatorsType'\n          }]\n      }, {\n        ln: 'FunctionNameType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'nArgs',\n            rq: true,\n            an: {\n              lp: 'nArgs'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PropertyIsNullType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'propertyName',\n            rq: true,\n            en: 'PropertyName',\n            ti: '.PropertyNameType'\n          }]\n      }, {\n        ln: 'BinaryComparisonOpType',\n        bti: '.ComparisonOpsType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }, {\n            n: 'matchCase',\n            ti: 'Boolean',\n            an: {\n              lp: 'matchCase'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'UpperBoundaryType',\n        ps: [{\n            n: 'expression',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ExpressionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'ComparisonOpsType'\n      }, {\n        ln: 'EID',\n        tn: null\n      }, {\n        ln: 'BinaryLogicOpType',\n        bti: '.LogicOpsType',\n        ps: [{\n            n: 'ops',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'logicOps',\n                ti: '.LogicOpsType'\n              }, {\n                en: 'spatialOps',\n                ti: '.SpatialOpsType'\n              }, {\n                en: 'comparisonOps',\n                ti: '.ComparisonOpsType'\n              }, {\n                en: 'Function',\n                ti: '.FunctionType'\n              }],\n            t: 'ers'\n          }]\n      }, {\n        ln: 'UnaryLogicOpType',\n        bti: '.LogicOpsType',\n        ps: [{\n            n: 'comparisonOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.ComparisonOpsType',\n            t: 'er'\n          }, {\n            n: 'spatialOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.SpatialOpsType',\n            t: 'er'\n          }, {\n            n: 'logicOps',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.LogicOpsType',\n            t: 'er'\n          }, {\n            n: 'function',\n            rq: true,\n            en: 'Function',\n            ti: '.FunctionType'\n          }]\n      }, {\n        ln: 'LogicOpsType'\n      }, {\n        ln: 'SpatialOperatorsType',\n        ps: [{\n            n: 'spatialOperator',\n            rq: true,\n            col: true,\n            en: 'SpatialOperator',\n            ti: '.SpatialOperatorType'\n          }]\n      }, {\n        ln: 'ExpressionType'\n      }, {\n        ln: 'PropertyNameType',\n        bti: '.ExpressionType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            t: 'ae'\n          }]\n      }, {\n        ln: 'FilterCapabilities',\n        tn: null,\n        ps: [{\n            n: 'spatialCapabilities',\n            rq: true,\n            en: 'Spatial_Capabilities',\n            ti: '.SpatialCapabilitiesType'\n          }, {\n            n: 'scalarCapabilities',\n            rq: true,\n            en: 'Scalar_Capabilities',\n            ti: '.ScalarCapabilitiesType'\n          }, {\n            n: 'idCapabilities',\n            rq: true,\n            en: 'Id_Capabilities',\n            ti: '.IdCapabilitiesType'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'SpatialOperatorNameType',\n        vs: ['BBOX', 'Equals', 'Disjoint', 'Intersects', 'Touches', 'Crosses', 'Within', 'Contains', 'Overlaps', 'Beyond', 'DWithin']\n      }, {\n        t: 'enum',\n        ln: 'SortOrderType',\n        vs: ['DESC', 'ASC']\n      }, {\n        t: 'enum',\n        ln: 'ComparisonOperatorType',\n        vs: ['LessThan', 'GreaterThan', 'LessThanEqualTo', 'GreaterThanEqualTo', 'EqualTo', 'NotEqualTo', 'Like', 'Between', 'NullCheck']\n      }],\n    eis: [{\n        en: 'DWithin',\n        ti: '.DistanceBufferType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsGreaterThanOrEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Literal',\n        ti: '.LiteralType',\n        sh: 'expression'\n      }, {\n        en: 'Overlaps',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'SimpleArithmetic',\n        ti: '.SimpleArithmetic'\n      }, {\n        en: 'PropertyIsLike',\n        ti: '.PropertyIsLikeType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Contains',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'PropertyIsLessThan',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Not',\n        ti: '.UnaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'Mul',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'PropertyIsEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'GmlObjectId',\n        ti: '.GmlObjectIdType',\n        sh: '_Id'\n      }, {\n        en: 'PropertyIsNull',\n        ti: '.PropertyIsNullType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'expression',\n        ti: '.ExpressionType'\n      }, {\n        en: 'PropertyIsBetween',\n        ti: '.PropertyIsBetweenType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'PropertyIsNotEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Beyond',\n        ti: '.DistanceBufferType',\n        sh: 'spatialOps'\n      }, {\n        en: 'comparisonOps',\n        ti: '.ComparisonOpsType'\n      }, {\n        en: '_Id',\n        ti: '.AbstractIdType'\n      }, {\n        en: 'PropertyIsLessThanOrEqualTo',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'logicOps',\n        ti: '.LogicOpsType'\n      }, {\n        en: 'spatialOps',\n        ti: '.SpatialOpsType'\n      }, {\n        en: 'Filter',\n        ti: '.FilterType'\n      }, {\n        en: 'Touches',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'FID',\n        ti: '.FID'\n      }, {\n        en: 'Filter_Capabilities',\n        ti: '.FilterCapabilities'\n      }, {\n        en: 'BBOX',\n        ti: '.BBOXType',\n        sh: 'spatialOps'\n      }, {\n        en: 'And',\n        ti: '.BinaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'PropertyName',\n        ti: '.PropertyNameType',\n        sh: 'expression'\n      }, {\n        en: 'FeatureId',\n        ti: '.FeatureIdType',\n        sh: '_Id'\n      }, {\n        en: 'Div',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'LogicalOperators',\n        ti: '.LogicalOperators'\n      }, {\n        en: 'PropertyIsGreaterThan',\n        ti: '.BinaryComparisonOpType',\n        sh: 'comparisonOps'\n      }, {\n        en: 'Function',\n        ti: '.FunctionType',\n        sh: 'expression'\n      }, {\n        en: 'Within',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Sub',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'SortBy',\n        ti: '.SortByType'\n      }, {\n        en: 'Add',\n        ti: '.BinaryOperatorType',\n        sh: 'expression'\n      }, {\n        en: 'Crosses',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Or',\n        ti: '.BinaryLogicOpType',\n        sh: 'logicOps'\n      }, {\n        en: 'Intersects',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'EID',\n        ti: '.EID'\n      }, {\n        en: 'Disjoint',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }, {\n        en: 'Equals',\n        ti: '.BinarySpatialOpType',\n        sh: 'spatialOps'\n      }]\n  };\n  return {\n    Filter_1_1_0: Filter_1_1_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], Filter_1_1_0_Module_Factory);\n}\nelse {\n  var Filter_1_1_0_Module = Filter_1_1_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.Filter_1_1_0 = Filter_1_1_0_Module.Filter_1_1_0;\n  }\n  else {\n    var Filter_1_1_0 = Filter_1_1_0_Module.Filter_1_1_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/Filter_1_1_0.js\n// module id = 474\n// module chunks = 4","var GML_3_1_1_Module_Factory = function () {\n  var GML_3_1_1 = {\n    n: 'GML_3_1_1',\n    dens: 'http:\\/\\/www.opengis.net\\/gml',\n    dans: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    deps: ['SMIL_2_0_Language', 'XLink_1_0'],\n    tis: [{\n        ln: 'PointPropertyType',\n        ps: [{\n            n: 'point',\n            rq: true,\n            en: 'Point',\n            ti: '.PointType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopoPrimitiveArrayAssociationType',\n        ps: [{\n            n: 'topoPrimitive',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_TopoPrimitive',\n            ti: '.AbstractTopoPrimitiveType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'CurveArrayPropertyType',\n        ps: [{\n            n: 'curve',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Curve',\n            ti: '.AbstractCurveType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'BaseUnitType',\n        bti: '.UnitDefinitionType',\n        ps: [{\n            n: 'unitsSystem',\n            rq: true,\n            ti: '.ReferenceType'\n          }]\n      }, {\n        ln: 'TimeNodeType',\n        bti: '.AbstractTimeTopologyPrimitiveType',\n        ps: [{\n            n: 'previousEdge',\n            mno: 0,\n            col: true,\n            ti: '.TimeEdgePropertyType'\n          }, {\n            n: 'nextEdge',\n            mno: 0,\n            col: true,\n            ti: '.TimeEdgePropertyType'\n          }, {\n            n: 'position',\n            ti: '.TimeInstantPropertyType'\n          }]\n      }, {\n        ln: 'DirectedEdgePropertyType',\n        ps: [{\n            n: 'edge',\n            rq: true,\n            en: 'Edge',\n            ti: '.EdgeType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'BagType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'member',\n            mno: 0,\n            col: true,\n            ti: '.AssociationType'\n          }, {\n            n: 'members',\n            ti: '.ArrayAssociationType'\n          }]\n      }, {\n        ln: 'DatumRefType',\n        ps: [{\n            n: 'datum',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Datum',\n            ti: '.AbstractDatumType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'StyleVariationType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'styleProperty',\n            rq: true,\n            an: {\n              lp: 'styleProperty'\n            },\n            t: 'a'\n          }, {\n            n: 'featurePropertyRange',\n            an: {\n              lp: 'featurePropertyRange'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'CurvePropertyType',\n        ps: [{\n            n: 'curve',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Curve',\n            ti: '.AbstractCurveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeographicCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesEllipsoidalCS',\n            rq: true,\n            ti: '.EllipsoidalCSRefType'\n          }, {\n            n: 'usesGeodeticDatum',\n            rq: true,\n            ti: '.GeodeticDatumRefType'\n          }]\n      }, {\n        ln: 'MultiSurfaceType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'surfaceMember',\n            mno: 0,\n            col: true,\n            ti: '.SurfacePropertyType'\n          }, {\n            n: 'surfaceMembers',\n            ti: '.SurfaceArrayPropertyType'\n          }]\n      }, {\n        ln: 'AbstractStyleType',\n        bti: '.AbstractGMLType'\n      }, {\n        ln: 'OperationParameterBaseType',\n        bti: '.AbstractGeneralOperationParameterType'\n      }, {\n        ln: 'TopoPointType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'directedNode',\n            rq: true,\n            ti: '.DirectedNodePropertyType'\n          }]\n      }, {\n        ln: 'AbstractGeneralDerivedCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'baseCRS',\n            rq: true,\n            ti: '.CoordinateReferenceSystemRefType'\n          }, {\n            n: 'definedByConversion',\n            rq: true,\n            ti: '.GeneralConversionRefType'\n          }]\n      }, {\n        ln: 'EllipsoidRefType',\n        ps: [{\n            n: 'ellipsoid',\n            rq: true,\n            en: 'Ellipsoid',\n            ti: '.EllipsoidType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TinType.ControlPoint',\n        tn: null,\n        ps: [{\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'geometricPositionGroup',\n            rq: true,\n            mno: 3,\n            col: true,\n            etis: [{\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }],\n            t: 'es'\n          }]\n      }, {\n        ln: 'PointArrayPropertyType',\n        ps: [{\n            n: 'point',\n            mno: 0,\n            col: true,\n            en: 'Point',\n            ti: '.PointType'\n          }]\n      }, {\n        ln: 'CoordinatesType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'decimal',\n            an: {\n              lp: 'decimal'\n            },\n            t: 'a'\n          }, {\n            n: 'cs',\n            an: {\n              lp: 'cs'\n            },\n            t: 'a'\n          }, {\n            n: 'ts',\n            an: {\n              lp: 'ts'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractDatumType',\n        bti: '.AbstractDatumBaseType',\n        ps: [{\n            n: 'datumID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'anchorPoint',\n            ti: '.CodeType'\n          }, {\n            n: 'realizationEpoch',\n            ti: 'Date'\n          }, {\n            n: 'validArea',\n            ti: '.ExtentType'\n          }, {\n            n: 'scope'\n          }]\n      }, {\n        ln: 'LabelStyleType',\n        bti: '.BaseStyleDescriptorType',\n        ps: [{\n            n: 'style',\n            rq: true\n          }, {\n            n: 'label',\n            rq: true,\n            ti: '.LabelType'\n          }]\n      }, {\n        ln: 'OperationParameterType',\n        bti: '.OperationParameterBaseType',\n        ps: [{\n            n: 'parameterID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'CartesianCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'ConversionToPreferredUnitType',\n        bti: '.UnitOfMeasureType',\n        ps: [{\n            n: 'factor',\n            rq: true,\n            ti: 'Double'\n          }, {\n            n: 'formula',\n            rq: true,\n            ti: '.FormulaType'\n          }]\n      }, {\n        ln: 'AbstractParametricCurveSurfaceType',\n        bti: '.AbstractSurfacePatchType'\n      }, {\n        ln: 'ProjectedCRSRefType',\n        ps: [{\n            n: 'projectedCRS',\n            rq: true,\n            en: 'ProjectedCRS',\n            ti: '.ProjectedCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimePeriodType',\n        bti: '.AbstractTimeGeometricPrimitiveType',\n        ps: [{\n            n: 'beginPosition',\n            rq: true,\n            ti: '.TimePositionType'\n          }, {\n            n: 'begin',\n            rq: true,\n            ti: '.TimeInstantPropertyType'\n          }, {\n            n: 'endPosition',\n            rq: true,\n            ti: '.TimePositionType'\n          }, {\n            n: 'end',\n            rq: true,\n            ti: '.TimeInstantPropertyType'\n          }, {\n            n: 'duration',\n            rq: true,\n            ti: 'Duration'\n          }, {\n            n: 'timeInterval',\n            rq: true,\n            ti: '.TimeIntervalLengthType'\n          }]\n      }, {\n        ln: 'SurfacePatchArrayPropertyType',\n        ps: [{\n            n: 'surfacePatch',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_SurfacePatch',\n            ti: '.AbstractSurfacePatchType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'AreaType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'ArcStringType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 3,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }, {\n            n: 'numArc',\n            ti: 'Integer',\n            an: {\n              lp: 'numArc'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopoSolidType',\n        bti: '.AbstractTopoPrimitiveType',\n        ps: [{\n            n: 'directedFace',\n            rq: true,\n            col: true,\n            ti: '.DirectedFacePropertyType'\n          }]\n      }, {\n        ln: 'RangeParametersType',\n        ps: [{\n            n: '_boolean',\n            rq: true,\n            en: 'Boolean',\n            ti: 'Boolean'\n          }, {\n            n: 'category',\n            rq: true,\n            en: 'Category',\n            ti: '.CodeType'\n          }, {\n            n: 'quantity',\n            rq: true,\n            en: 'Quantity',\n            ti: '.MeasureType'\n          }, {\n            n: 'count',\n            rq: true,\n            en: 'Count',\n            ti: 'Integer'\n          }, {\n            n: 'booleanList',\n            rq: true,\n            en: 'BooleanList',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'categoryList',\n            rq: true,\n            en: 'CategoryList',\n            ti: '.CodeOrNullListType'\n          }, {\n            n: 'quantityList',\n            rq: true,\n            en: 'QuantityList',\n            ti: '.MeasureOrNullListType'\n          }, {\n            n: 'countList',\n            rq: true,\n            en: 'CountList',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'categoryExtent',\n            rq: true,\n            en: 'CategoryExtent',\n            ti: '.CategoryExtentType'\n          }, {\n            n: 'quantityExtent',\n            rq: true,\n            en: 'QuantityExtent',\n            ti: '.QuantityExtentType'\n          }, {\n            n: 'countExtent',\n            rq: true,\n            en: 'CountExtent',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'compositeValue',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: 'CompositeValue',\n            ti: '.CompositeValueType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiPolygonPropertyType',\n        ps: [{\n            n: 'multiPolygon',\n            rq: true,\n            en: 'MultiPolygon',\n            ti: '.MultiPolygonType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeometryStyleType',\n        bti: '.BaseStyleDescriptorType',\n        ps: [{\n            n: 'symbol',\n            rq: true,\n            ti: '.SymbolType'\n          }, {\n            n: 'style',\n            rq: true\n          }, {\n            n: 'labelStyle',\n            ti: '.LabelStylePropertyType'\n          }, {\n            n: 'geometryProperty',\n            an: {\n              lp: 'geometryProperty'\n            },\n            t: 'a'\n          }, {\n            n: 'geometryType',\n            an: {\n              lp: 'geometryType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ExtentType',\n        ps: [{\n            n: 'description',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'boundingBox',\n            mno: 0,\n            col: true,\n            ti: '.EnvelopeType'\n          }, {\n            n: 'boundingPolygon',\n            mno: 0,\n            col: true,\n            ti: '.PolygonType'\n          }, {\n            n: 'verticalExtent',\n            mno: 0,\n            col: true,\n            ti: '.EnvelopeType'\n          }, {\n            n: 'temporalExtent',\n            mno: 0,\n            col: true,\n            ti: '.TimePeriodType'\n          }]\n      }, {\n        ln: 'UserDefinedCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'OrientableSurfaceType',\n        bti: '.AbstractSurfaceType',\n        ps: [{\n            n: 'baseSurface',\n            rq: true,\n            ti: '.SurfacePropertyType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TemporalDatumRefType',\n        ps: [{\n            n: 'temporalDatum',\n            rq: true,\n            en: 'TemporalDatum',\n            ti: '.TemporalDatumType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'KnotPropertyType',\n        ps: [{\n            n: 'knot',\n            rq: true,\n            en: 'Knot',\n            ti: '.KnotType'\n          }]\n      }, {\n        ln: 'DefinitionProxyType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'definitionRef',\n            rq: true,\n            ti: '.ReferenceType'\n          }]\n      }, {\n        ln: 'ArcByBulgeType',\n        bti: '.ArcStringByBulgeType'\n      }, {\n        ln: 'GeometricComplexPropertyType',\n        ps: [{\n            n: 'geometricComplex',\n            rq: true,\n            en: 'GeometricComplex',\n            ti: '.GeometricComplexType'\n          }, {\n            n: 'compositeCurve',\n            rq: true,\n            en: 'CompositeCurve',\n            ti: '.CompositeCurveType'\n          }, {\n            n: 'compositeSurface',\n            rq: true,\n            en: 'CompositeSurface',\n            ti: '.CompositeSurfaceType'\n          }, {\n            n: 'compositeSolid',\n            rq: true,\n            en: 'CompositeSolid',\n            ti: '.CompositeSolidType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CompositeCurvePropertyType',\n        ps: [{\n            n: 'compositeCurve',\n            rq: true,\n            en: 'CompositeCurve',\n            ti: '.CompositeCurveType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationParameterGroupBaseType',\n        bti: '.AbstractGeneralOperationParameterType'\n      }, {\n        ln: 'MultiPointCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'ReferenceType',\n        ps: [{\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ImageCRSRefType',\n        ps: [{\n            n: 'imageCRS',\n            rq: true,\n            en: 'ImageCRS',\n            ti: '.ImageCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DefaultStylePropertyType',\n        ps: [{\n            n: 'style',\n            mx: false,\n            dom: false,\n            en: '_Style',\n            ti: '.AbstractStyleType',\n            t: 'er'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractTimeReferenceSystemType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'domainOfValidity'\n          }]\n      }, {\n        ln: 'AbsoluteExternalPositionalAccuracyType',\n        bti: '.AbstractPositionalAccuracyType',\n        ps: [{\n            n: 'result',\n            rq: true,\n            ti: '.MeasureType'\n          }]\n      }, {\n        ln: 'TopoPrimitiveMemberType',\n        ps: [{\n            n: 'topoPrimitive',\n            mx: false,\n            dom: false,\n            en: '_TopoPrimitive',\n            ti: '.AbstractTopoPrimitiveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeOrdinalReferenceSystemType',\n        bti: '.AbstractTimeReferenceSystemType',\n        ps: [{\n            n: 'component',\n            rq: true,\n            col: true,\n            ti: '.TimeOrdinalEraPropertyType'\n          }]\n      }, {\n        ln: 'CompositeSolidType',\n        bti: '.AbstractSolidType',\n        ps: [{\n            n: 'solidMember',\n            rq: true,\n            col: true,\n            ti: '.SolidPropertyType'\n          }]\n      }, {\n        ln: 'GeocentricCRSRefType',\n        ps: [{\n            n: 'geocentricCRS',\n            rq: true,\n            en: 'GeocentricCRS',\n            ti: '.GeocentricCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiCurveType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'curveMember',\n            mno: 0,\n            col: true,\n            ti: '.CurvePropertyType'\n          }, {\n            n: 'curveMembers',\n            ti: '.CurveArrayPropertyType'\n          }]\n      }, {\n        ln: 'UnitDefinitionType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'quantityType',\n            rq: true,\n            ti: '.StringOrRefType'\n          }, {\n            n: 'catalogSymbol',\n            ti: '.CodeType'\n          }]\n      }, {\n        ln: 'CurveSegmentArrayPropertyType',\n        ps: [{\n            n: 'curveSegment',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_CurveSegment',\n            ti: '.AbstractCurveSegmentType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'AbstractTimePrimitiveType',\n        bti: '.AbstractTimeObjectType',\n        ps: [{\n            n: 'relatedTime',\n            mno: 0,\n            col: true,\n            ti: '.RelatedTimeType'\n          }]\n      }, {\n        ln: 'MultiPointType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'pointMember',\n            mno: 0,\n            col: true,\n            ti: '.PointPropertyType'\n          }, {\n            n: 'pointMembers',\n            ti: '.PointArrayPropertyType'\n          }]\n      }, {\n        ln: 'MultiPointPropertyType',\n        ps: [{\n            n: 'multiPoint',\n            rq: true,\n            en: 'MultiPoint',\n            ti: '.MultiPointType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractTimeTopologyPrimitiveType',\n        bti: '.AbstractTimePrimitiveType',\n        ps: [{\n            n: 'complex',\n            ti: '.ReferenceType'\n          }]\n      }, {\n        ln: 'KnotType',\n        ps: [{\n            n: 'value',\n            rq: true,\n            ti: 'Double'\n          }, {\n            n: 'multiplicity',\n            rq: true,\n            ti: 'NonNegativeInteger'\n          }, {\n            n: 'weight',\n            rq: true,\n            ti: 'Double'\n          }]\n      }, {\n        ln: 'CodeType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'codeSpace',\n            an: {\n              lp: 'codeSpace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractTimeSliceType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'validTime',\n            rq: true,\n            ti: '.TimePrimitivePropertyType'\n          }, {\n            n: 'dataSource',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'DynamicFeatureType',\n        bti: '.AbstractFeatureType',\n        ps: [{\n            n: 'validTime',\n            ti: '.TimePrimitivePropertyType'\n          }, {\n            n: 'history',\n            mx: false,\n            dom: false,\n            ti: '.HistoryPropertyType',\n            t: 'er'\n          }, {\n            n: 'dataSource',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'RingPropertyType',\n        ps: [{\n            n: 'ring',\n            rq: true,\n            en: 'Ring',\n            ti: '.RingType'\n          }]\n      }, {\n        ln: 'EngineeringCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesCS',\n            rq: true,\n            ti: '.CoordinateSystemRefType'\n          }, {\n            n: 'usesEngineeringDatum',\n            rq: true,\n            ti: '.EngineeringDatumRefType'\n          }]\n      }, {\n        ln: 'BooleanPropertyType',\n        bti: '.ValuePropertyType'\n      }, {\n        ln: 'VerticalCRSRefType',\n        ps: [{\n            n: 'verticalCRS',\n            rq: true,\n            en: 'VerticalCRS',\n            ti: '.VerticalCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'FormulaType',\n        ps: [{\n            n: 'a',\n            ti: 'Double'\n          }, {\n            n: 'b',\n            rq: true,\n            ti: 'Double'\n          }, {\n            n: 'c',\n            rq: true,\n            ti: 'Double'\n          }, {\n            n: 'd',\n            ti: 'Double'\n          }]\n      }, {\n        ln: 'EngineeringDatumRefType',\n        ps: [{\n            n: 'engineeringDatum',\n            rq: true,\n            en: 'EngineeringDatum',\n            ti: '.EngineeringDatumType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DirectedObservationAtDistanceType',\n        bti: '.DirectedObservationType',\n        ps: [{\n            n: 'distance',\n            rq: true,\n            ti: '.MeasureType'\n          }]\n      }, {\n        ln: 'AbstractMetaDataType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            t: 'ers'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractCurveSegmentType',\n        ps: [{\n            n: 'numDerivativesAtStart',\n            ti: 'Integer',\n            an: {\n              lp: 'numDerivativesAtStart'\n            },\n            t: 'a'\n          }, {\n            n: 'numDerivativesAtEnd',\n            ti: 'Integer',\n            an: {\n              lp: 'numDerivativesAtEnd'\n            },\n            t: 'a'\n          }, {\n            n: 'numDerivativeInterior',\n            ti: 'Integer',\n            an: {\n              lp: 'numDerivativeInterior'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'RelatedTimeType',\n        bti: '.TimePrimitivePropertyType',\n        ps: [{\n            n: 'relativePosition',\n            an: {\n              lp: 'relativePosition'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationParameterGroupRefType',\n        ps: [{\n            n: 'operationParameterGroup',\n            rq: true,\n            en: 'OperationParameterGroup',\n            ti: '.OperationParameterGroupType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GridType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'limits',\n            rq: true,\n            ti: '.GridLimitsType'\n          }, {\n            n: 'axisName',\n            rq: true,\n            col: true\n          }, {\n            n: 'dimension',\n            rq: true,\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'dimension'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'IndexMapType',\n        bti: '.GridFunctionType',\n        ps: [{\n            n: 'lookUpTable',\n            rq: true,\n            ti: {\n              t: 'l',\n              bti: 'Integer'\n            }\n          }]\n      }, {\n        ln: 'AbstractCurveType',\n        bti: '.AbstractGeometricPrimitiveType'\n      }, {\n        ln: 'MultiGeometryPropertyType',\n        ps: [{\n            n: 'geometricAggregate',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_GeometricAggregate',\n            ti: '.AbstractGeometricAggregateType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GridCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'DerivedCRSTypeType',\n        bti: '.CodeType'\n      }, {\n        ln: 'ArrayType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'members',\n            ti: '.ArrayAssociationType'\n          }]\n      }, {\n        ln: 'AbstractGriddedSurfaceType',\n        bti: '.AbstractParametricCurveSurfaceType',\n        ps: [{\n            n: 'row',\n            rq: true,\n            col: true,\n            ti: '.AbstractGriddedSurfaceType.Row'\n          }, {\n            n: 'rows',\n            ti: 'Integer'\n          }, {\n            n: 'columns',\n            ti: 'Integer'\n          }]\n      }, {\n        ln: 'AbstractTimeGeometricPrimitiveType',\n        bti: '.AbstractTimePrimitiveType',\n        ps: [{\n            n: 'frame',\n            an: {\n              lp: 'frame'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ArrayAssociationType',\n        ps: [{\n            n: 'object',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Object',\n            ti: 'AnyType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'PassThroughOperationRefType',\n        ps: [{\n            n: 'passThroughOperation',\n            rq: true,\n            en: 'PassThroughOperation',\n            ti: '.PassThroughOperationType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'PolygonPatchType',\n        bti: '.AbstractSurfacePatchType',\n        ps: [{\n            n: 'exterior',\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }, {\n            n: 'interior',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeneralTransformationRefType',\n        ps: [{\n            n: 'generalTransformation',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_GeneralTransformation',\n            ti: '.AbstractGeneralTransformationType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TransformationRefType',\n        ps: [{\n            n: 'transformation',\n            rq: true,\n            en: 'Transformation',\n            ti: '.TransformationType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ValueArrayType',\n        bti: '.CompositeValueType',\n        ps: [{\n            n: 'codeSpace',\n            an: {\n              lp: 'codeSpace'\n            },\n            t: 'a'\n          }, {\n            n: 'uom',\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeClockPropertyType',\n        ps: [{\n            n: 'timeClock',\n            rq: true,\n            en: 'TimeClock',\n            ti: '.TimeClockType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CylinderType',\n        bti: '.AbstractGriddedSurfaceType',\n        ps: [{\n            n: 'horizontalCURVETYPE',\n            an: {\n              lp: 'horizontalCurveType'\n            },\n            t: 'a'\n          }, {\n            n: 'verticalCURVETYPE',\n            an: {\n              lp: 'verticalCurveType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiSurfaceCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'VerticalDatumTypeType',\n        bti: '.CodeType'\n      }, {\n        ln: 'GeometryArrayPropertyType',\n        ps: [{\n            n: 'geometry',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'MultiCurvePropertyType',\n        ps: [{\n            n: 'multiCurve',\n            rq: true,\n            en: 'MultiCurve',\n            ti: '.MultiCurveType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DirectedFacePropertyType',\n        ps: [{\n            n: 'face',\n            rq: true,\n            en: 'Face',\n            ti: '.FaceType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GridFunctionType',\n        ps: [{\n            n: 'sequenceRule',\n            ti: '.SequenceRuleType'\n          }, {\n            n: 'startPoint',\n            ti: {\n              t: 'l',\n              bti: 'Integer'\n            }\n          }]\n      }, {\n        ln: 'DMSAngleType',\n        ps: [{\n            n: 'degrees',\n            rq: true,\n            ti: '.DegreesType'\n          }, {\n            n: 'decimalMinutes',\n            rq: true,\n            ti: 'Decimal'\n          }, {\n            n: 'minutes',\n            rq: true,\n            ti: 'NonNegativeInteger'\n          }, {\n            n: 'seconds',\n            ti: 'Decimal'\n          }]\n      }, {\n        ln: 'AbstractTimeComplexType',\n        bti: '.AbstractTimeObjectType'\n      }, {\n        ln: 'LocationPropertyType',\n        ps: [{\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'locationKeyWord',\n            rq: true,\n            en: 'LocationKeyWord',\n            ti: '.CodeType'\n          }, {\n            n: 'locationString',\n            rq: true,\n            en: 'LocationString',\n            ti: '.StringOrRefType'\n          }, {\n            n: '_null',\n            rq: true,\n            en: 'Null',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'SurfaceType',\n        bti: '.AbstractSurfaceType',\n        ps: [{\n            n: 'patches',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.SurfacePatchArrayPropertyType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'LabelType',\n        ps: [{\n            n: 'content',\n            col: true,\n            dom: false,\n            en: 'LabelExpression',\n            t: 'er'\n          }, {\n            n: 'transform',\n            an: {\n              lp: 'transform',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationParameterRefType',\n        ps: [{\n            n: 'operationParameter',\n            rq: true,\n            en: 'OperationParameter',\n            ti: '.OperationParameterType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractSolidType',\n        bti: '.AbstractGeometricPrimitiveType'\n      }, {\n        ln: 'GenericMetaDataType',\n        bti: '.AbstractMetaDataType',\n        ps: [{\n            n: 'contentOverrideForGenericMetaDataType',\n            t: 'ae'\n          }]\n      }, {\n        ln: 'CoordinateOperationRefType',\n        ps: [{\n            n: 'coordinateOperation',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_CoordinateOperation',\n            ti: '.AbstractCoordinateOperationType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DataBlockType',\n        ps: [{\n            n: 'rangeParameters',\n            rq: true,\n            ti: '.RangeParametersType'\n          }, {\n            n: 'tupleList',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'doubleOrNullTupleList',\n            rq: true,\n            ti: {\n              t: 'l'\n            }\n          }]\n      }, {\n        ln: 'TopoComplexType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'maximalComplex',\n            rq: true,\n            ti: '.TopoComplexMemberType'\n          }, {\n            n: 'superComplex',\n            mno: 0,\n            col: true,\n            ti: '.TopoComplexMemberType'\n          }, {\n            n: 'subComplex',\n            mno: 0,\n            col: true,\n            ti: '.TopoComplexMemberType'\n          }, {\n            n: 'topoPrimitiveMember',\n            mno: 0,\n            col: true,\n            ti: '.TopoPrimitiveMemberType'\n          }, {\n            n: 'topoPrimitiveMembers',\n            ti: '.TopoPrimitiveArrayAssociationType'\n          }, {\n            n: 'isMaximal',\n            ti: 'Boolean',\n            an: {\n              lp: 'isMaximal'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'NodeType',\n        bti: '.AbstractTopoPrimitiveType',\n        ps: [{\n            n: 'directedEdge',\n            mno: 0,\n            col: true,\n            ti: '.DirectedEdgePropertyType'\n          }, {\n            n: 'pointProperty',\n            ti: '.PointPropertyType'\n          }]\n      }, {\n        ln: 'PolarCSRefType',\n        ps: [{\n            n: 'polarCS',\n            rq: true,\n            en: 'PolarCS',\n            ti: '.PolarCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractTopologyType',\n        bti: '.AbstractGMLType'\n      }, {\n        ln: 'ClothoidType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'refLocation',\n            rq: true,\n            ti: '.ClothoidType.RefLocation'\n          }, {\n            n: 'scaleFactor',\n            rq: true,\n            ti: 'Decimal'\n          }, {\n            n: 'startParameter',\n            rq: true,\n            ti: 'Double'\n          }, {\n            n: 'endParameter',\n            rq: true,\n            ti: 'Double'\n          }]\n      }, {\n        ln: 'MetaDataPropertyType',\n        ps: [{\n            n: 'any',\n            rq: true,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ArcByCenterPointType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'pos',\n            rq: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'pointProperty',\n            rq: true,\n            ti: '.PointPropertyType'\n          }, {\n            n: 'pointRep',\n            rq: true,\n            ti: '.PointPropertyType'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'radius',\n            rq: true,\n            ti: '.LengthType'\n          }, {\n            n: 'startAngle',\n            ti: '.AngleType'\n          }, {\n            n: 'endAngle',\n            ti: '.AngleType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }, {\n            n: 'numARC',\n            rq: true,\n            ti: 'Integer',\n            an: {\n              lp: 'numArc'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ConversionRefType',\n        ps: [{\n            n: 'conversion',\n            rq: true,\n            en: 'Conversion',\n            ti: '.ConversionType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DegreesType',\n        ps: [{\n            n: 'value',\n            ti: 'NonNegativeInteger',\n            t: 'v'\n          }, {\n            n: 'direction',\n            an: {\n              lp: 'direction'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiSurfaceDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'ConcatenatedOperationRefType',\n        ps: [{\n            n: 'concatenatedOperation',\n            rq: true,\n            en: 'ConcatenatedOperation',\n            ti: '.ConcatenatedOperationType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationMethodType',\n        bti: '.OperationMethodBaseType',\n        ps: [{\n            n: 'methodID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'methodFormula',\n            rq: true,\n            ti: '.CodeType'\n          }, {\n            n: 'sourceDimensions',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'targetDimensions',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'usesParameter',\n            mno: 0,\n            col: true,\n            ti: '.AbstractGeneralOperationParameterRefType'\n          }]\n      }, {\n        ln: 'EllipsoidalCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'SpeedType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'PolygonType',\n        bti: '.AbstractSurfaceType',\n        ps: [{\n            n: 'exterior',\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }, {\n            n: 'interior',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'AbstractTopoPrimitiveType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'isolated',\n            mno: 0,\n            col: true,\n            ti: '.IsolatedPropertyType'\n          }, {\n            n: 'container',\n            ti: '.ContainerPropertyType'\n          }]\n      }, {\n        ln: 'BSplineType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'degree',\n            rq: true,\n            ti: 'NonNegativeInteger'\n          }, {\n            n: 'knot',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.KnotPropertyType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }, {\n            n: 'isPolynomial',\n            ti: 'Boolean',\n            an: {\n              lp: 'isPolynomial'\n            },\n            t: 'a'\n          }, {\n            n: 'knotType',\n            an: {\n              lp: 'knotType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'FileType',\n        ps: [{\n            n: 'rangeParameters',\n            rq: true,\n            ti: '.RangeParametersType'\n          }, {\n            n: 'fileName',\n            rq: true\n          }, {\n            n: 'fileStructure',\n            rq: true\n          }, {\n            n: 'mimeType'\n          }, {\n            n: 'compression'\n          }]\n      }, {\n        ln: 'RectifiedGridType',\n        bti: '.GridType',\n        ps: [{\n            n: 'origin',\n            rq: true,\n            ti: '.PointPropertyType'\n          }, {\n            n: 'offsetVector',\n            rq: true,\n            col: true,\n            ti: '.VectorType'\n          }]\n      }, {\n        ln: 'TimePeriodPropertyType',\n        ps: [{\n            n: 'timePeriod',\n            rq: true,\n            en: 'TimePeriod',\n            ti: '.TimePeriodType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'RingType',\n        bti: '.AbstractRingType',\n        ps: [{\n            n: 'curveMember',\n            rq: true,\n            col: true,\n            ti: '.CurvePropertyType'\n          }]\n      }, {\n        ln: 'ClothoidType.RefLocation',\n        tn: null,\n        ps: [{\n            n: 'affinePlacement',\n            rq: true,\n            en: 'AffinePlacement',\n            ti: '.AffinePlacementType'\n          }]\n      }, {\n        ln: 'GeometryStylePropertyType',\n        ps: [{\n            n: 'geometryStyle',\n            en: 'GeometryStyle',\n            ti: '.GeometryStyleType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'EnvelopeWithTimePeriodType',\n        bti: '.EnvelopeType',\n        ps: [{\n            n: 'timePosition',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            ti: '.TimePositionType'\n          }, {\n            n: 'frame',\n            an: {\n              lp: 'frame'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ValuePropertyType',\n        ps: [{\n            n: '_boolean',\n            rq: true,\n            en: 'Boolean',\n            ti: 'Boolean'\n          }, {\n            n: 'category',\n            rq: true,\n            en: 'Category',\n            ti: '.CodeType'\n          }, {\n            n: 'quantity',\n            rq: true,\n            en: 'Quantity',\n            ti: '.MeasureType'\n          }, {\n            n: 'count',\n            rq: true,\n            en: 'Count',\n            ti: 'Integer'\n          }, {\n            n: 'booleanList',\n            rq: true,\n            en: 'BooleanList',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'categoryList',\n            rq: true,\n            en: 'CategoryList',\n            ti: '.CodeOrNullListType'\n          }, {\n            n: 'quantityList',\n            rq: true,\n            en: 'QuantityList',\n            ti: '.MeasureOrNullListType'\n          }, {\n            n: 'countList',\n            rq: true,\n            en: 'CountList',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'categoryExtent',\n            rq: true,\n            en: 'CategoryExtent',\n            ti: '.CategoryExtentType'\n          }, {\n            n: 'quantityExtent',\n            rq: true,\n            en: 'QuantityExtent',\n            ti: '.QuantityExtentType'\n          }, {\n            n: 'countExtent',\n            rq: true,\n            en: 'CountExtent',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'compositeValue',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: 'CompositeValue',\n            ti: '.CompositeValueType',\n            t: 'er'\n          }, {\n            n: 'object',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Object',\n            ti: 'AnyType',\n            t: 'er'\n          }, {\n            n: '_null',\n            rq: true,\n            en: 'Null',\n            ti: {\n              t: 'l'\n            }\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeodesicStringType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'geometricPositionGroup',\n            rq: true,\n            mno: 2,\n            col: true,\n            etis: [{\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }],\n            t: 'es'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractDatumBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'TemporalCRSRefType',\n        ps: [{\n            n: 'temporalCRS',\n            rq: true,\n            en: 'TemporalCRS',\n            ti: '.TemporalCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiGeometryType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'geometryMember',\n            mno: 0,\n            col: true,\n            ti: '.GeometryPropertyType'\n          }, {\n            n: 'geometryMembers',\n            ti: '.GeometryArrayPropertyType'\n          }]\n      }, {\n        ln: 'TimeInstantPropertyType',\n        ps: [{\n            n: 'timeInstant',\n            rq: true,\n            en: 'TimeInstant',\n            ti: '.TimeInstantType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CompoundCRSRefType',\n        ps: [{\n            n: 'compoundCRS',\n            rq: true,\n            en: 'CompoundCRS',\n            ti: '.CompoundCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TrianglePatchArrayPropertyType',\n        bti: '.SurfacePatchArrayPropertyType'\n      }, {\n        ln: 'DomainSetType',\n        ps: [{\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'timeObject',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_TimeObject',\n            ti: '.AbstractTimeObjectType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TemporalCSRefType',\n        ps: [{\n            n: 'temporalCS',\n            rq: true,\n            en: 'TemporalCS',\n            ti: '.TemporalCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiPolygonType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'polygonMember',\n            mno: 0,\n            col: true,\n            ti: '.PolygonPropertyType'\n          }]\n      }, {\n        ln: 'StyleType',\n        bti: '.AbstractStyleType',\n        ps: [{\n            n: 'featureStyle',\n            rq: true,\n            col: true,\n            ti: '.FeatureStylePropertyType'\n          }, {\n            n: 'graphStyle',\n            ti: '.GraphStylePropertyType'\n          }]\n      }, {\n        ln: 'DynamicFeatureCollectionType',\n        bti: '.FeatureCollectionType',\n        ps: [{\n            n: 'validTime',\n            ti: '.TimePrimitivePropertyType'\n          }, {\n            n: 'history',\n            mx: false,\n            dom: false,\n            ti: '.HistoryPropertyType',\n            t: 'er'\n          }, {\n            n: 'dataSource',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'PrimeMeridianBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'AbstractGriddedSurfaceType.Row',\n        tn: null,\n        ps: [{\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'geometricPositionGroup',\n            rq: true,\n            col: true,\n            etis: [{\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }],\n            t: 'es'\n          }]\n      }, {\n        ln: 'DictionaryType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'dictionaryEntryOrIndirectEntry',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'indirectEntry',\n                ti: '.IndirectEntryType'\n              }, {\n                en: 'dictionaryEntry',\n                ti: '.DictionaryEntryType'\n              }],\n            t: 'ers'\n          }]\n      }, {\n        ln: 'CoordType',\n        ps: [{\n            n: 'x',\n            rq: true,\n            en: 'X',\n            ti: 'Decimal'\n          }, {\n            n: 'y',\n            en: 'Y',\n            ti: 'Decimal'\n          }, {\n            n: 'z',\n            en: 'Z',\n            ti: 'Decimal'\n          }]\n      }, {\n        ln: 'RectangleType',\n        bti: '.AbstractSurfacePatchType',\n        ps: [{\n            n: 'exterior',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'DirectionPropertyType',\n        ps: [{\n            n: 'directionVector',\n            rq: true,\n            en: 'DirectionVector',\n            ti: '.DirectionVectorType'\n          }, {\n            n: 'compassPoint',\n            rq: true,\n            en: 'CompassPoint'\n          }, {\n            n: 'directionKeyword',\n            rq: true,\n            en: 'DirectionKeyword',\n            ti: '.CodeType'\n          }, {\n            n: 'directionString',\n            rq: true,\n            en: 'DirectionString',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractFeatureCollectionType',\n        bti: '.AbstractFeatureType',\n        ps: [{\n            n: 'featureMember',\n            mno: 0,\n            col: true,\n            ti: '.FeaturePropertyType'\n          }, {\n            n: 'featureMembers',\n            ti: '.FeatureArrayPropertyType'\n          }]\n      }, {\n        ln: 'PrimeMeridianType',\n        bti: '.PrimeMeridianBaseType',\n        ps: [{\n            n: 'meridianID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'greenwichLongitude',\n            rq: true,\n            ti: '.AngleChoiceType'\n          }]\n      }, {\n        ln: 'SolidPropertyType',\n        ps: [{\n            n: 'solid',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Solid',\n            ti: '.AbstractSolidType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'FeatureStylePropertyType',\n        ps: [{\n            n: 'featureStyle',\n            en: 'FeatureStyle',\n            ti: '.FeatureStyleType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeCalendarType',\n        bti: '.AbstractTimeReferenceSystemType',\n        ps: [{\n            n: 'referenceFrame',\n            rq: true,\n            col: true,\n            ti: '.TimeCalendarEraPropertyType'\n          }]\n      }, {\n        ln: 'AbstractGeneralOperationParameterType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'minimumOccurs',\n            ti: 'NonNegativeInteger'\n          }]\n      }, {\n        ln: 'DerivedCRSType',\n        bti: '.AbstractGeneralDerivedCRSType',\n        ps: [{\n            n: 'derivedCRSType',\n            rq: true,\n            ti: '.DerivedCRSTypeType'\n          }, {\n            n: 'usesCS',\n            rq: true,\n            ti: '.CoordinateSystemRefType'\n          }]\n      }, {\n        ln: 'TimeType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'CylindricalCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'UnitOfMeasureType',\n        ps: [{\n            n: 'uom',\n            rq: true,\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeneralConversionRefType',\n        ps: [{\n            n: 'generalConversion',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_GeneralConversion',\n            ti: '.AbstractGeneralConversionType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AffinePlacementType',\n        ps: [{\n            n: 'location',\n            rq: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'refDirection',\n            rq: true,\n            col: true,\n            ti: '.VectorType'\n          }, {\n            n: 'inDimension',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'outDimension',\n            rq: true,\n            ti: 'PositiveInteger'\n          }]\n      }, {\n        ln: 'PolyhedralSurfaceType',\n        bti: '.SurfaceType'\n      }, {\n        ln: 'IsolatedPropertyType',\n        ps: [{\n            n: 'node',\n            rq: true,\n            en: 'Node',\n            ti: '.NodeType'\n          }, {\n            n: 'edge',\n            rq: true,\n            en: 'Edge',\n            ti: '.EdgeType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'SolidType',\n        bti: '.AbstractSolidType',\n        ps: [{\n            n: 'exterior',\n            ti: '.SurfacePropertyType'\n          }, {\n            n: 'interior',\n            mno: 0,\n            col: true,\n            ti: '.SurfacePropertyType'\n          }]\n      }, {\n        ln: 'VerticalCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'ArcType',\n        bti: '.ArcStringType'\n      }, {\n        ln: 'GeometricPrimitivePropertyType',\n        ps: [{\n            n: 'geometricPrimitive',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_GeometricPrimitive',\n            ti: '.AbstractGeometricPrimitiveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractSurfacePatchType'\n      }, {\n        ln: 'EllipsoidalCSRefType',\n        ps: [{\n            n: 'ellipsoidalCS',\n            rq: true,\n            en: 'EllipsoidalCS',\n            ti: '.EllipsoidalCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LineStringSegmentType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'IdentifierType',\n        ps: [{\n            n: 'name',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.CodeType',\n            t: 'er'\n          }, {\n            n: 'version'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'AbstractGeneralTransformationType',\n        bti: '.AbstractCoordinateOperationType'\n      }, {\n        ln: 'TimeCoordinateSystemType',\n        bti: '.AbstractTimeReferenceSystemType',\n        ps: [{\n            n: 'originPosition',\n            rq: true,\n            ti: '.TimePositionType'\n          }, {\n            n: 'origin',\n            rq: true,\n            ti: '.TimeInstantPropertyType'\n          }, {\n            n: 'interval',\n            rq: true,\n            ti: '.TimeIntervalLengthType'\n          }]\n      }, {\n        ln: 'TemporalDatumBaseType',\n        bti: '.AbstractDatumType'\n      }, {\n        ln: 'GridLengthType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'IndirectEntryType',\n        ps: [{\n            n: 'definitionProxy',\n            rq: true,\n            en: 'DefinitionProxy',\n            ti: '.DefinitionProxyType'\n          }]\n      }, {\n        ln: 'PolygonPatchArrayPropertyType',\n        bti: '.SurfacePatchArrayPropertyType'\n      }, {\n        ln: 'HistoryPropertyType',\n        ps: [{\n            n: 'timeSlice',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_TimeSlice',\n            ti: '.AbstractTimeSliceType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'EnvelopeType',\n        ps: [{\n            n: 'lowerCorner',\n            rq: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'upperCorner',\n            rq: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'coord',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            ti: '.CoordType'\n          }, {\n            n: 'pos',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }, {\n            n: 'srsDimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'srsDimension'\n            },\n            t: 'a'\n          }, {\n            n: 'axisLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'axisLabels'\n            },\n            t: 'a'\n          }, {\n            n: 'uomLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'uomLabels'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'CountPropertyType',\n        bti: '.ValuePropertyType'\n      }, {\n        ln: 'ConversionType',\n        bti: '.AbstractGeneralConversionType',\n        ps: [{\n            n: 'usesMethod',\n            rq: true,\n            ti: '.OperationMethodRefType'\n          }, {\n            n: 'usesValue',\n            mno: 0,\n            col: true,\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'UserDefinedCSRefType',\n        ps: [{\n            n: 'userDefinedCS',\n            rq: true,\n            en: 'UserDefinedCS',\n            ti: '.UserDefinedCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LabelStylePropertyType',\n        ps: [{\n            n: 'labelStyle',\n            en: 'LabelStyle',\n            ti: '.LabelStyleType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'BaseStyleDescriptorType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'spatialResolution',\n            ti: '.ScaleType'\n          }, {\n            n: 'styleVariation',\n            mno: 0,\n            col: true,\n            ti: '.StyleVariationType'\n          }, {\n            n: 'animate',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'animate',\n              ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/'\n            },\n            ti: 'SMIL_2_0_Language.AnimateType'\n          }, {\n            n: 'animateMotion',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'animateMotion',\n              ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/'\n            },\n            ti: 'SMIL_2_0_Language.AnimateMotionType'\n          }, {\n            n: 'animateColor',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'animateColor',\n              ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/'\n            },\n            ti: 'SMIL_2_0_Language.AnimateColorType'\n          }, {\n            n: 'set',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'set',\n              ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/'\n            },\n            ti: 'SMIL_2_0_Language.SetType'\n          }]\n      }, {\n        ln: 'SphericalCSRefType',\n        ps: [{\n            n: 'sphericalCS',\n            rq: true,\n            en: 'SphericalCS',\n            ti: '.SphericalCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeodeticDatumType',\n        bti: '.AbstractDatumType',\n        ps: [{\n            n: 'usesPrimeMeridian',\n            rq: true,\n            ti: '.PrimeMeridianRefType'\n          }, {\n            n: 'usesEllipsoid',\n            rq: true,\n            ti: '.EllipsoidRefType'\n          }]\n      }, {\n        ln: 'OperationMethodBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'LineStringSegmentArrayPropertyType',\n        ps: [{\n            n: 'lineStringSegment',\n            mno: 0,\n            col: true,\n            en: 'LineStringSegment',\n            ti: '.LineStringSegmentType'\n          }]\n      }, {\n        ln: 'MeasureListType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            },\n            t: 'v'\n          }, {\n            n: 'uom',\n            rq: true,\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'EngineeringDatumType',\n        bti: '.AbstractDatumType'\n      }, {\n        ln: 'ScalarValuePropertyType',\n        bti: '.ValuePropertyType'\n      }, {\n        ln: 'TopoVolumeType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'directedTopoSolid',\n            rq: true,\n            col: true,\n            ti: '.DirectedTopoSolidPropertyType'\n          }]\n      }, {\n        ln: 'TopoCurvePropertyType',\n        ps: [{\n            n: 'topoCurve',\n            rq: true,\n            en: 'TopoCurve',\n            ti: '.TopoCurveType'\n          }]\n      }, {\n        ln: 'TransformationType',\n        bti: '.AbstractGeneralTransformationType',\n        ps: [{\n            n: 'usesMethod',\n            rq: true,\n            ti: '.OperationMethodRefType'\n          }, {\n            n: 'usesValue',\n            mno: 0,\n            col: true,\n            ti: '.ParameterValueType'\n          }]\n      }, {\n        ln: 'ParameterValueType',\n        bti: '.AbstractGeneralParameterValueType',\n        ps: [{\n            n: 'value',\n            rq: true,\n            ti: '.MeasureType'\n          }, {\n            n: 'dmsAngleValue',\n            rq: true,\n            ti: '.DMSAngleType'\n          }, {\n            n: 'stringValue',\n            rq: true\n          }, {\n            n: 'integerValue',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'booleanValue',\n            rq: true,\n            ti: 'Boolean'\n          }, {\n            n: 'valueList',\n            rq: true,\n            ti: '.MeasureListType'\n          }, {\n            n: 'integerValueList',\n            rq: true,\n            ti: {\n              t: 'l',\n              bti: 'Integer'\n            }\n          }, {\n            n: 'valueFile',\n            rq: true\n          }, {\n            n: 'valueOfParameter',\n            rq: true,\n            ti: '.OperationParameterRefType'\n          }]\n      }, {\n        ln: 'TimeGeometricPrimitivePropertyType',\n        ps: [{\n            n: 'timeGeometricPrimitive',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_TimeGeometricPrimitive',\n            ti: '.AbstractTimeGeometricPrimitiveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeClockType',\n        bti: '.AbstractTimeReferenceSystemType',\n        ps: [{\n            n: 'referenceEvent',\n            rq: true,\n            ti: '.StringOrRefType'\n          }, {\n            n: 'referenceTime',\n            rq: true,\n            ti: 'Time'\n          }, {\n            n: 'utcReference',\n            rq: true,\n            ti: 'Time'\n          }, {\n            n: 'dateBasis',\n            mno: 0,\n            col: true,\n            ti: '.TimeCalendarPropertyType'\n          }]\n      }, {\n        ln: 'CubicSplineType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'vectorAtStart',\n            rq: true,\n            ti: '.VectorType'\n          }, {\n            n: 'vectorAtEnd',\n            rq: true,\n            ti: '.VectorType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }, {\n            n: 'degree',\n            ti: 'Integer',\n            an: {\n              lp: 'degree'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationMethodRefType',\n        ps: [{\n            n: 'operationMethod',\n            rq: true,\n            en: 'OperationMethod',\n            ti: '.OperationMethodType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LineStringPropertyType',\n        ps: [{\n            n: 'lineString',\n            rq: true,\n            en: 'LineString',\n            ti: '.LineStringType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractCoverageType',\n        bti: '.AbstractFeatureType',\n        ps: [{\n            n: 'domainSet',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.DomainSetType',\n            t: 'er'\n          }, {\n            n: 'rangeSet',\n            rq: true,\n            ti: '.RangeSetType'\n          }, {\n            n: 'dimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'dimension'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TargetPropertyType',\n        ps: [{\n            n: 'feature',\n            rq: true,\n            mx: false,\n            en: '_Feature',\n            ti: '.AbstractFeatureType',\n            t: 'er'\n          }, {\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimePrimitivePropertyType',\n        ps: [{\n            n: 'timePrimitive',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_TimePrimitive',\n            ti: '.AbstractTimePrimitiveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CategoryPropertyType',\n        bti: '.ValuePropertyType'\n      }, {\n        ln: 'LineStringType',\n        bti: '.AbstractCurveType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'coord',\n                ti: '.CoordType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }]\n      }, {\n        ln: 'DerivationUnitTermType',\n        bti: '.UnitOfMeasureType',\n        ps: [{\n            n: 'exponent',\n            ti: 'Integer',\n            an: {\n              lp: 'exponent'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TinType',\n        bti: '.TriangulatedSurfaceType',\n        ps: [{\n            n: 'stopLines',\n            mno: 0,\n            col: true,\n            ti: '.LineStringSegmentArrayPropertyType'\n          }, {\n            n: 'breakLines',\n            mno: 0,\n            col: true,\n            ti: '.LineStringSegmentArrayPropertyType'\n          }, {\n            n: 'maxLength',\n            rq: true,\n            ti: '.LengthType'\n          }, {\n            n: 'controlPoint',\n            rq: true,\n            ti: '.TinType.ControlPoint'\n          }]\n      }, {\n        ln: 'GeodeticDatumRefType',\n        ps: [{\n            n: 'geodeticDatum',\n            rq: true,\n            en: 'GeodeticDatum',\n            ti: '.GeodeticDatumType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimePositionType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l'\n            },\n            t: 'v'\n          }, {\n            n: 'frame',\n            an: {\n              lp: 'frame'\n            },\n            t: 'a'\n          }, {\n            n: 'calendarEraName',\n            an: {\n              lp: 'calendarEraName'\n            },\n            t: 'a'\n          }, {\n            n: 'indeterminatePosition',\n            an: {\n              lp: 'indeterminatePosition'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PrimeMeridianRefType',\n        ps: [{\n            n: 'primeMeridian',\n            rq: true,\n            en: 'PrimeMeridian',\n            ti: '.PrimeMeridianType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'VolumeType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'TimeIntervalLengthType',\n        ps: [{\n            n: 'value',\n            ti: 'Decimal',\n            t: 'v'\n          }, {\n            n: 'unit',\n            rq: true,\n            an: {\n              lp: 'unit'\n            },\n            t: 'a'\n          }, {\n            n: 'radix',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'radix'\n            },\n            t: 'a'\n          }, {\n            n: 'factor',\n            ti: 'Integer',\n            an: {\n              lp: 'factor'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ParameterValueGroupType',\n        bti: '.AbstractGeneralParameterValueType',\n        ps: [{\n            n: 'includesValue',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.AbstractGeneralParameterValueType'\n          }, {\n            n: 'valuesOfGroup',\n            rq: true,\n            ti: '.OperationParameterGroupRefType'\n          }]\n      }, {\n        ln: 'CartesianCSRefType',\n        ps: [{\n            n: 'cartesianCS',\n            rq: true,\n            en: 'CartesianCS',\n            ti: '.CartesianCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeEdgePropertyType',\n        ps: [{\n            n: 'timeEdge',\n            rq: true,\n            en: 'TimeEdge',\n            ti: '.TimeEdgeType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopoPointPropertyType',\n        ps: [{\n            n: 'topoPoint',\n            rq: true,\n            en: 'TopoPoint',\n            ti: '.TopoPointType'\n          }]\n      }, {\n        ln: 'ProjectedCRSType',\n        bti: '.AbstractGeneralDerivedCRSType',\n        ps: [{\n            n: 'usesCartesianCS',\n            rq: true,\n            ti: '.CartesianCSRefType'\n          }]\n      }, {\n        ln: 'MultiCurveDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'AbstractReferenceSystemBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'PolygonPropertyType',\n        ps: [{\n            n: 'polygon',\n            rq: true,\n            en: 'Polygon',\n            ti: '.PolygonType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'PolarCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'AbstractGeometricPrimitiveType',\n        bti: '.AbstractGeometryType'\n      }, {\n        ln: 'MultiSolidDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'TopoVolumePropertyType',\n        ps: [{\n            n: 'topoVolume',\n            rq: true,\n            en: 'TopoVolume',\n            ti: '.TopoVolumeType'\n          }]\n      }, {\n        ln: 'CircleType',\n        bti: '.ArcType'\n      }, {\n        ln: 'ValueArrayPropertyType',\n        ps: [{\n            n: 'value',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'CountExtent',\n                ti: {\n                  t: 'l'\n                }\n              }, {\n                en: 'Quantity',\n                ti: '.MeasureType'\n              }, {\n                en: 'Null',\n                ti: {\n                  t: 'l'\n                }\n              }, {\n                en: 'CountList',\n                ti: {\n                  t: 'l'\n                }\n              }, {\n                en: 'Count',\n                ti: 'Integer'\n              }, {\n                en: 'QuantityExtent',\n                ti: '.QuantityExtentType'\n              }, {\n                en: '_Object',\n                ti: 'AnyType'\n              }, {\n                en: 'CategoryList',\n                ti: '.CodeOrNullListType'\n              }, {\n                en: 'CompositeValue',\n                ti: '.CompositeValueType'\n              }, {\n                en: 'CategoryExtent',\n                ti: '.CategoryExtentType'\n              }, {\n                en: 'Category',\n                ti: '.CodeType'\n              }, {\n                en: 'BooleanList',\n                ti: {\n                  t: 'l'\n                }\n              }, {\n                en: 'QuantityList',\n                ti: '.MeasureOrNullListType'\n              }, {\n                en: 'Boolean',\n                ti: 'Boolean'\n              }],\n            t: 'ers'\n          }]\n      }, {\n        ln: 'GraphStyleType',\n        bti: '.BaseStyleDescriptorType',\n        ps: [{\n            n: 'planar',\n            ti: 'Boolean'\n          }, {\n            n: 'directed',\n            ti: 'Boolean'\n          }, {\n            n: 'grid',\n            ti: 'Boolean'\n          }, {\n            n: 'minDistance',\n            ti: 'Double'\n          }, {\n            n: 'minAngle',\n            ti: 'Double'\n          }, {\n            n: 'graphType'\n          }, {\n            n: 'drawingType'\n          }, {\n            n: 'lineType'\n          }, {\n            n: 'aestheticCriteria',\n            mno: 0,\n            col: true\n          }]\n      }, {\n        ln: 'AbstractGeneralConversionType',\n        bti: '.AbstractCoordinateOperationType'\n      }, {\n        ln: 'TopoSurfaceType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'directedFace',\n            rq: true,\n            col: true,\n            ti: '.DirectedFacePropertyType'\n          }]\n      }, {\n        ln: 'MultiPointDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'CircleByCenterPointType',\n        bti: '.ArcByCenterPointType'\n      }, {\n        ln: 'CompositeSurfaceType',\n        bti: '.AbstractSurfaceType',\n        ps: [{\n            n: 'surfaceMember',\n            rq: true,\n            col: true,\n            ti: '.SurfacePropertyType'\n          }]\n      }, {\n        ln: 'MultiCurveCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'MultiLineStringType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'lineStringMember',\n            mno: 0,\n            col: true,\n            ti: '.LineStringPropertyType'\n          }]\n      }, {\n        ln: 'ImageCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesCartesianCS',\n            rq: true,\n            ti: '.CartesianCSRefType'\n          }, {\n            n: 'usesObliqueCartesianCS',\n            rq: true,\n            ti: '.ObliqueCartesianCSRefType'\n          }, {\n            n: 'usesImageDatum',\n            rq: true,\n            ti: '.ImageDatumRefType'\n          }]\n      }, {\n        ln: 'FeaturePropertyType',\n        ps: [{\n            n: 'feature',\n            rq: true,\n            mx: false,\n            en: '_Feature',\n            ti: '.AbstractFeatureType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CoordinateSystemAxisBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'GeodesicType',\n        bti: '.GeodesicStringType'\n      }, {\n        ln: 'CovarianceElementType',\n        ps: [{\n            n: 'rowIndex',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'columnIndex',\n            rq: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'covariance',\n            rq: true,\n            ti: 'Double'\n          }]\n      }, {\n        ln: 'DerivedUnitType',\n        bti: '.UnitDefinitionType',\n        ps: [{\n            n: 'derivationUnitTerm',\n            rq: true,\n            col: true,\n            ti: '.DerivationUnitTermType'\n          }]\n      }, {\n        ln: 'EdgeType',\n        bti: '.AbstractTopoPrimitiveType',\n        ps: [{\n            n: 'directedNode',\n            rq: true,\n            mno: 2,\n            mxo: 2,\n            col: true,\n            ti: '.DirectedNodePropertyType'\n          }, {\n            n: 'directedFace',\n            mno: 0,\n            col: true,\n            ti: '.DirectedFacePropertyType'\n          }, {\n            n: 'curveProperty',\n            ti: '.CurvePropertyType'\n          }]\n      }, {\n        ln: 'CompositeSolidPropertyType',\n        ps: [{\n            n: 'compositeSolid',\n            rq: true,\n            en: 'CompositeSolid',\n            ti: '.CompositeSolidType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CRSRefType',\n        ps: [{\n            n: 'crs',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_CRS',\n            ti: '.AbstractReferenceSystemType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AssociationType',\n        ps: [{\n            n: 'object',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Object',\n            ti: 'AnyType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeOrdinalEraPropertyType',\n        ps: [{\n            n: 'timeOrdinalEra',\n            rq: true,\n            en: 'TimeOrdinalEra',\n            ti: '.TimeOrdinalEraType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractCoordinateSystemType',\n        bti: '.AbstractCoordinateSystemBaseType',\n        ps: [{\n            n: 'csID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'usesAxis',\n            rq: true,\n            col: true,\n            ti: '.CoordinateSystemAxisRefType'\n          }]\n      }, {\n        ln: 'GridDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'SolidArrayPropertyType',\n        ps: [{\n            n: 'solid',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Solid',\n            ti: '.AbstractSolidType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'ConventionalUnitType',\n        bti: '.UnitDefinitionType',\n        ps: [{\n            n: 'conversionToPreferredUnit',\n            rq: true,\n            ti: '.ConversionToPreferredUnitType'\n          }, {\n            n: 'roughConversionToPreferredUnit',\n            rq: true,\n            ti: '.ConversionToPreferredUnitType'\n          }, {\n            n: 'derivationUnitTerm',\n            mno: 0,\n            col: true,\n            ti: '.DerivationUnitTermType'\n          }]\n      }, {\n        ln: 'OrientableCurveType',\n        bti: '.AbstractCurveType',\n        ps: [{\n            n: 'baseCurve',\n            rq: true,\n            ti: '.CurvePropertyType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SphereType',\n        bti: '.AbstractGriddedSurfaceType',\n        ps: [{\n            n: 'horizontalCURVETYPE',\n            an: {\n              lp: 'horizontalCurveType'\n            },\n            t: 'a'\n          }, {\n            n: 'verticalCURVETYPE',\n            an: {\n              lp: 'verticalCurveType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractGeometricAggregateType',\n        bti: '.AbstractGeometryType'\n      }, {\n        ln: 'CurveType',\n        bti: '.AbstractCurveType',\n        ps: [{\n            n: 'segments',\n            rq: true,\n            ti: '.CurveSegmentArrayPropertyType'\n          }]\n      }, {\n        ln: 'GridEnvelopeType',\n        ps: [{\n            n: 'low',\n            rq: true,\n            ti: {\n              t: 'l',\n              bti: 'Integer'\n            }\n          }, {\n            n: 'high',\n            rq: true,\n            ti: {\n              t: 'l',\n              bti: 'Integer'\n            }\n          }]\n      }, {\n        ln: 'ObservationType',\n        bti: '.AbstractFeatureType',\n        ps: [{\n            n: 'validTime',\n            rq: true,\n            ti: '.TimePrimitivePropertyType'\n          }, {\n            n: 'using',\n            ti: '.FeaturePropertyType'\n          }, {\n            n: 'target',\n            mx: false,\n            dom: false,\n            ti: '.TargetPropertyType',\n            t: 'er'\n          }, {\n            n: 'resultOf',\n            rq: true,\n            ti: '.AssociationType'\n          }]\n      }, {\n        ln: 'BoundedFeatureType',\n        bti: '.AbstractFeatureType'\n      }, {\n        ln: 'TopoCurveType',\n        bti: '.AbstractTopologyType',\n        ps: [{\n            n: 'directedEdge',\n            rq: true,\n            col: true,\n            ti: '.DirectedEdgePropertyType'\n          }]\n      }, {\n        ln: 'CovarianceMatrixType',\n        bti: '.AbstractPositionalAccuracyType',\n        ps: [{\n            n: 'unitOfMeasure',\n            rq: true,\n            col: true,\n            ti: '.UnitOfMeasureType'\n          }, {\n            n: 'includesElement',\n            rq: true,\n            col: true,\n            ti: '.CovarianceElementType'\n          }]\n      }, {\n        ln: 'ConcatenatedOperationType',\n        bti: '.AbstractCoordinateOperationType',\n        ps: [{\n            n: 'usesSingleOperation',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.SingleOperationRefType'\n          }]\n      }, {\n        ln: 'AbstractGeneralOperationParameterRefType',\n        ps: [{\n            n: 'generalOperationParameter',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_GeneralOperationParameter',\n            ti: '.AbstractGeneralOperationParameterType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiSolidCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'GeographicCRSRefType',\n        ps: [{\n            n: 'geographicCRS',\n            rq: true,\n            en: 'GeographicCRS',\n            ti: '.GeographicCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'SymbolType',\n        ps: [{\n            n: 'any',\n            mno: 0,\n            col: true,\n            typed: false,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'symbolType',\n            rq: true,\n            an: {\n              lp: 'symbolType'\n            },\n            t: 'a'\n          }, {\n            n: 'transform',\n            an: {\n              lp: 'transform',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DirectedTopoSolidPropertyType',\n        ps: [{\n            n: 'topoSolid',\n            rq: true,\n            en: 'TopoSolid',\n            ti: '.TopoSolidType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'QuantityPropertyType',\n        bti: '.ValuePropertyType'\n      }, {\n        ln: 'SurfacePropertyType',\n        ps: [{\n            n: 'surface',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Surface',\n            ti: '.AbstractSurfaceType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TemporalCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesTemporalCS',\n            rq: true,\n            ti: '.TemporalCSRefType'\n          }, {\n            n: 'usesTemporalDatum',\n            rq: true,\n            ti: '.TemporalDatumRefType'\n          }]\n      }, {\n        ln: 'FeatureStyleType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'featureConstraint'\n          }, {\n            n: 'geometryStyle',\n            mno: 0,\n            col: true,\n            ti: '.GeometryStylePropertyType'\n          }, {\n            n: 'topologyStyle',\n            mno: 0,\n            col: true,\n            ti: '.TopologyStylePropertyType'\n          }, {\n            n: 'labelStyle',\n            ti: '.LabelStylePropertyType'\n          }, {\n            n: 'featureType',\n            an: {\n              lp: 'featureType'\n            },\n            t: 'a'\n          }, {\n            n: 'baseType',\n            an: {\n              lp: 'baseType'\n            },\n            t: 'a'\n          }, {\n            n: 'queryGrammar',\n            an: {\n              lp: 'queryGrammar'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractSurfaceType',\n        bti: '.AbstractGeometricPrimitiveType'\n      }, {\n        ln: 'AbstractDiscreteCoverageType',\n        bti: '.AbstractCoverageType',\n        ps: [{\n            n: 'coverageFunction',\n            ti: '.CoverageFunctionType'\n          }]\n      }, {\n        ln: 'MeasureOrNullListType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l'\n            },\n            t: 'v'\n          }, {\n            n: 'uom',\n            rq: true,\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopologyStyleType',\n        bti: '.BaseStyleDescriptorType',\n        ps: [{\n            n: 'symbol',\n            rq: true,\n            ti: '.SymbolType'\n          }, {\n            n: 'style',\n            rq: true\n          }, {\n            n: 'labelStyle',\n            ti: '.LabelStylePropertyType'\n          }, {\n            n: 'topologyProperty',\n            an: {\n              lp: 'topologyProperty'\n            },\n            t: 'a'\n          }, {\n            n: 'topologyType',\n            an: {\n              lp: 'topologyType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'DictionaryEntryType',\n        ps: [{\n            n: 'definition',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: 'Definition',\n            ti: '.DefinitionType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CompositeSurfacePropertyType',\n        ps: [{\n            n: 'compositeSurface',\n            rq: true,\n            en: 'CompositeSurface',\n            ti: '.CompositeSurfaceType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiLineStringPropertyType',\n        ps: [{\n            n: 'multiLineString',\n            rq: true,\n            en: 'MultiLineString',\n            ti: '.MultiLineStringType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MeasureType',\n        ps: [{\n            n: 'value',\n            ti: 'Double',\n            t: 'v'\n          }, {\n            n: 'uom',\n            rq: true,\n            an: {\n              lp: 'uom'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopologyStylePropertyType',\n        ps: [{\n            n: 'topologyStyle',\n            en: 'TopologyStyle',\n            ti: '.TopologyStyleType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'OffsetCurveType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'offsetBase',\n            rq: true,\n            ti: '.CurvePropertyType'\n          }, {\n            n: 'distance',\n            rq: true,\n            ti: '.LengthType'\n          }, {\n            n: 'refDirection',\n            ti: '.VectorType'\n          }]\n      }, {\n        ln: 'StringOrRefType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'VerticalCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesVerticalCS',\n            rq: true,\n            ti: '.VerticalCSRefType'\n          }, {\n            n: 'usesVerticalDatum',\n            rq: true,\n            ti: '.VerticalDatumRefType'\n          }]\n      }, {\n        ln: 'AngleType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'BoundingShapeType',\n        ps: [{\n            n: 'envelope',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: 'Envelope',\n            ti: '.EnvelopeType',\n            t: 'er'\n          }, {\n            n: '_null',\n            rq: true,\n            en: 'Null',\n            ti: {\n              t: 'l'\n            }\n          }]\n      }, {\n        ln: 'TemporalCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'GridLimitsType',\n        ps: [{\n            n: 'gridEnvelope',\n            rq: true,\n            en: 'GridEnvelope',\n            ti: '.GridEnvelopeType'\n          }]\n      }, {\n        ln: 'LinearCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'AbstractGeneralParameterValueType'\n      }, {\n        ln: 'DirectedNodePropertyType',\n        ps: [{\n            n: 'node',\n            rq: true,\n            en: 'Node',\n            ti: '.NodeType'\n          }, {\n            n: 'orientation',\n            an: {\n              lp: 'orientation'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'SurfaceArrayPropertyType',\n        ps: [{\n            n: 'surface',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_Surface',\n            ti: '.AbstractSurfaceType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'SecondDefiningParameterType',\n        ps: [{\n            n: 'inverseFlattening',\n            rq: true,\n            ti: '.MeasureType'\n          }, {\n            n: 'semiMinorAxis',\n            rq: true,\n            ti: '.MeasureType'\n          }, {\n            n: 'isSphere',\n            rq: true\n          }]\n      }, {\n        ln: 'AbstractGeometryType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'gid',\n            an: {\n              lp: 'gid'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }, {\n            n: 'srsDimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'srsDimension'\n            },\n            t: 'a'\n          }, {\n            n: 'axisLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'axisLabels'\n            },\n            t: 'a'\n          }, {\n            n: 'uomLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'uomLabels'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PassThroughOperationType',\n        bti: '.AbstractCoordinateOperationType',\n        ps: [{\n            n: 'modifiedCoordinate',\n            rq: true,\n            col: true,\n            ti: 'PositiveInteger'\n          }, {\n            n: 'usesOperation',\n            rq: true,\n            ti: '.OperationRefType'\n          }]\n      }, {\n        ln: 'AbstractCoordinateOperationBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'ArcStringByBulgeType',\n        bti: '.AbstractCurveSegmentType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 2,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'bulge',\n            rq: true,\n            col: true,\n            ti: 'Double'\n          }, {\n            n: 'normal',\n            rq: true,\n            col: true,\n            ti: '.VectorType'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }, {\n            n: 'numArc',\n            ti: 'Integer',\n            an: {\n              lp: 'numArc'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MovingObjectStatusType',\n        bti: '.AbstractTimeSliceType',\n        ps: [{\n            n: 'location',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.LocationPropertyType',\n            t: 'er'\n          }, {\n            n: 'speed',\n            ti: '.MeasureType'\n          }, {\n            n: 'bearing',\n            ti: '.DirectionPropertyType'\n          }, {\n            n: 'acceleration',\n            ti: '.MeasureType'\n          }, {\n            n: 'elevation',\n            ti: '.MeasureType'\n          }, {\n            n: 'status',\n            ti: '.StringOrRefType'\n          }]\n      }, {\n        ln: 'FeatureArrayPropertyType',\n        ps: [{\n            n: 'feature',\n            mno: 0,\n            col: true,\n            mx: false,\n            en: '_Feature',\n            ti: '.AbstractFeatureType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'CoordinateSystemAxisRefType',\n        ps: [{\n            n: 'coordinateSystemAxis',\n            rq: true,\n            en: 'CoordinateSystemAxis',\n            ti: '.CoordinateSystemAxisType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'FeatureCollectionType',\n        bti: '.AbstractFeatureCollectionType'\n      }, {\n        ln: 'TimeEdgeType',\n        bti: '.AbstractTimeTopologyPrimitiveType',\n        ps: [{\n            n: 'start',\n            rq: true,\n            ti: '.TimeNodePropertyType'\n          }, {\n            n: 'end',\n            rq: true,\n            ti: '.TimeNodePropertyType'\n          }, {\n            n: 'extent',\n            ti: '.TimePeriodPropertyType'\n          }]\n      }, {\n        ln: 'OperationRefType',\n        ps: [{\n            n: 'operation',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Operation',\n            ti: '.AbstractCoordinateOperationType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'RelativeInternalPositionalAccuracyType',\n        bti: '.AbstractPositionalAccuracyType',\n        ps: [{\n            n: 'result',\n            rq: true,\n            ti: '.MeasureType'\n          }]\n      }, {\n        ln: 'DirectedObservationType',\n        bti: '.ObservationType',\n        ps: [{\n            n: 'direction',\n            rq: true,\n            ti: '.DirectionPropertyType'\n          }]\n      }, {\n        ln: 'CompositeValueType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'valueComponent',\n            mno: 0,\n            col: true,\n            ti: '.ValuePropertyType'\n          }, {\n            n: 'valueComponents',\n            ti: '.ValueArrayPropertyType'\n          }]\n      }, {\n        ln: 'TriangleType',\n        bti: '.AbstractSurfacePatchType',\n        ps: [{\n            n: 'exterior',\n            rq: true,\n            mx: false,\n            dom: false,\n            ti: '.AbstractRingPropertyType',\n            t: 'er'\n          }, {\n            n: 'interpolation',\n            an: {\n              lp: 'interpolation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'RangeSetType',\n        ps: [{\n            n: 'valueArray',\n            rq: true,\n            col: true,\n            en: 'ValueArray',\n            ti: '.ValueArrayType'\n          }, {\n            n: 'scalarValueList',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'CategoryList',\n                ti: '.CodeOrNullListType'\n              }, {\n                en: 'CountList',\n                ti: {\n                  t: 'l'\n                }\n              }, {\n                en: 'QuantityList',\n                ti: '.MeasureOrNullListType'\n              }, {\n                en: 'BooleanList',\n                ti: {\n                  t: 'l'\n                }\n              }],\n            t: 'ers'\n          }, {\n            n: 'dataBlock',\n            rq: true,\n            en: 'DataBlock',\n            ti: '.DataBlockType'\n          }, {\n            n: 'file',\n            rq: true,\n            en: 'File',\n            ti: '.FileType'\n          }]\n      }, {\n        ln: 'PriorityLocationPropertyType',\n        bti: '.LocationPropertyType',\n        ps: [{\n            n: 'priority',\n            an: {\n              lp: 'priority'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TriangulatedSurfaceType',\n        bti: '.SurfaceType'\n      }, {\n        ln: 'VerticalCSRefType',\n        ps: [{\n            n: 'verticalCS',\n            rq: true,\n            en: 'VerticalCS',\n            ti: '.VerticalCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiSurfacePropertyType',\n        ps: [{\n            n: 'multiSurface',\n            rq: true,\n            en: 'MultiSurface',\n            ti: '.MultiSurfaceType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ReferenceSystemRefType',\n        ps: [{\n            n: 'referenceSystem',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_ReferenceSystem',\n            ti: '.AbstractReferenceSystemType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeCalendarPropertyType',\n        ps: [{\n            n: 'timeCalendar',\n            rq: true,\n            en: 'TimeCalendar',\n            ti: '.TimeCalendarType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CodeOrNullListType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l'\n            },\n            t: 'v'\n          }, {\n            n: 'codeSpace',\n            an: {\n              lp: 'codeSpace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractPositionalAccuracyType',\n        ps: [{\n            n: 'measureDescription',\n            ti: '.CodeType'\n          }]\n      }, {\n        ln: 'GeocentricCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'usesCartesianCS',\n            rq: true,\n            ti: '.CartesianCSRefType'\n          }, {\n            n: 'usesSphericalCS',\n            rq: true,\n            ti: '.SphericalCSRefType'\n          }, {\n            n: 'usesGeodeticDatum',\n            rq: true,\n            ti: '.GeodeticDatumRefType'\n          }]\n      }, {\n        ln: 'VectorType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            },\n            t: 'v'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }, {\n            n: 'srsDimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'srsDimension'\n            },\n            t: 'a'\n          }, {\n            n: 'axisLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'axisLabels'\n            },\n            t: 'a'\n          }, {\n            n: 'uomLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'uomLabels'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LinearRingType',\n        bti: '.AbstractRingType',\n        ps: [{\n            n: 'posOrPointPropertyOrPointRep',\n            rq: true,\n            mno: 4,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'pointRep',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pointProperty',\n                ti: '.PointPropertyType'\n              }, {\n                en: 'pos',\n                ti: '.DirectPositionType'\n              }],\n            t: 'ers'\n          }, {\n            n: 'posList',\n            rq: true,\n            ti: '.DirectPositionListType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'coord',\n            rq: true,\n            mno: 4,\n            col: true,\n            ti: '.CoordType'\n          }]\n      }, {\n        ln: 'GeometricComplexType',\n        bti: '.AbstractGeometryType',\n        ps: [{\n            n: 'element',\n            rq: true,\n            col: true,\n            ti: '.GeometricPrimitivePropertyType'\n          }]\n      }, {\n        ln: 'SequenceRuleType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'order',\n            an: {\n              lp: 'order'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'CompositeCurveType',\n        bti: '.AbstractCurveType',\n        ps: [{\n            n: 'curveMember',\n            rq: true,\n            col: true,\n            ti: '.CurvePropertyType'\n          }]\n      }, {\n        ln: 'ConeType',\n        bti: '.AbstractGriddedSurfaceType',\n        ps: [{\n            n: 'horizontalCURVETYPE',\n            an: {\n              lp: 'horizontalCurveType'\n            },\n            t: 'a'\n          }, {\n            n: 'verticalCURVETYPE',\n            an: {\n              lp: 'verticalCurveType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'PixelInCellType',\n        bti: '.CodeType'\n      }, {\n        ln: 'VerticalDatumType',\n        bti: '.AbstractDatumType',\n        ps: [{\n            n: 'verticalDatumType',\n            ti: '.VerticalDatumTypeType'\n          }]\n      }, {\n        ln: 'TrackType',\n        bti: '.HistoryPropertyType'\n      }, {\n        ln: 'ContainerPropertyType',\n        ps: [{\n            n: 'face',\n            rq: true,\n            en: 'Face',\n            ti: '.FaceType'\n          }, {\n            n: 'topoSolid',\n            rq: true,\n            en: 'TopoSolid',\n            ti: '.TopoSolidType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ImageDatumRefType',\n        ps: [{\n            n: 'imageDatum',\n            rq: true,\n            en: 'ImageDatum',\n            ti: '.ImageDatumType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'PointType',\n        bti: '.AbstractGeometricPrimitiveType',\n        ps: [{\n            n: 'pos',\n            rq: true,\n            ti: '.DirectPositionType'\n          }, {\n            n: 'coordinates',\n            rq: true,\n            ti: '.CoordinatesType'\n          }, {\n            n: 'coord',\n            rq: true,\n            ti: '.CoordType'\n          }]\n      }, {\n        ln: 'AbstractGMLType',\n        ps: [{\n            n: 'metaDataProperty',\n            mno: 0,\n            col: true,\n            ti: '.MetaDataPropertyType'\n          }, {\n            n: 'description',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'name',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            ti: '.CodeType',\n            t: 'er'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'EllipsoidBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'BezierType',\n        bti: '.BSplineType'\n      }, {\n        ln: 'CoordinateReferenceSystemRefType',\n        ps: [{\n            n: 'coordinateReferenceSystem',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_CoordinateReferenceSystem',\n            ti: '.AbstractReferenceSystemType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'GeometryPropertyType',\n        ps: [{\n            n: 'geometry',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Geometry',\n            ti: '.AbstractGeometryType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AngleChoiceType',\n        ps: [{\n            n: 'angle',\n            rq: true,\n            ti: '.MeasureType'\n          }, {\n            n: 'dmsAngle',\n            rq: true,\n            ti: '.DMSAngleType'\n          }]\n      }, {\n        ln: 'GraphStylePropertyType',\n        ps: [{\n            n: 'graphStyle',\n            en: 'GraphStyle',\n            ti: '.GraphStyleType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopoSurfacePropertyType',\n        ps: [{\n            n: 'topoSurface',\n            rq: true,\n            en: 'TopoSurface',\n            ti: '.TopoSurfaceType'\n          }]\n      }, {\n        ln: 'TimeOrdinalEraType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'relatedTime',\n            mno: 0,\n            col: true,\n            ti: '.RelatedTimeType'\n          }, {\n            n: 'start',\n            rq: true,\n            ti: '.TimeNodePropertyType'\n          }, {\n            n: 'end',\n            rq: true,\n            ti: '.TimeNodePropertyType'\n          }, {\n            n: 'extent',\n            ti: '.TimePeriodPropertyType'\n          }, {\n            n: 'member',\n            mno: 0,\n            col: true,\n            ti: '.TimeOrdinalEraPropertyType'\n          }, {\n            n: 'group',\n            ti: '.ReferenceType'\n          }]\n      }, {\n        ln: 'DirectPositionType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            },\n            t: 'v'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }, {\n            n: 'srsDimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'srsDimension'\n            },\n            t: 'a'\n          }, {\n            n: 'axisLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'axisLabels'\n            },\n            t: 'a'\n          }, {\n            n: 'uomLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'uomLabels'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'CompoundCRSType',\n        bti: '.AbstractReferenceSystemType',\n        ps: [{\n            n: 'includesCRS',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.CoordinateReferenceSystemRefType'\n          }]\n      }, {\n        ln: 'AbstractCoordinateSystemBaseType',\n        bti: '.DefinitionType'\n      }, {\n        ln: 'CategoryExtentType',\n        bti: '.CodeOrNullListType'\n      }, {\n        ln: 'RectifiedGridCoverageType',\n        bti: '.AbstractDiscreteCoverageType'\n      }, {\n        ln: 'CoordinateSystemRefType',\n        ps: [{\n            n: 'coordinateSystem',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_CoordinateSystem',\n            ti: '.AbstractCoordinateSystemType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractFeatureType',\n        bti: '.AbstractGMLType',\n        ps: [{\n            n: 'boundedBy',\n            ti: '.BoundingShapeType'\n          }, {\n            n: 'location',\n            mx: false,\n            dom: false,\n            ti: '.LocationPropertyType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'TemporalDatumType',\n        bti: '.TemporalDatumBaseType',\n        ps: [{\n            n: 'origin',\n            rq: true,\n            ti: 'DateTime'\n          }]\n      }, {\n        ln: 'AbstractTimeObjectType',\n        bti: '.AbstractGMLType'\n      }, {\n        ln: 'TimeTopologyComplexPropertyType',\n        ps: [{\n            n: 'timeTopologyComplex',\n            rq: true,\n            en: 'TimeTopologyComplex',\n            ti: '.TimeTopologyComplexType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DirectPositionListType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            },\n            t: 'v'\n          }, {\n            n: 'count',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'count'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }, {\n            n: 'srsDimension',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'srsDimension'\n            },\n            t: 'a'\n          }, {\n            n: 'axisLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'axisLabels'\n            },\n            t: 'a'\n          }, {\n            n: 'uomLabels',\n            ti: {\n              t: 'l',\n              bti: 'NCName'\n            },\n            an: {\n              lp: 'uomLabels'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeCalendarEraPropertyType',\n        ps: [{\n            n: 'timeCalendarEra',\n            rq: true,\n            en: 'TimeCalendarEra',\n            ti: '.TimeCalendarEraType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ObliqueCartesianCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'ImageDatumType',\n        bti: '.AbstractDatumType',\n        ps: [{\n            n: 'pixelInCell',\n            rq: true,\n            ti: '.PixelInCellType'\n          }]\n      }, {\n        ln: 'QuantityExtentType',\n        bti: '.MeasureOrNullListType'\n      }, {\n        ln: 'CodeListType',\n        ps: [{\n            n: 'value',\n            ti: {\n              t: 'l',\n              bti: 'Name'\n            },\n            t: 'v'\n          }, {\n            n: 'codeSpace',\n            an: {\n              lp: 'codeSpace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractContinuousCoverageType',\n        bti: '.AbstractCoverageType',\n        ps: [{\n            n: 'coverageFunction',\n            ti: '.CoverageFunctionType'\n          }]\n      }, {\n        ln: 'LengthType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'OperationParameterGroupType',\n        bti: '.OperationParameterGroupBaseType',\n        ps: [{\n            n: 'groupID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'maximumOccurs',\n            ti: 'PositiveInteger'\n          }, {\n            n: 'includesParameter',\n            rq: true,\n            mno: 2,\n            col: true,\n            ti: '.AbstractGeneralOperationParameterRefType'\n          }]\n      }, {\n        ln: 'AbstractCoordinateOperationType',\n        bti: '.AbstractCoordinateOperationBaseType',\n        ps: [{\n            n: 'coordinateOperationID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'operationVersion'\n          }, {\n            n: 'validArea',\n            ti: '.ExtentType'\n          }, {\n            n: 'scope'\n          }, {\n            n: 'positionalAccuracy',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: '_positionalAccuracy',\n            ti: '.AbstractPositionalAccuracyType',\n            t: 'er'\n          }, {\n            n: 'sourceCRS',\n            ti: '.CRSRefType'\n          }, {\n            n: 'targetCRS',\n            ti: '.CRSRefType'\n          }]\n      }, {\n        ln: 'LinearCSRefType',\n        ps: [{\n            n: 'linearCS',\n            rq: true,\n            en: 'LinearCS',\n            ti: '.LinearCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'VerticalDatumRefType',\n        ps: [{\n            n: 'verticalDatum',\n            rq: true,\n            en: 'VerticalDatum',\n            ti: '.VerticalDatumType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DerivedCRSRefType',\n        ps: [{\n            n: 'derivedCRS',\n            rq: true,\n            en: 'DerivedCRS',\n            ti: '.DerivedCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'MultiSolidType',\n        bti: '.AbstractGeometricAggregateType',\n        ps: [{\n            n: 'solidMember',\n            mno: 0,\n            col: true,\n            ti: '.SolidPropertyType'\n          }, {\n            n: 'solidMembers',\n            ti: '.SolidArrayPropertyType'\n          }]\n      }, {\n        ln: 'TimeInstantType',\n        bti: '.AbstractTimeGeometricPrimitiveType',\n        ps: [{\n            n: 'timePosition',\n            rq: true,\n            ti: '.TimePositionType'\n          }]\n      }, {\n        ln: 'ObliqueCartesianCSRefType',\n        ps: [{\n            n: 'obliqueCartesianCS',\n            rq: true,\n            en: 'ObliqueCartesianCS',\n            ti: '.ObliqueCartesianCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractRingType',\n        bti: '.AbstractGeometryType'\n      }, {\n        ln: 'SphericalCSType',\n        bti: '.AbstractCoordinateSystemType'\n      }, {\n        ln: 'RectifiedGridDomainType',\n        bti: '.DomainSetType'\n      }, {\n        ln: 'MultiSolidPropertyType',\n        ps: [{\n            n: 'multiSolid',\n            rq: true,\n            en: 'MultiSolid',\n            ti: '.MultiSolidType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DefinitionType',\n        bti: '.AbstractGMLType'\n      }, {\n        ln: 'FaceType',\n        bti: '.AbstractTopoPrimitiveType',\n        ps: [{\n            n: 'directedEdge',\n            rq: true,\n            col: true,\n            ti: '.DirectedEdgePropertyType'\n          }, {\n            n: 'directedTopoSolid',\n            mno: 0,\n            mxo: 2,\n            col: true,\n            ti: '.DirectedTopoSolidPropertyType'\n          }, {\n            n: 'surfaceProperty',\n            ti: '.SurfacePropertyType'\n          }]\n      }, {\n        ln: 'CylindricalCSRefType',\n        ps: [{\n            n: 'cylindricalCS',\n            rq: true,\n            en: 'CylindricalCS',\n            ti: '.CylindricalCSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractReferenceSystemType',\n        bti: '.AbstractReferenceSystemBaseType',\n        ps: [{\n            n: 'srsID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'validArea',\n            ti: '.ExtentType'\n          }, {\n            n: 'scope'\n          }]\n      }, {\n        ln: 'SingleOperationRefType',\n        ps: [{\n            n: 'singleOperation',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_SingleOperation',\n            ti: '.AbstractCoordinateOperationType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TimeTopologyPrimitivePropertyType',\n        ps: [{\n            n: 'timeTopologyPrimitive',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_TimeTopologyPrimitive',\n            ti: '.AbstractTimeTopologyPrimitiveType',\n            t: 'er'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'EngineeringCRSRefType',\n        ps: [{\n            n: 'engineeringCRS',\n            rq: true,\n            en: 'EngineeringCRS',\n            ti: '.EngineeringCRSType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ScaleType',\n        bti: '.MeasureType'\n      }, {\n        ln: 'TimeCalendarEraType',\n        bti: '.DefinitionType',\n        ps: [{\n            n: 'referenceEvent',\n            rq: true,\n            ti: '.StringOrRefType'\n          }, {\n            n: 'referenceDate',\n            ti: 'Date'\n          }, {\n            n: 'julianReference',\n            rq: true,\n            ti: 'Decimal'\n          }, {\n            n: 'epochOfUse',\n            rq: true,\n            ti: '.TimePeriodPropertyType'\n          }]\n      }, {\n        ln: 'CoordinateSystemAxisType',\n        bti: '.CoordinateSystemAxisBaseType',\n        ps: [{\n            n: 'axisID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'axisAbbrev',\n            rq: true,\n            ti: '.CodeType'\n          }, {\n            n: 'axisDirection',\n            rq: true,\n            ti: '.CodeType'\n          }, {\n            n: 'uom',\n            rq: true,\n            an: {\n              lp: 'uom',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'EllipsoidType',\n        bti: '.EllipsoidBaseType',\n        ps: [{\n            n: 'ellipsoidID',\n            mno: 0,\n            col: true,\n            ti: '.IdentifierType'\n          }, {\n            n: 'remarks',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'semiMajorAxis',\n            rq: true,\n            ti: '.MeasureType'\n          }, {\n            n: 'secondDefiningParameter',\n            rq: true,\n            ti: '.SecondDefiningParameterType'\n          }]\n      }, {\n        ln: 'TopoComplexMemberType',\n        ps: [{\n            n: 'topoComplex',\n            en: 'TopoComplex',\n            ti: '.TopoComplexType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'CoverageFunctionType',\n        ps: [{\n            n: 'mappingRule',\n            rq: true,\n            en: 'MappingRule',\n            ti: '.StringOrRefType'\n          }, {\n            n: 'gridFunction',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: 'GridFunction',\n            ti: '.GridFunctionType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'TimeNodePropertyType',\n        ps: [{\n            n: 'timeNode',\n            rq: true,\n            en: 'TimeNode',\n            ti: '.TimeNodeType'\n          }, {\n            n: 'remoteSchema',\n            an: {\n              lp: 'remoteSchema',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'AbstractRingPropertyType',\n        ps: [{\n            n: 'ring',\n            rq: true,\n            mx: false,\n            dom: false,\n            en: '_Ring',\n            ti: '.AbstractRingType',\n            t: 'er'\n          }]\n      }, {\n        ln: 'LinearRingPropertyType',\n        ps: [{\n            n: 'linearRing',\n            rq: true,\n            en: 'LinearRing',\n            ti: '.LinearRingType'\n          }]\n      }, {\n        ln: 'DirectionVectorType',\n        ps: [{\n            n: 'vector',\n            rq: true,\n            ti: '.VectorType'\n          }, {\n            n: 'horizontalAngle',\n            rq: true,\n            ti: '.AngleType'\n          }, {\n            n: 'verticalAngle',\n            rq: true,\n            ti: '.AngleType'\n          }]\n      }, {\n        ln: 'TimeTopologyComplexType',\n        bti: '.AbstractTimeComplexType',\n        ps: [{\n            n: 'primitive',\n            rq: true,\n            col: true,\n            ti: '.TimeTopologyPrimitivePropertyType'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'SignType',\n        vs: ['-', '+']\n      }, {\n        t: 'enum',\n        ln: 'CompassPointEnumeration',\n        vs: ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW']\n      }, {\n        t: 'enum',\n        ln: 'AesheticCriteriaType',\n        vs: ['MIN_CROSSINGS', 'MIN_AREA', 'MIN_BENDS', 'MAX_BENDS', 'UNIFORM_BENDS', 'MIN_SLOPES', 'MIN_EDGE_LENGTH', 'MAX_EDGE_LENGTH', 'UNIFORM_EDGE_LENGTH', 'MAX_ANGULAR_RESOLUTION', 'MIN_ASPECT_RATIO', 'MAX_SYMMETRIES']\n      }, {\n        t: 'enum',\n        ln: 'IncrementOrder',\n        vs: ['+x+y', '+y+x', '+x-y', '-x-y']\n      }, {\n        t: 'enum',\n        ln: 'KnotTypesType',\n        vs: ['uniform', 'quasiUniform', 'piecewiseBezier']\n      }, {\n        t: 'enum',\n        ln: 'TimeIndeterminateValueType',\n        vs: ['after', 'before', 'now', 'unknown']\n      }, {\n        t: 'enum',\n        ln: 'CurveInterpolationType',\n        vs: ['linear', 'geodesic', 'circularArc3Points', 'circularArc2PointWithBulge', 'circularArcCenterPointWithRadius', 'elliptical', 'clothoid', 'conic', 'polynomialSpline', 'cubicSpline', 'rationalSpline']\n      }, {\n        t: 'enum',\n        ln: 'GraphTypeType',\n        vs: ['TREE', 'BICONNECTED']\n      }, {\n        t: 'enum',\n        ln: 'SuccessionType',\n        vs: ['substitution', 'division', 'fusion', 'initiation']\n      }, {\n        t: 'enum',\n        ln: 'SurfaceInterpolationType',\n        vs: ['none', 'planar', 'spherical', 'elliptical', 'conic', 'tin', 'parametricCurve', 'polynomialSpline', 'rationalSpline', 'triangulatedSpline']\n      }, {\n        t: 'enum',\n        ln: 'QueryGrammarEnumeration',\n        vs: ['xpath', 'xquery', 'other']\n      }, {\n        t: 'enum',\n        ln: 'DrawingTypeType',\n        vs: ['POLYLINE', 'ORTHOGONAL']\n      }, {\n        t: 'enum',\n        ln: 'SequenceRuleNames',\n        vs: ['Linear', 'Boustrophedonic', 'Cantor-diagonal', 'Spiral', 'Morton', 'Hilbert']\n      }, {\n        t: 'enum',\n        ln: 'SymbolTypeEnumeration',\n        vs: ['svg', 'xpath', 'other']\n      }, {\n        t: 'enum',\n        ln: 'LineTypeType',\n        vs: ['STRAIGHT', 'BENT']\n      }, {\n        t: 'enum',\n        ln: 'FileValueModelType',\n        vs: ['Record Interleaved']\n      }],\n    eis: [{\n        en: 'topoPointProperty',\n        ti: '.TopoPointPropertyType'\n      }, {\n        en: 'CartesianCS',\n        ti: '.CartesianCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'solidMembers',\n        ti: '.SolidArrayPropertyType'\n      }, {\n        en: 'sourceCRS',\n        ti: '.CRSRefType'\n      }, {\n        en: 'version'\n      }, {\n        en: 'DerivedCRS',\n        ti: '.DerivedCRSType',\n        sh: '_GeneralDerivedCRS'\n      }, {\n        en: 'Face',\n        ti: '.FaceType',\n        sh: '_TopoPrimitive'\n      }, {\n        en: 'boundedBy',\n        ti: '.BoundingShapeType'\n      }, {\n        en: '_TopoPrimitive',\n        ti: '.AbstractTopoPrimitiveType',\n        sh: '_Topology'\n      }, {\n        en: 'usesEllipsoidalCS',\n        ti: '.EllipsoidalCSRefType'\n      }, {\n        en: 'usesTemporalDatum',\n        ti: '.TemporalDatumRefType'\n      }, {\n        en: 'srsID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'multiCurveProperty',\n        ti: '.MultiCurvePropertyType'\n      }, {\n        en: 'RectifiedGrid',\n        ti: '.RectifiedGridType',\n        sh: '_ImplicitGeometry'\n      }, {\n        en: 'degrees',\n        ti: '.DegreesType'\n      }, {\n        en: 'obliqueCartesianCSRef',\n        ti: '.ObliqueCartesianCSRefType'\n      }, {\n        en: 'usesEngineeringDatum',\n        ti: '.EngineeringDatumRefType'\n      }, {\n        en: 'domainSet',\n        ti: '.DomainSetType'\n      }, {\n        en: 'ConcatenatedOperation',\n        ti: '.ConcatenatedOperationType',\n        sh: '_CoordinateOperation'\n      }, {\n        en: 'operationMethodRef',\n        ti: '.OperationMethodRefType'\n      }, {\n        en: 'sourceDimensions',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'GraphStyle',\n        ti: '.GraphStyleType',\n        sh: '_GML'\n      }, {\n        en: 'TimePeriod',\n        ti: '.TimePeriodType',\n        sh: '_TimeGeometricPrimitive'\n      }, {\n        en: 'doubleOrNullTupleList',\n        ti: {\n          t: 'l'\n        }\n      }, {\n        en: 'surfaceMember',\n        ti: '.SurfacePropertyType'\n      }, {\n        en: 'Cone',\n        ti: '.ConeType',\n        sh: '_GriddedSurface'\n      }, {\n        en: 'polygonProperty',\n        ti: '.PolygonPropertyType'\n      }, {\n        en: 'pointMember',\n        ti: '.PointPropertyType'\n      }, {\n        en: 'integerValue',\n        ti: 'PositiveInteger'\n      }, {\n        en: '_Ring',\n        ti: '.AbstractRingType',\n        sh: '_Geometry'\n      }, {\n        en: 'CompositeValue',\n        ti: '.CompositeValueType'\n      }, {\n        en: 'temporalDatumRef',\n        ti: '.TemporalDatumRefType'\n      }, {\n        en: 'semiMinorAxis',\n        ti: '.MeasureType'\n      }, {\n        en: 'geometryMembers',\n        ti: '.GeometryArrayPropertyType'\n      }, {\n        en: 'coordinateSystemAxisRef',\n        ti: '.CoordinateSystemAxisRefType'\n      }, {\n        en: 'polarCSRef',\n        ti: '.PolarCSRefType'\n      }, {\n        en: '_ParametricCurveSurface',\n        ti: '.AbstractParametricCurveSurfaceType',\n        sh: '_SurfacePatch'\n      }, {\n        en: 'TimeCalendar',\n        ti: '.TimeCalendarType',\n        sh: '_TimeReferenceSystem'\n      }, {\n        en: 'Ring',\n        ti: '.RingType',\n        sh: '_Ring'\n      }, {\n        en: 'verticalDatumRef',\n        ti: '.VerticalDatumRefType'\n      }, {\n        en: 'temporalExtent',\n        ti: '.TimePeriodType'\n      }, {\n        en: 'relativeInternalPositionalAccuracy',\n        ti: '.RelativeInternalPositionalAccuracyType',\n        sh: '_positionalAccuracy'\n      }, {\n        en: 'Quantity',\n        ti: '.MeasureType'\n      }, {\n        en: 'Sphere',\n        ti: '.SphereType',\n        sh: '_GriddedSurface'\n      }, {\n        en: 'multiEdgeOf',\n        ti: '.MultiCurvePropertyType'\n      }, {\n        en: '_GeometricAggregate',\n        ti: '.AbstractGeometricAggregateType',\n        sh: '_Geometry'\n      }, {\n        en: 'symbol',\n        ti: '.SymbolType'\n      }, {\n        en: 'graphStyle',\n        ti: '.GraphStylePropertyType'\n      }, {\n        en: 'cylindricalCSRef',\n        ti: '.CylindricalCSRefType'\n      }, {\n        en: 'geographicCRSRef',\n        ti: '.GeographicCRSRefType'\n      }, {\n        en: 'parameterValueGroup',\n        ti: '.ParameterValueGroupType',\n        sh: '_generalParameterValue'\n      }, {\n        en: 'coordinateSystemRef',\n        ti: '.CoordinateSystemRefType'\n      }, {\n        en: '_strictAssociation',\n        ti: '.AssociationType'\n      }, {\n        en: 'DefinitionCollection',\n        ti: '.DictionaryType',\n        sh: 'Definition'\n      }, {\n        en: 'GeometricComplex',\n        ti: '.GeometricComplexType',\n        sh: '_Geometry'\n      }, {\n        en: 'FeatureCollection',\n        ti: '.FeatureCollectionType',\n        sh: '_Feature'\n      }, {\n        en: 'Clothoid',\n        ti: '.ClothoidType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'methodFormula',\n        ti: '.CodeType'\n      }, {\n        en: 'Edge',\n        ti: '.EdgeType',\n        sh: '_TopoPrimitive'\n      }, {\n        en: 'polygonPatches',\n        ti: '.PolygonPatchArrayPropertyType',\n        sh: 'patches'\n      }, {\n        en: 'meridianName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'CategoryList',\n        ti: '.CodeOrNullListType'\n      }, {\n        en: 'integerValueList',\n        ti: {\n          t: 'l',\n          bti: 'Integer'\n        }\n      }, {\n        en: 'usesParameter',\n        ti: '.AbstractGeneralOperationParameterRefType'\n      }, {\n        en: 'track',\n        ti: '.TrackType',\n        sh: 'history'\n      }, {\n        en: 'ImageCRS',\n        ti: '.ImageCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'temporalCRSRef',\n        ti: '.TemporalCRSRefType'\n      }, {\n        en: 'dmsAngle',\n        ti: '.DMSAngleType'\n      }, {\n        en: 'columnIndex',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'target',\n        ti: '.TargetPropertyType'\n      }, {\n        en: 'DerivedUnit',\n        ti: '.DerivedUnitType',\n        sh: 'UnitDefinition'\n      }, {\n        en: 'outerBoundaryIs',\n        ti: '.AbstractRingPropertyType',\n        sh: 'exterior'\n      }, {\n        en: 'ProjectedCRS',\n        ti: '.ProjectedCRSType',\n        sh: '_GeneralDerivedCRS'\n      }, {\n        en: 'duration',\n        ti: 'Duration'\n      }, {\n        en: 'indirectEntry',\n        ti: '.IndirectEntryType'\n      }, {\n        en: 'pointArrayProperty',\n        ti: '.PointArrayPropertyType'\n      }, {\n        en: 'GridCoverage',\n        ti: '.GridCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: 'solidMember',\n        ti: '.SolidPropertyType'\n      }, {\n        en: 'MultiPointCoverage',\n        ti: '.MultiPointCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: 'verticalCSRef',\n        ti: '.VerticalCSRefType'\n      }, {\n        en: 'featureProperty',\n        ti: '.FeaturePropertyType'\n      }, {\n        en: 'cartesianCSRef',\n        ti: '.CartesianCSRefType'\n      }, {\n        en: 'concatenatedOperationRef',\n        ti: '.ConcatenatedOperationRefType'\n      }, {\n        en: 'Polygon',\n        ti: '.PolygonType',\n        sh: '_Surface'\n      }, {\n        en: 'Style',\n        ti: '.StyleType',\n        sh: '_Style'\n      }, {\n        en: 'TopoSolid',\n        ti: '.TopoSolidType',\n        sh: '_TopoPrimitive'\n      }, {\n        en: 'engineeringCRSRef',\n        ti: '.EngineeringCRSRefType'\n      }, {\n        en: 'segments',\n        ti: '.CurveSegmentArrayPropertyType'\n      }, {\n        en: 'derivedCRSRef',\n        ti: '.DerivedCRSRefType'\n      }, {\n        en: 'BaseUnit',\n        ti: '.BaseUnitType',\n        sh: 'UnitDefinition'\n      }, {\n        en: 'DirectedObservationAtDistance',\n        ti: '.DirectedObservationAtDistanceType',\n        sh: 'DirectedObservation'\n      }, {\n        en: 'LineStringSegment',\n        ti: '.LineStringSegmentType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'coord',\n        ti: '.CoordType'\n      }, {\n        en: 'CoordinateSystemAxis',\n        ti: '.CoordinateSystemAxisType',\n        sh: 'Definition'\n      }, {\n        en: 'MultiSolidCoverage',\n        ti: '.MultiSolidCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: 'dataSource',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'subComplex',\n        ti: '.TopoComplexMemberType'\n      }, {\n        en: 'featureMember',\n        ti: '.FeaturePropertyType'\n      }, {\n        en: 'TopoVolume',\n        ti: '.TopoVolumeType'\n      }, {\n        en: 'rectifiedGridDomain',\n        ti: '.RectifiedGridDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'rowIndex',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'LabelStyle',\n        ti: '.LabelStyleType',\n        sh: '_GML'\n      }, {\n        en: 'TimeInstant',\n        ti: '.TimeInstantType',\n        sh: '_TimeGeometricPrimitive'\n      }, {\n        en: 'trianglePatches',\n        ti: '.TrianglePatchArrayPropertyType',\n        sh: 'patches'\n      }, {\n        en: '_SingleOperation',\n        ti: '.AbstractCoordinateOperationType',\n        sh: '_CoordinateOperation'\n      }, {\n        en: 'IndexMap',\n        ti: '.IndexMapType',\n        sh: 'GridFunction'\n      }, {\n        en: 'OperationMethod',\n        ti: '.OperationMethodType',\n        sh: 'Definition'\n      }, {\n        en: 'ellipsoidalCSRef',\n        ti: '.EllipsoidalCSRefType'\n      }, {\n        en: 'directedNode',\n        ti: '.DirectedNodePropertyType'\n      }, {\n        en: 'TopologyStyle',\n        ti: '.TopologyStyleType',\n        sh: '_GML'\n      }, {\n        en: 'generalConversionRef',\n        ti: '.GeneralConversionRefType'\n      }, {\n        en: 'crsRef',\n        ti: '.CRSRefType'\n      }, {\n        en: 'CountList',\n        ti: {\n          t: 'l'\n        }\n      }, {\n        en: 'dictionaryEntry',\n        ti: '.DictionaryEntryType'\n      }, {\n        en: 'description',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'GeocentricCRS',\n        ti: '.GeocentricCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'TemporalDatum',\n        ti: '.TemporalDatumType',\n        sh: '_Datum'\n      }, {\n        en: 'position',\n        ti: '.PointPropertyType'\n      }, {\n        en: '_GeometricPrimitive',\n        ti: '.AbstractGeometricPrimitiveType',\n        sh: '_Geometry'\n      }, {\n        en: 'OrientableCurve',\n        ti: '.OrientableCurveType',\n        sh: '_Curve'\n      }, {\n        en: 'ArcString',\n        ti: '.ArcStringType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'pixelInCell',\n        ti: '.PixelInCellType'\n      }, {\n        en: 'patches',\n        ti: '.SurfacePatchArrayPropertyType'\n      }, {\n        en: '_Solid',\n        ti: '.AbstractSolidType',\n        sh: '_GeometricPrimitive'\n      }, {\n        en: 'featureMembers',\n        ti: '.FeatureArrayPropertyType'\n      }, {\n        en: 'verticalDatumType',\n        ti: '.VerticalDatumTypeType'\n      }, {\n        en: '_SurfacePatch',\n        ti: '.AbstractSurfacePatchType'\n      }, {\n        en: 'directedFace',\n        ti: '.DirectedFacePropertyType'\n      }, {\n        en: 'File',\n        ti: '.FileType'\n      }, {\n        en: 'includesValue',\n        ti: '.AbstractGeneralParameterValueType',\n        sh: '_generalParameterValue'\n      }, {\n        en: 'temporalCSRef',\n        ti: '.TemporalCSRefType'\n      }, {\n        en: 'MultiPolygon',\n        ti: '.MultiPolygonType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'result',\n        ti: '.MeasureType'\n      }, {\n        en: 'Count',\n        ti: 'Integer'\n      }, {\n        en: 'RectifiedGridCoverage',\n        ti: '.RectifiedGridCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: '_Geometry',\n        ti: '.AbstractGeometryType',\n        sh: '_GML'\n      }, {\n        en: 'minimumOccurs',\n        ti: 'NonNegativeInteger'\n      }, {\n        en: 'stringValue'\n      }, {\n        en: 'multiPosition',\n        ti: '.MultiPointPropertyType'\n      }, {\n        en: 'datumID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'decimalMinutes',\n        ti: 'Decimal'\n      }, {\n        en: 'MultiSurface',\n        ti: '.MultiSurfaceType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'defaultStyle',\n        ti: '.DefaultStylePropertyType'\n      }, {\n        en: 'Definition',\n        ti: '.DefinitionType',\n        sh: '_GML'\n      }, {\n        en: 'engineeringDatumRef',\n        ti: '.EngineeringDatumRefType'\n      }, {\n        en: 'CountExtent',\n        ti: {\n          t: 'l'\n        }\n      }, {\n        en: 'operationRef',\n        ti: '.OperationRefType'\n      }, {\n        en: 'PolyhedralSurface',\n        ti: '.PolyhedralSurfaceType',\n        sh: 'Surface'\n      }, {\n        en: 'projectedCRSRef',\n        ti: '.ProjectedCRSRefType'\n      }, {\n        en: 'methodID',\n        ti: '.IdentifierType'\n      }, {\n        en: '_Datum',\n        ti: '.AbstractDatumType',\n        sh: 'Definition'\n      }, {\n        en: 'innerBoundaryIs',\n        ti: '.AbstractRingPropertyType',\n        sh: 'interior'\n      }, {\n        en: 'inverseFlattening',\n        ti: '.MeasureType'\n      }, {\n        en: 'operationParameterGroupRef',\n        ti: '.OperationParameterRefType'\n      }, {\n        en: 'isolated',\n        ti: '.IsolatedPropertyType'\n      }, {\n        en: 'FeatureStyle',\n        ti: '.FeatureStyleType',\n        sh: '_GML'\n      }, {\n        en: 'TemporalCS',\n        ti: '.TemporalCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'gridDomain',\n        ti: '.GridDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'derivedCRSType',\n        ti: '.DerivedCRSTypeType'\n      }, {\n        en: 'Node',\n        ti: '.NodeType',\n        sh: '_TopoPrimitive'\n      }, {\n        en: 'definitionMember',\n        ti: '.DictionaryEntryType',\n        sh: 'dictionaryEntry'\n      }, {\n        en: 'coordinateOperationName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'TopoComplex',\n        ti: '.TopoComplexType',\n        sh: '_Topology'\n      }, {\n        en: 'lineStringMember',\n        ti: '.LineStringPropertyType'\n      }, {\n        en: 'DefinitionProxy',\n        ti: '.DefinitionProxyType',\n        sh: 'Definition'\n      }, {\n        en: 'modifiedCoordinate',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'groupName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'EngineeringCRS',\n        ti: '.EngineeringCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'groupID',\n        ti: '.IdentifierType'\n      }, {\n        en: '_GeneralDerivedCRS',\n        ti: '.AbstractGeneralDerivedCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'CylindricalCS',\n        ti: '.CylindricalCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'directedEdge',\n        ti: '.DirectedEdgePropertyType'\n      }, {\n        en: 'multiCurveDomain',\n        ti: '.MultiCurveDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'topoPrimitiveMembers',\n        ti: '.TopoPrimitiveArrayAssociationType'\n      }, {\n        en: 'OperationParameterGroup',\n        ti: '.OperationParameterGroupType',\n        sh: '_GeneralOperationParameter'\n      }, {\n        en: 'GeographicCRS',\n        ti: '.GeographicCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'coordinates',\n        ti: '.CoordinatesType'\n      }, {\n        en: 'QuantityExtent',\n        ti: '.QuantityExtentType'\n      }, {\n        en: 'pointMembers',\n        ti: '.PointArrayPropertyType'\n      }, {\n        en: 'LineString',\n        ti: '.LineStringType',\n        sh: '_Curve'\n      }, {\n        en: 'LocationKeyWord',\n        ti: '.CodeType'\n      }, {\n        en: '_TimePrimitive',\n        ti: '.AbstractTimePrimitiveType',\n        sh: '_TimeObject'\n      }, {\n        en: 'MultiCurve',\n        ti: '.MultiCurveType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'featureStyle',\n        ti: '.FeatureStylePropertyType'\n      }, {\n        en: 'booleanValue',\n        ti: 'Boolean'\n      }, {\n        en: '_FeatureCollection',\n        ti: '.AbstractFeatureCollectionType',\n        sh: '_Feature'\n      }, {\n        en: 'Solid',\n        ti: '.SolidType',\n        sh: '_Solid'\n      }, {\n        en: 'Geodesic',\n        ti: '.GeodesicType',\n        sh: 'GeodesicString'\n      }, {\n        en: 'metaDataProperty',\n        ti: '.MetaDataPropertyType'\n      }, {\n        en: 'Bag',\n        ti: '.BagType',\n        sh: '_GML'\n      }, {\n        en: 'multiCoverage',\n        ti: '.MultiSurfacePropertyType'\n      }, {\n        en: 'usesValue',\n        ti: '.ParameterValueType'\n      }, {\n        en: 'tupleList',\n        ti: '.CoordinatesType'\n      }, {\n        en: 'PassThroughOperation',\n        ti: '.PassThroughOperationType',\n        sh: '_SingleOperation'\n      }, {\n        en: 'LabelExpression',\n        sc: '.LabelType'\n      }, {\n        en: 'multiPointProperty',\n        ti: '.MultiPointPropertyType'\n      }, {\n        en: 'parameterID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'superComplex',\n        ti: '.TopoComplexMemberType'\n      }, {\n        en: 'Surface',\n        ti: '.SurfaceType',\n        sh: '_Surface'\n      }, {\n        en: 'EngineeringDatum',\n        ti: '.EngineeringDatumType',\n        sh: '_Datum'\n      }, {\n        en: '_ContinuousCoverage',\n        ti: '.AbstractContinuousCoverageType',\n        sh: '_Coverage'\n      }, {\n        en: 'greenwichLongitude',\n        ti: '.AngleChoiceType'\n      }, {\n        en: 'sphericalCSRef',\n        ti: '.SphericalCSRefType'\n      }, {\n        en: 'OffsetCurve',\n        ti: '.OffsetCurveType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'EllipsoidalCS',\n        ti: '.EllipsoidalCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'VerticalDatum',\n        ti: '.VerticalDatumType',\n        sh: '_Datum'\n      }, {\n        en: 'baseCRS',\n        ti: '.CoordinateReferenceSystemRefType'\n      }, {\n        en: 'SphericalCS',\n        ti: '.SphericalCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'boundingBox',\n        ti: '.EnvelopeType'\n      }, {\n        en: 'definedByConversion',\n        ti: '.GeneralConversionRefType'\n      }, {\n        en: '_Surface',\n        ti: '.AbstractSurfaceType',\n        sh: '_GeometricPrimitive'\n      }, {\n        en: '_generalParameterValue',\n        ti: '.AbstractGeneralParameterValueType'\n      }, {\n        en: 'DirectionVector',\n        ti: '.DirectionVectorType'\n      }, {\n        en: '_association',\n        ti: '.AssociationType'\n      }, {\n        en: '_GML',\n        ti: '.AbstractGMLType',\n        sh: '_Object'\n      }, {\n        en: 'multiExtentOf',\n        ti: '.MultiSurfacePropertyType'\n      }, {\n        en: 'datumRef',\n        ti: '.DatumRefType'\n      }, {\n        en: 'passThroughOperationRef',\n        ti: '.PassThroughOperationRefType'\n      }, {\n        en: 'referenceSystemRef',\n        ti: '.ReferenceSystemRefType'\n      }, {\n        en: '_GeneralOperationParameter',\n        ti: '.AbstractGeneralOperationParameterType',\n        sh: 'Definition'\n      }, {\n        en: '_CurveSegment',\n        ti: '.AbstractCurveSegmentType'\n      }, {\n        en: 'geocentricCRSRef',\n        ti: '.GeocentricCRSRefType'\n      }, {\n        en: 'geometryMember',\n        ti: '.GeometryPropertyType'\n      }, {\n        en: 'surfaceMembers',\n        ti: '.SurfaceArrayPropertyType'\n      }, {\n        en: 'TimeOrdinalEra',\n        ti: '.TimeOrdinalEraType'\n      }, {\n        en: '_reference',\n        ti: '.ReferenceType'\n      }, {\n        en: 'ellipsoidName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: '_TimeComplex',\n        ti: '.AbstractTimeComplexType',\n        sh: '_TimeObject'\n      }, {\n        en: 'boundingPolygon',\n        ti: '.PolygonType'\n      }, {\n        en: 'subject',\n        ti: '.TargetPropertyType',\n        sh: 'target'\n      }, {\n        en: 'Rectangle',\n        ti: '.RectangleType',\n        sh: '_SurfacePatch'\n      }, {\n        en: 'Cylinder',\n        ti: '.CylinderType',\n        sh: '_GriddedSurface'\n      }, {\n        en: 'multiSurfaceProperty',\n        ti: '.MultiSurfacePropertyType'\n      }, {\n        en: '_Style',\n        ti: '.AbstractStyleType',\n        sh: '_GML'\n      }, {\n        en: 'generalTransformationRef',\n        ti: '.GeneralTransformationRefType'\n      }, {\n        en: 'CompositeSurface',\n        ti: '.CompositeSurfaceType',\n        sh: '_Surface'\n      }, {\n        en: 'validArea',\n        ti: '.ExtentType'\n      }, {\n        en: 'MultiGeometry',\n        ti: '.MultiGeometryType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'timeInterval',\n        ti: '.TimeIntervalLengthType'\n      }, {\n        en: 'maximalComplex',\n        ti: '.TopoComplexMemberType'\n      }, {\n        en: 'Point',\n        ti: '.PointType',\n        sh: '_GeometricPrimitive'\n      }, {\n        en: 'VerticalCS',\n        ti: '.VerticalCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'usesSingleOperation',\n        ti: '.SingleOperationRefType'\n      }, {\n        en: 'catalogSymbol',\n        ti: '.CodeType'\n      }, {\n        en: 'transformationRef',\n        ti: '.TransformationRefType'\n      }, {\n        en: 'Envelope',\n        ti: '.EnvelopeType'\n      }, {\n        en: 'CompoundCRS',\n        ti: '.CompoundCRSType',\n        sh: '_CRS'\n      }, {\n        en: 'value',\n        ti: '.MeasureType'\n      }, {\n        en: 'Boolean',\n        ti: 'Boolean'\n      }, {\n        en: 'primeMeridianRef',\n        ti: '.PrimeMeridianRefType'\n      }, {\n        en: 'includesElement',\n        ti: '.CovarianceElementType'\n      }, {\n        en: 'Ellipsoid',\n        ti: '.EllipsoidType',\n        sh: 'Definition'\n      }, {\n        en: 'topoSurfaceProperty',\n        ti: '.TopoSurfacePropertyType'\n      }, {\n        en: 'surfaceProperty',\n        ti: '.SurfacePropertyType'\n      }, {\n        en: 'pos',\n        ti: '.DirectPositionType'\n      }, {\n        en: 'PrimeMeridian',\n        ti: '.PrimeMeridianType',\n        sh: 'Definition'\n      }, {\n        en: '_Curve',\n        ti: '.AbstractCurveType',\n        sh: '_GeometricPrimitive'\n      }, {\n        en: 'definitionRef',\n        ti: '.ReferenceType'\n      }, {\n        en: 'axisAbbrev',\n        ti: '.CodeType'\n      }, {\n        en: 'LinearCS',\n        ti: '.LinearCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'TimeClock',\n        ti: '.TimeClockType',\n        sh: '_TimeReferenceSystem'\n      }, {\n        en: 'multiCenterLineOf',\n        ti: '.MultiCurvePropertyType'\n      }, {\n        en: 'UserDefinedCS',\n        ti: '.UserDefinedCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'TimeNode',\n        ti: '.TimeNodeType',\n        sh: '_TimeTopologyPrimitive'\n      }, {\n        en: '_TimeSlice',\n        ti: '.AbstractTimeSliceType',\n        sh: '_GML'\n      }, {\n        en: 'valueList',\n        ti: '.MeasureListType'\n      }, {\n        en: 'targetCRS',\n        ti: '.CRSRefType'\n      }, {\n        en: 'isSphere'\n      }, {\n        en: 'direction',\n        ti: '.DirectionPropertyType'\n      }, {\n        en: 'geometryStyle',\n        ti: '.GeometryStylePropertyType'\n      }, {\n        en: 'rangeParameters',\n        ti: '.RangeParametersType'\n      }, {\n        en: 'Bezier',\n        ti: '.BezierType',\n        sh: 'BSpline'\n      }, {\n        en: 'includesCRS',\n        ti: '.CoordinateReferenceSystemRefType'\n      }, {\n        en: 'linearCSRef',\n        ti: '.LinearCSRefType'\n      }, {\n        en: 'compoundCRSRef',\n        ti: '.CompoundCRSRefType'\n      }, {\n        en: 'CompositeSolid',\n        ti: '.CompositeSolidType',\n        sh: '_Solid'\n      }, {\n        en: 'usesTemporalCS',\n        ti: '.TemporalCSRefType'\n      }, {\n        en: 'csID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'usesSphericalCS',\n        ti: '.SphericalCSRefType'\n      }, {\n        en: 'geodeticDatumRef',\n        ti: '.GeodeticDatumRefType'\n      }, {\n        en: 'multiSolidDomain',\n        ti: '.MultiSolidDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'directedTopoSolid',\n        ti: '.DirectedTopoSolidPropertyType'\n      }, {\n        en: 'userDefinedCSRef',\n        ti: '.UserDefinedCSRefType'\n      }, {\n        en: 'measure',\n        ti: '.MeasureType'\n      }, {\n        en: 'origin',\n        ti: 'DateTime'\n      }, {\n        en: 'dmsAngleValue',\n        ti: '.DMSAngleType'\n      }, {\n        en: 'MultiSolid',\n        ti: '.MultiSolidType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'Array',\n        ti: '.ArrayType',\n        sh: '_GML'\n      }, {\n        en: 'parameterValue',\n        ti: '.ParameterValueType',\n        sh: '_generalParameterValue'\n      }, {\n        en: 'maximumOccurs',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'CircleByCenterPoint',\n        ti: '.CircleByCenterPointType',\n        sh: 'ArcByCenterPoint'\n      }, {\n        en: 'roughConversionToPreferredUnit',\n        ti: '.ConversionToPreferredUnitType'\n      }, {\n        en: 'remarks',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'Null',\n        ti: {\n          t: 'l'\n        }\n      }, {\n        en: 'Transformation',\n        ti: '.TransformationType',\n        sh: '_GeneralTransformation'\n      }, {\n        en: 'PolygonPatch',\n        ti: '.PolygonPatchType',\n        sh: '_SurfacePatch'\n      }, {\n        en: 'topologyStyle',\n        ti: '.TopologyStylePropertyType'\n      }, {\n        en: 'ImageDatum',\n        ti: '.ImageDatumType',\n        sh: '_Datum'\n      }, {\n        en: 'CategoryExtent',\n        ti: '.CategoryExtentType'\n      }, {\n        en: 'coordinateReferenceSystemRef',\n        ti: '.CoordinateReferenceSystemRefType'\n      }, {\n        en: 'multiLocation',\n        ti: '.MultiPointPropertyType'\n      }, {\n        en: 'TimeCoordinateSystem',\n        ti: '.TimeCoordinateSystemType',\n        sh: '_TimeReferenceSystem'\n      }, {\n        en: 'interior',\n        ti: '.AbstractRingPropertyType'\n      }, {\n        en: 'MovingObjectStatus',\n        ti: '.MovingObjectStatusType',\n        sh: '_TimeSlice'\n      }, {\n        en: 'secondDefiningParameter',\n        ti: '.SecondDefiningParameterType'\n      }, {\n        en: 'polygonMember',\n        ti: '.PolygonPropertyType'\n      }, {\n        en: 'PolarCS',\n        ti: '.PolarCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'usesEllipsoid',\n        ti: '.EllipsoidRefType'\n      }, {\n        en: '_Operation',\n        ti: '.AbstractCoordinateOperationType',\n        sh: '_SingleOperation'\n      }, {\n        en: 'multiPointDomain',\n        ti: '.MultiPointDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'timePosition',\n        ti: '.TimePositionType'\n      }, {\n        en: 'coordinateOperationRef',\n        ti: '.CoordinateOperationRefType'\n      }, {\n        en: 'usesCartesianCS',\n        ti: '.CartesianCSRefType'\n      }, {\n        en: 'absoluteExternalPositionalAccuracy',\n        ti: '.AbsoluteExternalPositionalAccuracyType',\n        sh: '_positionalAccuracy'\n      }, {\n        en: 'coverageFunction',\n        ti: '.CoverageFunctionType'\n      }, {\n        en: 'usesVerticalCS',\n        ti: '.VerticalCSRefType'\n      }, {\n        en: 'operationParameterRef',\n        ti: '.OperationParameterRefType'\n      }, {\n        en: 'meridianID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'ArcStringByBulge',\n        ti: '.ArcStringByBulgeType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'LocationString',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'MultiSurfaceCoverage',\n        ti: '.MultiSurfaceCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: 'Grid',\n        ti: '.GridType',\n        sh: '_ImplicitGeometry'\n      }, {\n        en: 'CompassPoint'\n      }, {\n        en: 'location',\n        ti: '.LocationPropertyType'\n      }, {\n        en: 'imageDatumRef',\n        ti: '.ImageDatumRefType'\n      }, {\n        en: 'labelStyle',\n        ti: '.LabelStylePropertyType'\n      }, {\n        en: 'targetDimensions',\n        ti: 'PositiveInteger'\n      }, {\n        en: 'OrientableSurface',\n        ti: '.OrientableSurfaceType',\n        sh: '_Surface'\n      }, {\n        en: 'CubicSpline',\n        ti: '.CubicSplineType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'baseSurface',\n        ti: '.SurfacePropertyType'\n      }, {\n        en: 'Category',\n        ti: '.CodeType'\n      }, {\n        en: 'MappingRule',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'DataBlock',\n        ti: '.DataBlockType'\n      }, {\n        en: 'verticalExtent',\n        ti: '.EnvelopeType'\n      }, {\n        en: 'BooleanList',\n        ti: {\n          t: 'l'\n        }\n      }, {\n        en: 'usesMethod',\n        ti: '.OperationMethodRefType'\n      }, {\n        en: '_TimeObject',\n        ti: '.AbstractTimeObjectType',\n        sh: '_GML'\n      }, {\n        en: 'methodName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'valueComponents',\n        ti: '.ValueArrayPropertyType'\n      }, {\n        en: 'members',\n        ti: '.ArrayAssociationType'\n      }, {\n        en: 'container',\n        ti: '.ContainerPropertyType'\n      }, {\n        en: 'lineStringProperty',\n        ti: '.LineStringPropertyType'\n      }, {\n        en: 'vector',\n        ti: '.VectorType'\n      }, {\n        en: 'singleOperationRef',\n        ti: '.SingleOperationRefType'\n      }, {\n        en: 'TimeTopologyComplex',\n        ti: '.TimeTopologyComplexType',\n        sh: '_TimeComplex'\n      }, {\n        en: 'curveArrayProperty',\n        ti: '.CurveArrayPropertyType'\n      }, {\n        en: 'axisID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'usesAxis',\n        ti: '.CoordinateSystemAxisRefType'\n      }, {\n        en: 'name',\n        ti: '.CodeType'\n      }, {\n        en: 'CompositeCurve',\n        ti: '.CompositeCurveType',\n        sh: '_Curve'\n      }, {\n        en: 'solidProperty',\n        ti: '.SolidPropertyType'\n      }, {\n        en: 'valueProperty',\n        ti: '.ValuePropertyType'\n      }, {\n        en: 'GeodesicString',\n        ti: '.GeodesicStringType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'usesVerticalDatum',\n        ti: '.VerticalDatumRefType'\n      }, {\n        en: '_GriddedSurface',\n        ti: '.AbstractGriddedSurfaceType',\n        sh: '_ParametricCurveSurface'\n      }, {\n        en: 'resultOf',\n        ti: '.AssociationType'\n      }, {\n        en: '_positionalAccuracy',\n        ti: '.AbstractPositionalAccuracyType'\n      }, {\n        en: '_Feature',\n        ti: '.AbstractFeatureType',\n        sh: '_GML'\n      }, {\n        en: 'ArcByCenterPoint',\n        ti: '.ArcByCenterPointType',\n        sh: '_CurveSegment'\n      }, {\n        en: '_CoordinateReferenceSystem',\n        ti: '.AbstractReferenceSystemType',\n        sh: '_CRS'\n      }, {\n        en: 'covariance',\n        ti: 'Double'\n      }, {\n        en: 'multiSurfaceDomain',\n        ti: '.MultiSurfaceDomainType',\n        sh: 'domainSet'\n      }, {\n        en: 'usesCS',\n        ti: '.CoordinateSystemRefType'\n      }, {\n        en: 'ArcByBulge',\n        ti: '.ArcByBulgeType',\n        sh: 'ArcStringByBulge'\n      }, {\n        en: 'angle',\n        ti: '.MeasureType'\n      }, {\n        en: 'covarianceMatrix',\n        ti: '.CovarianceMatrixType',\n        sh: '_positionalAccuracy'\n      }, {\n        en: '_Object',\n        ti: 'AnyType'\n      }, {\n        en: 'EnvelopeWithTimePeriod',\n        ti: '.EnvelopeWithTimePeriodType',\n        sh: 'Envelope'\n      }, {\n        en: 'ObliqueCartesianCS',\n        ti: '.ObliqueCartesianCSType',\n        sh: '_CoordinateSystem'\n      }, {\n        en: 'Observation',\n        ti: '.ObservationType',\n        sh: '_Feature'\n      }, {\n        en: 'status',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'centerLineOf',\n        ti: '.CurvePropertyType'\n      }, {\n        en: 'topoPrimitiveMember',\n        ti: '.TopoPrimitiveMemberType'\n      }, {\n        en: '_MetaData',\n        ti: '.AbstractMetaDataType',\n        sh: '_Object'\n      }, {\n        en: 'TimeOrdinalReferenceSystem',\n        ti: '.TimeOrdinalReferenceSystemType',\n        sh: '_TimeReferenceSystem'\n      }, {\n        en: 'srsName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'unitOfMeasure',\n        ti: '.UnitOfMeasureType'\n      }, {\n        en: 'VerticalCRS',\n        ti: '.VerticalCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: 'centerOf',\n        ti: '.PointPropertyType'\n      }, {\n        en: '_GeneralTransformation',\n        ti: '.AbstractGeneralTransformationType',\n        sh: '_Operation'\n      }, {\n        en: 'multiSolidProperty',\n        ti: '.MultiSolidPropertyType'\n      }, {\n        en: '_CoordinateSystem',\n        ti: '.AbstractCoordinateSystemType',\n        sh: 'Definition'\n      }, {\n        en: 'solidArrayProperty',\n        ti: '.SolidArrayPropertyType'\n      }, {\n        en: '_Topology',\n        ti: '.AbstractTopologyType',\n        sh: '_GML'\n      }, {\n        en: 'seconds',\n        ti: 'Decimal'\n      }, {\n        en: 'imageCRSRef',\n        ti: '.ImageCRSRefType'\n      }, {\n        en: 'Arc',\n        ti: '.ArcType',\n        sh: 'ArcString'\n      }, {\n        en: 'baseCurve',\n        ti: '.CurvePropertyType'\n      }, {\n        en: 'Triangle',\n        ti: '.TriangleType',\n        sh: '_SurfacePatch'\n      }, {\n        en: 'valueFile'\n      }, {\n        en: 'TopoSurface',\n        ti: '.TopoSurfaceType'\n      }, {\n        en: 'TopoCurve',\n        ti: '.TopoCurveType'\n      }, {\n        en: 'csName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'usesImageDatum',\n        ti: '.ImageDatumRefType'\n      }, {\n        en: 'derivationUnitTerm',\n        ti: '.DerivationUnitTermType'\n      }, {\n        en: 'usesObliqueCartesianCS',\n        ti: '.ObliqueCartesianCSRefType'\n      }, {\n        en: 'curveMembers',\n        ti: '.CurveArrayPropertyType'\n      }, {\n        en: 'curveProperty',\n        ti: '.CurvePropertyType'\n      }, {\n        en: 'QuantityList',\n        ti: '.MeasureOrNullListType'\n      }, {\n        en: 'Circle',\n        ti: '.CircleType',\n        sh: 'Arc'\n      }, {\n        en: 'anchorPoint',\n        ti: '.CodeType'\n      }, {\n        en: 'Curve',\n        ti: '.CurveType',\n        sh: '_Curve'\n      }, {\n        en: 'MultiCurveCoverage',\n        ti: '.MultiCurveCoverageType',\n        sh: '_DiscreteCoverage'\n      }, {\n        en: 'TimeEdge',\n        ti: '.TimeEdgeType',\n        sh: '_TimeTopologyPrimitive'\n      }, {\n        en: 'MultiPoint',\n        ti: '.MultiPointType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: 'GridFunction',\n        ti: '.GridFunctionType'\n      }, {\n        en: 'semiMajorAxis',\n        ti: '.MeasureType'\n      }, {\n        en: 'history',\n        ti: '.HistoryPropertyType'\n      }, {\n        en: 'valueComponent',\n        ti: '.ValuePropertyType'\n      }, {\n        en: 'topoCurveProperty',\n        ti: '.TopoCurvePropertyType'\n      }, {\n        en: 'DirectedObservation',\n        ti: '.DirectedObservationType',\n        sh: 'Observation'\n      }, {\n        en: 'OperationParameter',\n        ti: '.OperationParameterType',\n        sh: '_GeneralOperationParameter'\n      }, {\n        en: 'UnitDefinition',\n        ti: '.UnitDefinitionType',\n        sh: 'Definition'\n      }, {\n        en: 'pointRep',\n        ti: '.PointPropertyType'\n      }, {\n        en: '_TimeReferenceSystem',\n        ti: '.AbstractTimeReferenceSystemType',\n        sh: 'Definition'\n      }, {\n        en: 'quantityType',\n        ti: '.StringOrRefType'\n      }, {\n        en: 'valueOfParameter',\n        ti: '.OperationParameterRefType'\n      }, {\n        en: '_CoordinateOperation',\n        ti: '.AbstractCoordinateOperationType',\n        sh: 'Definition'\n      }, {\n        en: 'GeodeticDatum',\n        ti: '.GeodeticDatumType',\n        sh: '_Datum'\n      }, {\n        en: '_CRS',\n        ti: '.AbstractReferenceSystemType',\n        sh: '_ReferenceSystem'\n      }, {\n        en: 'usesOperation',\n        ti: '.OperationRefType'\n      }, {\n        en: 'minutes',\n        ti: 'NonNegativeInteger'\n      }, {\n        en: 'datumName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'LinearRing',\n        ti: '.LinearRingType',\n        sh: '_Ring'\n      }, {\n        en: 'abstractGeneralOperationParameterRef',\n        ti: '.AbstractGeneralOperationParameterRefType'\n      }, {\n        en: 'usesGeodeticDatum',\n        ti: '.GeodeticDatumRefType'\n      }, {\n        en: 'edgeOf',\n        ti: '.CurvePropertyType'\n      }, {\n        en: 'using',\n        ti: '.FeaturePropertyType'\n      }, {\n        en: 'GeometryStyle',\n        ti: '.GeometryStyleType',\n        sh: '_GML'\n      }, {\n        en: 'curveMember',\n        ti: '.CurvePropertyType'\n      }, {\n        en: 'conversionToPreferredUnit',\n        ti: '.ConversionToPreferredUnitType'\n      }, {\n        en: '_DiscreteCoverage',\n        ti: '.AbstractDiscreteCoverageType',\n        sh: '_Coverage'\n      }, {\n        en: 'posList',\n        ti: '.DirectPositionListType'\n      }, {\n        en: '_TimeGeometricPrimitive',\n        ti: '.AbstractTimeGeometricPrimitiveType',\n        sh: '_TimePrimitive'\n      }, {\n        en: 'conversionRef',\n        ti: '.ConversionRefType'\n      }, {\n        en: 'surfaceArrayProperty',\n        ti: '.SurfaceArrayPropertyType'\n      }, {\n        en: 'rangeSet',\n        ti: '.RangeSetType'\n      }, {\n        en: 'valuesOfGroup',\n        ti: '.OperationParameterGroupRefType'\n      }, {\n        en: 'axisDirection',\n        ti: '.CodeType'\n      }, {\n        en: 'coordinateOperationID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'TemporalCRS',\n        ti: '.TemporalCRSType',\n        sh: '_CoordinateReferenceSystem'\n      }, {\n        en: '_GeneralConversion',\n        ti: '.AbstractGeneralConversionType',\n        sh: '_Operation'\n      }, {\n        en: 'multiCenterOf',\n        ti: '.MultiPointPropertyType'\n      }, {\n        en: 'includesParameter',\n        ti: '.AbstractGeneralOperationParameterRefType'\n      }, {\n        en: 'BSpline',\n        ti: '.BSplineType',\n        sh: '_CurveSegment'\n      }, {\n        en: 'TimeCalendarEra',\n        ti: '.TimeCalendarEraType',\n        sh: 'Definition'\n      }, {\n        en: 'priorityLocation',\n        ti: '.PriorityLocationPropertyType',\n        sh: 'location'\n      }, {\n        en: 'usesPrimeMeridian',\n        ti: '.PrimeMeridianRefType'\n      }, {\n        en: 'TopoPoint',\n        ti: '.TopoPointType'\n      }, {\n        en: 'ValueArray',\n        ti: '.ValueArrayType',\n        sh: 'CompositeValue'\n      }, {\n        en: 'Dictionary',\n        ti: '.DictionaryType',\n        sh: 'Definition'\n      }, {\n        en: '_ImplicitGeometry',\n        ti: '.AbstractGeometryType',\n        sh: '_Geometry'\n      }, {\n        en: 'scope'\n      }, {\n        en: 'AffinePlacement',\n        ti: '.AffinePlacementType'\n      }, {\n        en: 'multiGeometryProperty',\n        ti: '.MultiGeometryPropertyType'\n      }, {\n        en: 'topoComplexProperty',\n        ti: '.TopoComplexMemberType'\n      }, {\n        en: 'GenericMetaData',\n        ti: '.GenericMetaDataType',\n        sh: '_MetaData'\n      }, {\n        en: 'validTime',\n        ti: '.TimePrimitivePropertyType'\n      }, {\n        en: '_ReferenceSystem',\n        ti: '.AbstractReferenceSystemType',\n        sh: 'Definition'\n      }, {\n        en: 'member',\n        ti: '.AssociationType'\n      }, {\n        en: 'ellipsoidID',\n        ti: '.IdentifierType'\n      }, {\n        en: 'ellipsoidRef',\n        ti: '.EllipsoidRefType'\n      }, {\n        en: 'MultiLineString',\n        ti: '.MultiLineStringType',\n        sh: '_GeometricAggregate'\n      }, {\n        en: '_TimeTopologyPrimitive',\n        ti: '.AbstractTimeTopologyPrimitiveType',\n        sh: '_TimePrimitive'\n      }, {\n        en: 'parameterName',\n        ti: '.CodeType',\n        sh: 'name'\n      }, {\n        en: 'measureDescription',\n        ti: '.CodeType'\n      }, {\n        en: 'ConventionalUnit',\n        ti: '.ConventionalUnitType',\n        sh: 'UnitDefinition'\n      }, {\n        en: 'extentOf',\n        ti: '.SurfacePropertyType'\n      }, {\n        en: '_Coverage',\n        ti: '.AbstractCoverageType',\n        sh: '_Feature'\n      }, {\n        en: 'TriangulatedSurface',\n        ti: '.TriangulatedSurfaceType',\n        sh: 'Surface'\n      }, {\n        en: 'Tin',\n        ti: '.TinType',\n        sh: 'TriangulatedSurface'\n      }, {\n        en: 'operationVersion'\n      }, {\n        en: 'pointProperty',\n        ti: '.PointPropertyType'\n      }, {\n        en: 'Conversion',\n        ti: '.ConversionType',\n        sh: '_GeneralConversion'\n      }, {\n        en: 'verticalCRSRef',\n        ti: '.VerticalCRSRefType'\n      }, {\n        en: 'topoVolumeProperty',\n        ti: '.TopoVolumePropertyType'\n      }, {\n        en: 'exterior',\n        ti: '.AbstractRingPropertyType'\n      }, {\n        en: 'realizationEpoch',\n        ti: 'Date'\n      }]\n  };\n  return {\n    GML_3_1_1: GML_3_1_1\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], GML_3_1_1_Module_Factory);\n}\nelse {\n  var GML_3_1_1_Module = GML_3_1_1_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.GML_3_1_1 = GML_3_1_1_Module.GML_3_1_1;\n  }\n  else {\n    var GML_3_1_1 = GML_3_1_1_Module.GML_3_1_1;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/GML_3_1_1.js\n// module id = 476\n// module chunks = 4","var OWS_1_0_0_Module_Factory = function () {\n  var OWS_1_0_0 = {\n    n: 'OWS_1_0_0',\n    dens: 'http:\\/\\/www.opengis.net\\/ows',\n    dans: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    deps: ['XLink_1_0'],\n    tis: [{\n        ln: 'CapabilitiesBaseType',\n        ps: [{\n            n: 'serviceIdentification',\n            en: 'ServiceIdentification',\n            ti: '.ServiceIdentification'\n          }, {\n            n: 'serviceProvider',\n            en: 'ServiceProvider',\n            ti: '.ServiceProvider'\n          }, {\n            n: 'operationsMetadata',\n            en: 'OperationsMetadata',\n            ti: '.OperationsMetadata'\n          }, {\n            n: 'version',\n            rq: true,\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }, {\n            n: 'updateSequence',\n            an: {\n              lp: 'updateSequence'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TelephoneType',\n        ps: [{\n            n: 'voice',\n            mno: 0,\n            col: true,\n            en: 'Voice'\n          }, {\n            n: 'facsimile',\n            mno: 0,\n            col: true,\n            en: 'Facsimile'\n          }]\n      }, {\n        ln: 'AcceptFormatsType',\n        ps: [{\n            n: 'outputFormat',\n            mno: 0,\n            col: true,\n            en: 'OutputFormat'\n          }]\n      }, {\n        ln: 'Operation',\n        tn: null,\n        ps: [{\n            n: 'dcp',\n            rq: true,\n            col: true,\n            en: 'DCP',\n            ti: '.DCP'\n          }, {\n            n: 'parameter',\n            mno: 0,\n            col: true,\n            en: 'Parameter',\n            ti: '.DomainType'\n          }, {\n            n: 'constraint',\n            mno: 0,\n            col: true,\n            en: 'Constraint',\n            ti: '.DomainType'\n          }, {\n            n: 'metadata',\n            mno: 0,\n            col: true,\n            en: 'Metadata',\n            ti: '.MetadataType'\n          }, {\n            n: 'name',\n            rq: true,\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OnlineResourceType',\n        ps: [{\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'DescriptionType',\n        ps: [{\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'keywords',\n            mno: 0,\n            col: true,\n            en: 'Keywords',\n            ti: '.KeywordsType'\n          }]\n      }, {\n        ln: 'CodeType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'codeSpace',\n            an: {\n              lp: 'codeSpace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ResponsiblePartySubsetType',\n        ps: [{\n            n: 'individualName',\n            en: 'IndividualName'\n          }, {\n            n: 'positionName',\n            en: 'PositionName'\n          }, {\n            n: 'contactInfo',\n            en: 'ContactInfo',\n            ti: '.ContactType'\n          }, {\n            n: 'role',\n            en: 'Role',\n            ti: '.CodeType'\n          }]\n      }, {\n        ln: 'BoundingBoxType',\n        ps: [{\n            n: 'lowerCorner',\n            rq: true,\n            en: 'LowerCorner',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            }\n          }, {\n            n: 'upperCorner',\n            rq: true,\n            en: 'UpperCorner',\n            ti: {\n              t: 'l',\n              bti: 'Double'\n            }\n          }, {\n            n: 'crs',\n            an: {\n              lp: 'crs'\n            },\n            t: 'a'\n          }, {\n            n: 'dimensions',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'dimensions'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'RequestMethodType',\n        bti: '.OnlineResourceType',\n        ps: [{\n            n: 'constraint',\n            mno: 0,\n            col: true,\n            en: 'Constraint',\n            ti: '.DomainType'\n          }]\n      }, {\n        ln: 'ContactType',\n        ps: [{\n            n: 'phone',\n            en: 'Phone',\n            ti: '.TelephoneType'\n          }, {\n            n: 'address',\n            en: 'Address',\n            ti: '.AddressType'\n          }, {\n            n: 'onlineResource',\n            en: 'OnlineResource',\n            ti: '.OnlineResourceType'\n          }, {\n            n: 'hoursOfService',\n            en: 'HoursOfService'\n          }, {\n            n: 'contactInstructions',\n            en: 'ContactInstructions'\n          }]\n      }, {\n        ln: 'AcceptVersionsType',\n        ps: [{\n            n: 'version',\n            rq: true,\n            col: true,\n            en: 'Version'\n          }]\n      }, {\n        ln: 'KeywordsType',\n        ps: [{\n            n: 'keyword',\n            rq: true,\n            col: true,\n            en: 'Keyword'\n          }, {\n            n: 'type',\n            en: 'Type',\n            ti: '.CodeType'\n          }]\n      }, {\n        ln: 'IdentificationType',\n        bti: '.DescriptionType',\n        ps: [{\n            n: 'identifier',\n            en: 'Identifier',\n            ti: '.CodeType'\n          }, {\n            n: 'boundingBox',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: 'BoundingBox',\n            ti: '.BoundingBoxType',\n            t: 'er'\n          }, {\n            n: 'outputFormat',\n            mno: 0,\n            col: true,\n            en: 'OutputFormat'\n          }, {\n            n: 'availableCRS',\n            mno: 0,\n            col: true,\n            mx: false,\n            dom: false,\n            en: 'AvailableCRS',\n            t: 'er'\n          }, {\n            n: 'metadata',\n            mno: 0,\n            col: true,\n            en: 'Metadata',\n            ti: '.MetadataType'\n          }]\n      }, {\n        ln: 'GetCapabilitiesType',\n        ps: [{\n            n: 'acceptVersions',\n            en: 'AcceptVersions',\n            ti: '.AcceptVersionsType'\n          }, {\n            n: 'sections',\n            en: 'Sections',\n            ti: '.SectionsType'\n          }, {\n            n: 'acceptFormats',\n            en: 'AcceptFormats',\n            ti: '.AcceptFormatsType'\n          }, {\n            n: 'updateSequence',\n            an: {\n              lp: 'updateSequence'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'DomainType',\n        ps: [{\n            n: 'value',\n            rq: true,\n            col: true,\n            en: 'Value'\n          }, {\n            n: 'metadata',\n            mno: 0,\n            col: true,\n            en: 'Metadata',\n            ti: '.MetadataType'\n          }, {\n            n: 'name',\n            rq: true,\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'DCP',\n        tn: null,\n        ps: [{\n            n: 'http',\n            rq: true,\n            en: 'HTTP',\n            ti: '.HTTP'\n          }]\n      }, {\n        ln: 'SectionsType',\n        ps: [{\n            n: 'section',\n            mno: 0,\n            col: true,\n            en: 'Section'\n          }]\n      }, {\n        ln: 'WGS84BoundingBoxType',\n        bti: '.BoundingBoxType'\n      }, {\n        ln: 'HTTP',\n        tn: null,\n        ps: [{\n            n: 'getOrPost',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            etis: [{\n                en: 'Get',\n                ti: '.RequestMethodType'\n              }, {\n                en: 'Post',\n                ti: '.RequestMethodType'\n              }],\n            t: 'ers'\n          }]\n      }, {\n        ln: 'ExceptionReport',\n        tn: null,\n        ps: [{\n            n: 'exception',\n            rq: true,\n            col: true,\n            en: 'Exception',\n            ti: '.ExceptionType'\n          }, {\n            n: 'version',\n            rq: true,\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }, {\n            n: 'language',\n            ti: 'Language',\n            an: {\n              lp: 'language'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MetadataType',\n        ps: [{\n            n: 'abstractMetaData',\n            en: 'AbstractMetaData',\n            ti: 'AnyType'\n          }, {\n            n: 'about',\n            an: {\n              lp: 'about'\n            },\n            t: 'a'\n          }, {\n            n: 'type',\n            ti: 'XLink_1_0.TypeType',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'XLink_1_0.ShowType',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'XLink_1_0.ActuateType',\n            t: 'a'\n          }]\n      }, {\n        ln: 'ServiceProvider',\n        tn: null,\n        ps: [{\n            n: 'providerName',\n            rq: true,\n            en: 'ProviderName'\n          }, {\n            n: 'providerSite',\n            en: 'ProviderSite',\n            ti: '.OnlineResourceType'\n          }, {\n            n: 'serviceContact',\n            rq: true,\n            en: 'ServiceContact',\n            ti: '.ResponsiblePartySubsetType'\n          }]\n      }, {\n        ln: 'AddressType',\n        ps: [{\n            n: 'deliveryPoint',\n            mno: 0,\n            col: true,\n            en: 'DeliveryPoint'\n          }, {\n            n: 'city',\n            en: 'City'\n          }, {\n            n: 'administrativeArea',\n            en: 'AdministrativeArea'\n          }, {\n            n: 'postalCode',\n            en: 'PostalCode'\n          }, {\n            n: 'country',\n            en: 'Country'\n          }, {\n            n: 'electronicMailAddress',\n            mno: 0,\n            col: true,\n            en: 'ElectronicMailAddress'\n          }]\n      }, {\n        ln: 'ExceptionType',\n        ps: [{\n            n: 'exceptionText',\n            mno: 0,\n            col: true,\n            en: 'ExceptionText'\n          }, {\n            n: 'exceptionCode',\n            rq: true,\n            an: {\n              lp: 'exceptionCode'\n            },\n            t: 'a'\n          }, {\n            n: 'locator',\n            an: {\n              lp: 'locator'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ServiceIdentification',\n        tn: null,\n        bti: '.DescriptionType',\n        ps: [{\n            n: 'serviceType',\n            rq: true,\n            en: 'ServiceType',\n            ti: '.CodeType'\n          }, {\n            n: 'serviceTypeVersion',\n            rq: true,\n            col: true,\n            en: 'ServiceTypeVersion'\n          }, {\n            n: 'fees',\n            en: 'Fees'\n          }, {\n            n: 'accessConstraints',\n            mno: 0,\n            col: true,\n            en: 'AccessConstraints'\n          }]\n      }, {\n        ln: 'ResponsiblePartyType',\n        ps: [{\n            n: 'individualName',\n            en: 'IndividualName'\n          }, {\n            n: 'organisationName',\n            en: 'OrganisationName'\n          }, {\n            n: 'positionName',\n            en: 'PositionName'\n          }, {\n            n: 'contactInfo',\n            en: 'ContactInfo',\n            ti: '.ContactType'\n          }, {\n            n: 'role',\n            rq: true,\n            en: 'Role',\n            ti: '.CodeType'\n          }]\n      }, {\n        ln: 'OperationsMetadata',\n        tn: null,\n        ps: [{\n            n: 'operation',\n            rq: true,\n            mno: 2,\n            col: true,\n            en: 'Operation',\n            ti: '.Operation'\n          }, {\n            n: 'parameter',\n            mno: 0,\n            col: true,\n            en: 'Parameter',\n            ti: '.DomainType'\n          }, {\n            n: 'constraint',\n            mno: 0,\n            col: true,\n            en: 'Constraint',\n            ti: '.DomainType'\n          }, {\n            n: 'extendedCapabilities',\n            en: 'ExtendedCapabilities',\n            ti: 'AnyType'\n          }]\n      }],\n    eis: [{\n        en: 'ExtendedCapabilities',\n        ti: 'AnyType'\n      }, {\n        en: 'Abstract'\n      }, {\n        en: 'AbstractMetaData',\n        ti: 'AnyType'\n      }, {\n        en: 'Get',\n        ti: '.RequestMethodType',\n        sc: '.HTTP'\n      }, {\n        en: 'Fees'\n      }, {\n        en: 'OrganisationName'\n      }, {\n        en: 'Role',\n        ti: '.CodeType'\n      }, {\n        en: 'Metadata',\n        ti: '.MetadataType'\n      }, {\n        en: 'IndividualName'\n      }, {\n        en: 'AccessConstraints'\n      }, {\n        en: 'BoundingBox',\n        ti: '.BoundingBoxType'\n      }, {\n        en: 'Exception',\n        ti: '.ExceptionType'\n      }, {\n        en: 'ExceptionReport',\n        ti: '.ExceptionReport'\n      }, {\n        en: 'OperationsMetadata',\n        ti: '.OperationsMetadata'\n      }, {\n        en: 'GetCapabilities',\n        ti: '.GetCapabilitiesType'\n      }, {\n        en: 'ServiceProvider',\n        ti: '.ServiceProvider'\n      }, {\n        en: 'SupportedCRS',\n        sh: 'AvailableCRS'\n      }, {\n        en: 'Identifier',\n        ti: '.CodeType'\n      }, {\n        en: 'Language',\n        ti: 'Language'\n      }, {\n        en: 'WGS84BoundingBox',\n        ti: '.WGS84BoundingBoxType',\n        sh: 'BoundingBox'\n      }, {\n        en: 'PointOfContact',\n        ti: '.ResponsiblePartyType'\n      }, {\n        en: 'Title'\n      }, {\n        en: 'ContactInfo',\n        ti: '.ContactType'\n      }, {\n        en: 'AvailableCRS'\n      }, {\n        en: 'Post',\n        ti: '.RequestMethodType',\n        sc: '.HTTP'\n      }, {\n        en: 'Keywords',\n        ti: '.KeywordsType'\n      }, {\n        en: 'PositionName'\n      }, {\n        en: 'HTTP',\n        ti: '.HTTP'\n      }, {\n        en: 'DCP',\n        ti: '.DCP'\n      }, {\n        en: 'OutputFormat'\n      }, {\n        en: 'Operation',\n        ti: '.Operation'\n      }, {\n        en: 'ServiceIdentification',\n        ti: '.ServiceIdentification'\n      }]\n  };\n  return {\n    OWS_1_0_0: OWS_1_0_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], OWS_1_0_0_Module_Factory);\n}\nelse {\n  var OWS_1_0_0_Module = OWS_1_0_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.OWS_1_0_0 = OWS_1_0_0_Module.OWS_1_0_0;\n  }\n  else {\n    var OWS_1_0_0 = OWS_1_0_0_Module.OWS_1_0_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/OWS_1_0_0.js\n// module id = 477\n// module chunks = 4","var SMIL_2_0_Module_Factory = function () {\n  var SMIL_2_0 = {\n    n: 'SMIL_2_0',\n    dens: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/',\n    deps: ['SMIL_2_0_Language'],\n    tis: [{\n        ln: 'AnimateMotionPrototype',\n        tn: 'animateMotionPrototype',\n        ps: [{\n            n: 'origin',\n            an: {\n              lp: 'origin'\n            },\n            t: 'a'\n          }, {\n            n: 'from',\n            an: {\n              lp: 'from'\n            },\n            t: 'a'\n          }, {\n            n: 'by',\n            an: {\n              lp: 'by'\n            },\n            t: 'a'\n          }, {\n            n: 'values',\n            an: {\n              lp: 'values'\n            },\n            t: 'a'\n          }, {\n            n: 'to',\n            an: {\n              lp: 'to'\n            },\n            t: 'a'\n          }, {\n            n: 'additive',\n            an: {\n              lp: 'additive'\n            },\n            t: 'a'\n          }, {\n            n: 'accumulate',\n            an: {\n              lp: 'accumulate'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SetPrototype',\n        tn: 'setPrototype',\n        ps: [{\n            n: 'attributeName',\n            rq: true,\n            an: {\n              lp: 'attributeName'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeType',\n            an: {\n              lp: 'attributeType'\n            },\n            t: 'a'\n          }, {\n            n: 'to',\n            an: {\n              lp: 'to'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AnimateColorPrototype',\n        tn: 'animateColorPrototype',\n        ps: [{\n            n: 'additive',\n            an: {\n              lp: 'additive'\n            },\n            t: 'a'\n          }, {\n            n: 'accumulate',\n            an: {\n              lp: 'accumulate'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeName',\n            rq: true,\n            an: {\n              lp: 'attributeName'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeType',\n            an: {\n              lp: 'attributeType'\n            },\n            t: 'a'\n          }, {\n            n: 'from',\n            an: {\n              lp: 'from'\n            },\n            t: 'a'\n          }, {\n            n: 'by',\n            an: {\n              lp: 'by'\n            },\n            t: 'a'\n          }, {\n            n: 'values',\n            an: {\n              lp: 'values'\n            },\n            t: 'a'\n          }, {\n            n: 'to',\n            an: {\n              lp: 'to'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AnimatePrototype',\n        tn: 'animatePrototype',\n        ps: [{\n            n: 'additive',\n            an: {\n              lp: 'additive'\n            },\n            t: 'a'\n          }, {\n            n: 'accumulate',\n            an: {\n              lp: 'accumulate'\n            },\n            t: 'a'\n          }, {\n            n: 'from',\n            an: {\n              lp: 'from'\n            },\n            t: 'a'\n          }, {\n            n: 'by',\n            an: {\n              lp: 'by'\n            },\n            t: 'a'\n          }, {\n            n: 'values',\n            an: {\n              lp: 'values'\n            },\n            t: 'a'\n          }, {\n            n: 'to',\n            an: {\n              lp: 'to'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeName',\n            rq: true,\n            an: {\n              lp: 'attributeName'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeType',\n            an: {\n              lp: 'attributeType'\n            },\n            t: 'a'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'SyncBehaviorDefaultType',\n        vs: ['canSlip', 'locked', 'independent', 'inherit']\n      }, {\n        t: 'enum',\n        ln: 'SyncBehaviorType',\n        vs: ['canSlip', 'locked', 'independent', 'default']\n      }, {\n        t: 'enum',\n        ln: 'FillTimingAttrsType',\n        vs: ['remove', 'freeze', 'hold', 'auto', 'default', 'transition']\n      }, {\n        t: 'enum',\n        ln: 'RestartDefaultType',\n        vs: ['never', 'always', 'whenNotActive', 'inherit']\n      }, {\n        t: 'enum',\n        ln: 'FillDefaultType',\n        vs: ['remove', 'freeze', 'hold', 'auto', 'inherit', 'transition']\n      }, {\n        t: 'enum',\n        ln: 'RestartTimingType',\n        vs: ['never', 'always', 'whenNotActive', 'default']\n      }],\n    eis: [{\n        en: 'set',\n        ti: 'SMIL_2_0_Language.SetType',\n        sh: {\n          lp: 'set',\n          ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/Language'\n        }\n      }, {\n        en: 'animate',\n        ti: 'SMIL_2_0_Language.AnimateType',\n        sh: {\n          lp: 'animate',\n          ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/Language'\n        }\n      }, {\n        en: 'animateMotion',\n        ti: 'SMIL_2_0_Language.AnimateMotionType',\n        sh: {\n          lp: 'animateMotion',\n          ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/Language'\n        }\n      }, {\n        en: 'animateColor',\n        ti: 'SMIL_2_0_Language.AnimateColorType',\n        sh: {\n          lp: 'animateColor',\n          ns: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/Language'\n        }\n      }]\n  };\n  return {\n    SMIL_2_0: SMIL_2_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], SMIL_2_0_Module_Factory);\n}\nelse {\n  var SMIL_2_0_Module = SMIL_2_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.SMIL_2_0 = SMIL_2_0_Module.SMIL_2_0;\n  }\n  else {\n    var SMIL_2_0 = SMIL_2_0_Module.SMIL_2_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/SMIL_2_0.js\n// module id = 479\n// module chunks = 4","var SMIL_2_0_Language_Module_Factory = function () {\n  var SMIL_2_0_Language = {\n    n: 'SMIL_2_0_Language',\n    dens: 'http:\\/\\/www.w3.org\\/2001\\/SMIL20\\/Language',\n    deps: ['SMIL_2_0'],\n    tis: [{\n        ln: 'AnimateColorType',\n        tn: 'animateColorType',\n        bti: 'SMIL_2_0.AnimateColorPrototype',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'any',\n            mno: 0,\n            col: true,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'syncBehaviorDefault',\n            an: {\n              lp: 'syncBehaviorDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncToleranceDefault',\n            an: {\n              lp: 'syncToleranceDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'min',\n            an: {\n              lp: 'min'\n            },\n            t: 'a'\n          }, {\n            n: 'max',\n            an: {\n              lp: 'max'\n            },\n            t: 'a'\n          }, {\n            n: 'begin',\n            an: {\n              lp: 'begin'\n            },\n            t: 'a'\n          }, {\n            n: 'end',\n            an: {\n              lp: 'end'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatDur',\n            an: {\n              lp: 'repeatDur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatCount',\n            ti: 'Decimal',\n            an: {\n              lp: 'repeatCount'\n            },\n            t: 'a'\n          }, {\n            n: 'dur',\n            an: {\n              lp: 'dur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeat',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'repeat'\n            },\n            t: 'a'\n          }, {\n            n: 'fillDefault',\n            an: {\n              lp: 'fillDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'restart',\n            an: {\n              lp: 'restart'\n            },\n            t: 'a'\n          }, {\n            n: 'restartDefault',\n            an: {\n              lp: 'restartDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehavior',\n            an: {\n              lp: 'syncBehavior'\n            },\n            t: 'a'\n          }, {\n            n: 'syncTolerance',\n            an: {\n              lp: 'syncTolerance'\n            },\n            t: 'a'\n          }, {\n            n: 'fill',\n            an: {\n              lp: 'fill'\n            },\n            t: 'a'\n          }, {\n            n: 'skipContent',\n            ti: 'Boolean',\n            an: {\n              lp: 'skip-content'\n            },\n            t: 'a'\n          }, {\n            n: 'alt',\n            an: {\n              lp: 'alt'\n            },\n            t: 'a'\n          }, {\n            n: 'longdesc',\n            an: {\n              lp: 'longdesc'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }, {\n            n: 'clazz',\n            an: {\n              lp: 'class'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'targetElement',\n            ti: 'IDREF',\n            an: {\n              lp: 'targetElement'\n            },\n            t: 'a'\n          }, {\n            n: 'calcMode',\n            an: {\n              lp: 'calcMode'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SetType',\n        tn: 'setType',\n        bti: 'SMIL_2_0.SetPrototype',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'any',\n            mno: 0,\n            col: true,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'targetElement',\n            ti: 'IDREF',\n            an: {\n              lp: 'targetElement'\n            },\n            t: 'a'\n          }, {\n            n: 'skipContent',\n            ti: 'Boolean',\n            an: {\n              lp: 'skip-content'\n            },\n            t: 'a'\n          }, {\n            n: 'alt',\n            an: {\n              lp: 'alt'\n            },\n            t: 'a'\n          }, {\n            n: 'longdesc',\n            an: {\n              lp: 'longdesc'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }, {\n            n: 'clazz',\n            an: {\n              lp: 'class'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehaviorDefault',\n            an: {\n              lp: 'syncBehaviorDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncToleranceDefault',\n            an: {\n              lp: 'syncToleranceDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'min',\n            an: {\n              lp: 'min'\n            },\n            t: 'a'\n          }, {\n            n: 'max',\n            an: {\n              lp: 'max'\n            },\n            t: 'a'\n          }, {\n            n: 'begin',\n            an: {\n              lp: 'begin'\n            },\n            t: 'a'\n          }, {\n            n: 'end',\n            an: {\n              lp: 'end'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatDur',\n            an: {\n              lp: 'repeatDur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatCount',\n            ti: 'Decimal',\n            an: {\n              lp: 'repeatCount'\n            },\n            t: 'a'\n          }, {\n            n: 'dur',\n            an: {\n              lp: 'dur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeat',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'repeat'\n            },\n            t: 'a'\n          }, {\n            n: 'fillDefault',\n            an: {\n              lp: 'fillDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'restart',\n            an: {\n              lp: 'restart'\n            },\n            t: 'a'\n          }, {\n            n: 'restartDefault',\n            an: {\n              lp: 'restartDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehavior',\n            an: {\n              lp: 'syncBehavior'\n            },\n            t: 'a'\n          }, {\n            n: 'syncTolerance',\n            an: {\n              lp: 'syncTolerance'\n            },\n            t: 'a'\n          }, {\n            n: 'fill',\n            an: {\n              lp: 'fill'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AnimateType',\n        tn: 'animateType',\n        bti: 'SMIL_2_0.AnimatePrototype',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'any',\n            mno: 0,\n            col: true,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'skipContent',\n            ti: 'Boolean',\n            an: {\n              lp: 'skip-content'\n            },\n            t: 'a'\n          }, {\n            n: 'calcMode',\n            an: {\n              lp: 'calcMode'\n            },\n            t: 'a'\n          }, {\n            n: 'alt',\n            an: {\n              lp: 'alt'\n            },\n            t: 'a'\n          }, {\n            n: 'longdesc',\n            an: {\n              lp: 'longdesc'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }, {\n            n: 'clazz',\n            an: {\n              lp: 'class'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'targetElement',\n            ti: 'IDREF',\n            an: {\n              lp: 'targetElement'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehaviorDefault',\n            an: {\n              lp: 'syncBehaviorDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncToleranceDefault',\n            an: {\n              lp: 'syncToleranceDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'min',\n            an: {\n              lp: 'min'\n            },\n            t: 'a'\n          }, {\n            n: 'max',\n            an: {\n              lp: 'max'\n            },\n            t: 'a'\n          }, {\n            n: 'begin',\n            an: {\n              lp: 'begin'\n            },\n            t: 'a'\n          }, {\n            n: 'end',\n            an: {\n              lp: 'end'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatDur',\n            an: {\n              lp: 'repeatDur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatCount',\n            ti: 'Decimal',\n            an: {\n              lp: 'repeatCount'\n            },\n            t: 'a'\n          }, {\n            n: 'dur',\n            an: {\n              lp: 'dur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeat',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'repeat'\n            },\n            t: 'a'\n          }, {\n            n: 'fillDefault',\n            an: {\n              lp: 'fillDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'restart',\n            an: {\n              lp: 'restart'\n            },\n            t: 'a'\n          }, {\n            n: 'restartDefault',\n            an: {\n              lp: 'restartDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehavior',\n            an: {\n              lp: 'syncBehavior'\n            },\n            t: 'a'\n          }, {\n            n: 'syncTolerance',\n            an: {\n              lp: 'syncTolerance'\n            },\n            t: 'a'\n          }, {\n            n: 'fill',\n            an: {\n              lp: 'fill'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AnimateMotionType',\n        tn: 'animateMotionType',\n        bti: 'SMIL_2_0.AnimateMotionPrototype',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'any',\n            mno: 0,\n            col: true,\n            mx: false,\n            t: 'ae'\n          }, {\n            n: 'targetElement',\n            ti: 'IDREF',\n            an: {\n              lp: 'targetElement'\n            },\n            t: 'a'\n          }, {\n            n: 'alt',\n            an: {\n              lp: 'alt'\n            },\n            t: 'a'\n          }, {\n            n: 'longdesc',\n            an: {\n              lp: 'longdesc'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }, {\n            n: 'clazz',\n            an: {\n              lp: 'class'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'skipContent',\n            ti: 'Boolean',\n            an: {\n              lp: 'skip-content'\n            },\n            t: 'a'\n          }, {\n            n: 'calcMode',\n            an: {\n              lp: 'calcMode'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehaviorDefault',\n            an: {\n              lp: 'syncBehaviorDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncToleranceDefault',\n            an: {\n              lp: 'syncToleranceDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'min',\n            an: {\n              lp: 'min'\n            },\n            t: 'a'\n          }, {\n            n: 'max',\n            an: {\n              lp: 'max'\n            },\n            t: 'a'\n          }, {\n            n: 'begin',\n            an: {\n              lp: 'begin'\n            },\n            t: 'a'\n          }, {\n            n: 'end',\n            an: {\n              lp: 'end'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatDur',\n            an: {\n              lp: 'repeatDur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeatCount',\n            ti: 'Decimal',\n            an: {\n              lp: 'repeatCount'\n            },\n            t: 'a'\n          }, {\n            n: 'dur',\n            an: {\n              lp: 'dur'\n            },\n            t: 'a'\n          }, {\n            n: 'repeat',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'repeat'\n            },\n            t: 'a'\n          }, {\n            n: 'fillDefault',\n            an: {\n              lp: 'fillDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'restart',\n            an: {\n              lp: 'restart'\n            },\n            t: 'a'\n          }, {\n            n: 'restartDefault',\n            an: {\n              lp: 'restartDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'syncBehavior',\n            an: {\n              lp: 'syncBehavior'\n            },\n            t: 'a'\n          }, {\n            n: 'syncTolerance',\n            an: {\n              lp: 'syncTolerance'\n            },\n            t: 'a'\n          }, {\n            n: 'fill',\n            an: {\n              lp: 'fill'\n            },\n            t: 'a'\n          }]\n      }],\n    eis: [{\n        en: 'animate',\n        ti: '.AnimateType'\n      }, {\n        en: 'animateMotion',\n        ti: '.AnimateMotionType'\n      }, {\n        en: 'animateColor',\n        ti: '.AnimateColorType'\n      }, {\n        en: 'set',\n        ti: '.SetType'\n      }]\n  };\n  return {\n    SMIL_2_0_Language: SMIL_2_0_Language\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], SMIL_2_0_Language_Module_Factory);\n}\nelse {\n  var SMIL_2_0_Language_Module = SMIL_2_0_Language_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.SMIL_2_0_Language = SMIL_2_0_Language_Module.SMIL_2_0_Language;\n  }\n  else {\n    var SMIL_2_0_Language = SMIL_2_0_Language_Module.SMIL_2_0_Language;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/SMIL_2_0_Language.js\n// module id = 480\n// module chunks = 4","var WFS_1_1_0_Module_Factory = function () {\n  var WFS_1_1_0 = {\n    n: 'WFS_1_1_0',\n    dens: 'http:\\/\\/www.opengis.net\\/wfs',\n    deps: ['GML_3_1_1', 'Filter_1_1_0', 'OWS_1_0_0'],\n    tis: [{\n        ln: 'InsertedFeatureType',\n        ps: [{\n            n: 'featureId',\n            rq: true,\n            col: true,\n            en: {\n              lp: 'FeatureId',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FeatureIdType'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ActionType',\n        ps: [{\n            n: 'message',\n            en: 'Message'\n          }, {\n            n: 'locator',\n            rq: true,\n            an: {\n              lp: 'locator'\n            },\n            t: 'a'\n          }, {\n            n: 'code',\n            an: {\n              lp: 'code'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OutputFormatListType',\n        ps: [{\n            n: 'format',\n            rq: true,\n            col: true,\n            en: 'Format'\n          }]\n      }, {\n        ln: 'DeleteElementType',\n        ps: [{\n            n: 'filter',\n            rq: true,\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FilterType'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }, {\n            n: 'typeName',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'typeName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'BaseRequestType',\n        ps: [{\n            n: 'service',\n            an: {\n              lp: 'service'\n            },\n            t: 'a'\n          }, {\n            n: 'version',\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TransactionResultsType',\n        ps: [{\n            n: 'action',\n            mno: 0,\n            col: true,\n            en: 'Action',\n            ti: '.ActionType'\n          }]\n      }, {\n        ln: 'TransactionType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'lockId',\n            en: 'LockId'\n          }, {\n            n: 'insertOrUpdateOrDelete',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'Insert',\n                ti: '.InsertElementType'\n              }, {\n                en: 'Update',\n                ti: '.UpdateElementType'\n              }, {\n                en: 'Delete',\n                ti: '.DeleteElementType'\n              }, {\n                en: 'Native',\n                ti: '.NativeType'\n              }],\n            t: 'es'\n          }, {\n            n: 'releaseAction',\n            an: {\n              lp: 'releaseAction'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'MetadataURLType',\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'type',\n            rq: true,\n            an: {\n              lp: 'type'\n            },\n            t: 'a'\n          }, {\n            n: 'format',\n            rq: true,\n            an: {\n              lp: 'format'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OperationsType',\n        ps: [{\n            n: 'operation',\n            rq: true,\n            col: true,\n            en: 'Operation'\n          }]\n      }, {\n        ln: 'GMLObjectTypeListType',\n        ps: [{\n            n: 'gmlObjectType',\n            rq: true,\n            col: true,\n            en: 'GMLObjectType',\n            ti: '.GMLObjectTypeType'\n          }]\n      }, {\n        ln: 'InsertElementType',\n        ps: [{\n            n: 'feature',\n            rq: true,\n            col: true,\n            mx: false,\n            dom: false,\n            en: {\n              lp: '_Feature',\n              ns: 'http:\\/\\/www.opengis.net\\/gml'\n            },\n            ti: 'GML_3_1_1.AbstractFeatureType',\n            t: 'er'\n          }, {\n            n: 'idgen',\n            an: {\n              lp: 'idgen'\n            },\n            t: 'a'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }, {\n            n: 'inputFormat',\n            an: {\n              lp: 'inputFormat'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'InsertResultsType',\n        ps: [{\n            n: 'feature',\n            rq: true,\n            col: true,\n            en: 'Feature',\n            ti: '.InsertedFeatureType'\n          }]\n      }, {\n        ln: 'FeatureTypeListType',\n        ps: [{\n            n: 'operations',\n            en: 'Operations',\n            ti: '.OperationsType'\n          }, {\n            n: 'featureType',\n            rq: true,\n            col: true,\n            en: 'FeatureType',\n            ti: '.FeatureTypeType'\n          }]\n      }, {\n        ln: 'GetFeatureType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'query',\n            rq: true,\n            col: true,\n            en: 'Query',\n            ti: '.QueryType'\n          }, {\n            n: 'resultType',\n            an: {\n              lp: 'resultType'\n            },\n            t: 'a'\n          }, {\n            n: 'outputFormat',\n            an: {\n              lp: 'outputFormat'\n            },\n            t: 'a'\n          }, {\n            n: 'maxFeatures',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'maxFeatures'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkDepth',\n            an: {\n              lp: 'traverseXlinkDepth'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkExpiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'traverseXlinkExpiry'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'FeaturesNotLockedType',\n        ps: [{\n            n: 'featureId',\n            rq: true,\n            col: true,\n            en: {\n              lp: 'FeatureId',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FeatureIdType'\n          }]\n      }, {\n        ln: 'UpdateElementType',\n        ps: [{\n            n: 'property',\n            rq: true,\n            col: true,\n            en: 'Property',\n            ti: '.PropertyType'\n          }, {\n            n: 'filter',\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FilterType'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }, {\n            n: 'typeName',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'typeName'\n            },\n            t: 'a'\n          }, {\n            n: 'inputFormat',\n            an: {\n              lp: 'inputFormat'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'WFSCapabilitiesType',\n        tn: 'WFS_CapabilitiesType',\n        bti: 'OWS_1_0_0.CapabilitiesBaseType',\n        ps: [{\n            n: 'featureTypeList',\n            en: 'FeatureTypeList',\n            ti: '.FeatureTypeListType'\n          }, {\n            n: 'servesGMLObjectTypeList',\n            en: 'ServesGMLObjectTypeList',\n            ti: '.GMLObjectTypeListType'\n          }, {\n            n: 'supportsGMLObjectTypeList',\n            en: 'SupportsGMLObjectTypeList',\n            ti: '.GMLObjectTypeListType'\n          }, {\n            n: 'filterCapabilities',\n            rq: true,\n            en: {\n              lp: 'Filter_Capabilities',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FilterCapabilities'\n          }]\n      }, {\n        ln: 'PropertyType',\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name',\n            ti: 'QName'\n          }, {\n            n: 'value',\n            en: 'Value',\n            ti: 'AnyType'\n          }]\n      }, {\n        ln: 'LockType',\n        ps: [{\n            n: 'filter',\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FilterType'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }, {\n            n: 'typeName',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'typeName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TransactionSummaryType',\n        ps: [{\n            n: 'totalInserted',\n            ti: 'NonNegativeInteger'\n          }, {\n            n: 'totalUpdated',\n            ti: 'NonNegativeInteger'\n          }, {\n            n: 'totalDeleted',\n            ti: 'NonNegativeInteger'\n          }]\n      }, {\n        ln: 'FeaturesLockedType',\n        ps: [{\n            n: 'featureId',\n            rq: true,\n            col: true,\n            en: {\n              lp: 'FeatureId',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FeatureIdType'\n          }]\n      }, {\n        ln: 'LockFeatureType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'lock',\n            rq: true,\n            col: true,\n            en: 'Lock',\n            ti: '.LockType'\n          }, {\n            n: 'expiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'expiry'\n            },\n            t: 'a'\n          }, {\n            n: 'lockAction',\n            an: {\n              lp: 'lockAction'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'QueryType',\n        ps: [{\n            n: 'propertyNameOrXlinkPropertyNameOrFunction',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'PropertyName'\n              }, {\n                en: 'XlinkPropertyName',\n                ti: '.XlinkPropertyName'\n              }, {\n                en: {\n                  lp: 'Function',\n                  ns: 'http:\\/\\/www.opengis.net\\/ogc'\n                },\n                ti: 'Filter_1_1_0.FunctionType'\n              }],\n            t: 'es'\n          }, {\n            n: 'filter',\n            en: {\n              lp: 'Filter',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.FilterType'\n          }, {\n            n: 'sortBy',\n            en: {\n              lp: 'SortBy',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.SortByType'\n          }, {\n            n: 'handle',\n            an: {\n              lp: 'handle'\n            },\n            t: 'a'\n          }, {\n            n: 'typeName',\n            rq: true,\n            ti: {\n              t: 'l',\n              bti: 'QName'\n            },\n            an: {\n              lp: 'typeName'\n            },\n            t: 'a'\n          }, {\n            n: 'featureVersion',\n            an: {\n              lp: 'featureVersion'\n            },\n            t: 'a'\n          }, {\n            n: 'srsName',\n            an: {\n              lp: 'srsName'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'XlinkPropertyName',\n        tn: null,\n        ps: [{\n            n: 'value',\n            t: 'v'\n          }, {\n            n: 'traverseXlinkDepth',\n            rq: true,\n            an: {\n              lp: 'traverseXlinkDepth'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkExpiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'traverseXlinkExpiry'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GetFeatureWithLockType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'query',\n            rq: true,\n            col: true,\n            en: 'Query',\n            ti: '.QueryType'\n          }, {\n            n: 'expiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'expiry'\n            },\n            t: 'a'\n          }, {\n            n: 'resultType',\n            an: {\n              lp: 'resultType'\n            },\n            t: 'a'\n          }, {\n            n: 'outputFormat',\n            an: {\n              lp: 'outputFormat'\n            },\n            t: 'a'\n          }, {\n            n: 'maxFeatures',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'maxFeatures'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkDepth',\n            an: {\n              lp: 'traverseXlinkDepth'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkExpiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'traverseXlinkExpiry'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GetCapabilitiesType',\n        bti: 'OWS_1_0_0.GetCapabilitiesType',\n        ps: [{\n            n: 'service',\n            an: {\n              lp: 'service'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'NativeType',\n        ps: [{\n            n: 'vendorId',\n            rq: true,\n            an: {\n              lp: 'vendorId'\n            },\n            t: 'a'\n          }, {\n            n: 'safeToIgnore',\n            rq: true,\n            ti: 'Boolean',\n            an: {\n              lp: 'safeToIgnore'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LockFeatureResponseType',\n        ps: [{\n            n: 'lockId',\n            rq: true,\n            en: 'LockId'\n          }, {\n            n: 'featuresLocked',\n            en: 'FeaturesLocked',\n            ti: '.FeaturesLockedType'\n          }, {\n            n: 'featuresNotLocked',\n            en: 'FeaturesNotLocked',\n            ti: '.FeaturesNotLockedType'\n          }]\n      }, {\n        ln: 'TransactionResponseType',\n        ps: [{\n            n: 'transactionSummary',\n            rq: true,\n            en: 'TransactionSummary',\n            ti: '.TransactionSummaryType'\n          }, {\n            n: 'transactionResults',\n            en: 'TransactionResults',\n            ti: '.TransactionResultsType'\n          }, {\n            n: 'insertResults',\n            en: 'InsertResults',\n            ti: '.InsertResultsType'\n          }, {\n            n: 'version',\n            rq: true,\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'FeatureTypeType.NoSRS',\n        tn: null\n      }, {\n        ln: 'FeatureTypeType',\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name',\n            ti: 'QName'\n          }, {\n            n: 'title',\n            rq: true,\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'keywords',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'Keywords',\n              ns: 'http:\\/\\/www.opengis.net\\/ows'\n            },\n            ti: 'OWS_1_0_0.KeywordsType'\n          }, {\n            n: 'defaultSRS',\n            rq: true,\n            en: 'DefaultSRS'\n          }, {\n            n: 'otherSRS',\n            mno: 0,\n            col: true,\n            en: 'OtherSRS'\n          }, {\n            n: 'noSRS',\n            rq: true,\n            en: 'NoSRS',\n            ti: '.FeatureTypeType.NoSRS'\n          }, {\n            n: 'operations',\n            en: 'Operations',\n            ti: '.OperationsType'\n          }, {\n            n: 'outputFormats',\n            en: 'OutputFormats',\n            ti: '.OutputFormatListType'\n          }, {\n            n: 'wgs84BoundingBox',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'WGS84BoundingBox',\n              ns: 'http:\\/\\/www.opengis.net\\/ows'\n            },\n            ti: 'OWS_1_0_0.WGS84BoundingBoxType'\n          }, {\n            n: 'metadataURL',\n            mno: 0,\n            col: true,\n            en: 'MetadataURL',\n            ti: '.MetadataURLType'\n          }]\n      }, {\n        ln: 'GetGmlObjectType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'gmlObjectId',\n            rq: true,\n            en: {\n              lp: 'GmlObjectId',\n              ns: 'http:\\/\\/www.opengis.net\\/ogc'\n            },\n            ti: 'Filter_1_1_0.GmlObjectIdType'\n          }, {\n            n: 'outputFormat',\n            an: {\n              lp: 'outputFormat'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkDepth',\n            rq: true,\n            an: {\n              lp: 'traverseXlinkDepth'\n            },\n            t: 'a'\n          }, {\n            n: 'traverseXlinkExpiry',\n            ti: 'PositiveInteger',\n            an: {\n              lp: 'traverseXlinkExpiry'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'FeatureCollectionType',\n        bti: 'GML_3_1_1.AbstractFeatureCollectionType',\n        ps: [{\n            n: 'lockId',\n            an: {\n              lp: 'lockId'\n            },\n            t: 'a'\n          }, {\n            n: 'timeStamp',\n            ti: 'DateTime',\n            an: {\n              lp: 'timeStamp'\n            },\n            t: 'a'\n          }, {\n            n: 'numberOfFeatures',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'numberOfFeatures'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GMLObjectTypeType',\n        ps: [{\n            n: 'name',\n            rq: true,\n            en: 'Name',\n            ti: 'QName'\n          }, {\n            n: 'title',\n            en: 'Title'\n          }, {\n            n: '_abstract',\n            en: 'Abstract'\n          }, {\n            n: 'keywords',\n            mno: 0,\n            col: true,\n            en: {\n              lp: 'Keywords',\n              ns: 'http:\\/\\/www.opengis.net\\/ows'\n            },\n            ti: 'OWS_1_0_0.KeywordsType'\n          }, {\n            n: 'outputFormats',\n            en: 'OutputFormats',\n            ti: '.OutputFormatListType'\n          }]\n      }, {\n        ln: 'DescribeFeatureTypeType',\n        bti: '.BaseRequestType',\n        ps: [{\n            n: 'typeName',\n            mno: 0,\n            col: true,\n            en: 'TypeName',\n            ti: 'QName'\n          }, {\n            n: 'outputFormat',\n            an: {\n              lp: 'outputFormat'\n            },\n            t: 'a'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'ResultTypeType',\n        vs: ['results', 'hits']\n      }, {\n        t: 'enum',\n        ln: 'IdentifierGenerationOptionType',\n        vs: ['UseExisting', 'ReplaceDuplicate', 'GenerateNew']\n      }, {\n        t: 'enum',\n        ln: 'OperationType',\n        vs: ['Insert', 'Update', 'Delete', 'Query', 'Lock', 'GetGmlObject']\n      }, {\n        t: 'enum',\n        ln: 'AllSomeType',\n        vs: ['ALL', 'SOME']\n      }],\n    eis: [{\n        en: 'Update',\n        ti: '.UpdateElementType'\n      }, {\n        en: 'XlinkPropertyName',\n        ti: '.XlinkPropertyName'\n      }, {\n        en: 'TransactionResponse',\n        ti: '.TransactionResponseType'\n      }, {\n        en: 'Native',\n        ti: '.NativeType'\n      }, {\n        en: 'SupportsGMLObjectTypeList',\n        ti: '.GMLObjectTypeListType'\n      }, {\n        en: 'WFS_Capabilities',\n        ti: '.WFSCapabilitiesType'\n      }, {\n        en: 'Insert',\n        ti: '.InsertElementType'\n      }, {\n        en: 'DescribeFeatureType',\n        ti: '.DescribeFeatureTypeType'\n      }, {\n        en: 'GetFeatureWithLock',\n        ti: '.GetFeatureWithLockType'\n      }, {\n        en: 'FeatureCollection',\n        ti: '.FeatureCollectionType',\n        sh: {\n          lp: '_FeatureCollection',\n          ns: 'http:\\/\\/www.opengis.net\\/gml'\n        }\n      }, {\n        en: 'GetFeature',\n        ti: '.GetFeatureType'\n      }, {\n        en: 'GetGmlObject',\n        ti: '.GetGmlObjectType'\n      }, {\n        en: 'LockId'\n      }, {\n        en: 'LockFeatureResponse',\n        ti: '.LockFeatureResponseType'\n      }, {\n        en: 'Query',\n        ti: '.QueryType'\n      }, {\n        en: 'Property',\n        ti: '.PropertyType'\n      }, {\n        en: 'LockFeature',\n        ti: '.LockFeatureType'\n      }, {\n        en: 'GetCapabilities',\n        ti: '.GetCapabilitiesType'\n      }, {\n        en: 'Transaction',\n        ti: '.TransactionType'\n      }, {\n        en: 'PropertyName'\n      }, {\n        en: 'Delete',\n        ti: '.DeleteElementType'\n      }, {\n        en: 'ServesGMLObjectTypeList',\n        ti: '.GMLObjectTypeListType'\n      }, {\n        en: 'FeatureTypeList',\n        ti: '.FeatureTypeListType'\n      }]\n  };\n  return {\n    WFS_1_1_0: WFS_1_1_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], WFS_1_1_0_Module_Factory);\n}\nelse {\n  var WFS_1_1_0_Module = WFS_1_1_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.WFS_1_1_0 = WFS_1_1_0_Module.WFS_1_1_0;\n  }\n  else {\n    var WFS_1_1_0 = WFS_1_1_0_Module.WFS_1_1_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ogc-schemas/lib/WFS_1_1_0.js\n// module id = 481\n// module chunks = 4","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/requires-port/index.js\n// module id = 50\n// module chunks = 4 5 6","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  loc = loc || global.location || {};\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n      url.pathname = value.length && value.charAt(0) !== '/' ? '/' + value : value;\n\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url-parse/index.js\n// module id = 51\n// module chunks = 4 5 6","var XSD_1_0_Module_Factory = function () {\n  var XSD_1_0 = {\n    n: 'XSD_1_0',\n    dens: 'http:\\/\\/www.w3.org\\/2001\\/XMLSchema',\n    tis: [{\n        ln: 'Element',\n        tn: 'element',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleType',\n            rq: true,\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'complexType',\n            rq: true,\n            ti: '.LocalComplexType'\n          }, {\n            n: 'unique',\n            col: true,\n            ti: '.Keybase'\n          }, {\n            n: 'keyref',\n            col: true,\n            ti: '.Keyref'\n          }, {\n            n: 'key',\n            col: true,\n            ti: '.Keybase'\n          }, {\n            n: 'type',\n            ti: 'QName',\n            an: {\n              lp: 'type'\n            },\n            t: 'a'\n          }, {\n            n: 'substitutionGroup',\n            ti: 'QName',\n            an: {\n              lp: 'substitutionGroup'\n            },\n            t: 'a'\n          }, {\n            n: '_default',\n            an: {\n              lp: 'default'\n            },\n            t: 'a'\n          }, {\n            n: 'fixed',\n            an: {\n              lp: 'fixed'\n            },\n            t: 'a'\n          }, {\n            n: 'nillable',\n            ti: 'Boolean',\n            an: {\n              lp: 'nillable'\n            },\n            t: 'a'\n          }, {\n            n: '_abstract',\n            ti: 'Boolean',\n            an: {\n              lp: 'abstract'\n            },\n            t: 'a'\n          }, {\n            n: '_final',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'final'\n            },\n            t: 'a'\n          }, {\n            n: 'block',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'block'\n            },\n            t: 'a'\n          }, {\n            n: 'form',\n            ti: 'NMToken',\n            an: {\n              lp: 'form'\n            },\n            t: 'a'\n          }, {\n            n: 'minOccurs',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'minOccurs'\n            },\n            t: 'a'\n          }, {\n            n: 'maxOccurs',\n            an: {\n              lp: 'maxOccurs'\n            },\n            t: 'a'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: 'ref',\n            ti: 'QName',\n            an: {\n              lp: 'ref'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'NumFacet',\n        tn: 'numFacet',\n        bti: '.Facet'\n      }, {\n        ln: 'NoFixedFacet',\n        tn: 'noFixedFacet',\n        bti: '.Facet'\n      }, {\n        ln: 'Facet',\n        tn: 'facet',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'value',\n            rq: true,\n            ti: 'AnySimpleType',\n            an: {\n              lp: 'value'\n            },\n            t: 'a'\n          }, {\n            n: 'fixed',\n            ti: 'Boolean',\n            an: {\n              lp: 'fixed'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Wildcard',\n        tn: 'wildcard',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'namespace',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'processContents',\n            an: {\n              lp: 'processContents'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Attribute',\n        tn: 'attribute',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleType',\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'type',\n            ti: 'QName',\n            an: {\n              lp: 'type'\n            },\n            t: 'a'\n          }, {\n            n: 'use',\n            an: {\n              lp: 'use'\n            },\n            t: 'a'\n          }, {\n            n: '_default',\n            an: {\n              lp: 'default'\n            },\n            t: 'a'\n          }, {\n            n: 'fixed',\n            an: {\n              lp: 'fixed'\n            },\n            t: 'a'\n          }, {\n            n: 'form',\n            ti: 'NMToken',\n            an: {\n              lp: 'form'\n            },\n            t: 'a'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: 'ref',\n            ti: 'QName',\n            an: {\n              lp: 'ref'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'NarrowMaxMin',\n        tn: 'narrowMaxMin',\n        bti: '.LocalElement'\n      }, {\n        ln: 'Pattern',\n        tn: null,\n        bti: '.NoFixedFacet'\n      }, {\n        ln: 'LocalComplexType',\n        tn: 'localComplexType',\n        bti: '.ComplexType'\n      }, {\n        ln: 'Schema',\n        tn: null,\n        bti: '.OpenAttrs',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'include',\n            mno: 0,\n            col: true,\n            ti: '.Include'\n          }, {\n            n: '_import',\n            mno: 0,\n            col: true,\n            en: 'import',\n            ti: '.Import'\n          }, {\n            n: 'redefine',\n            mno: 0,\n            col: true,\n            ti: '.Redefine'\n          }, {\n            n: 'simpleType',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelSimpleType'\n          }, {\n            n: 'complexType',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelComplexType'\n          }, {\n            n: 'group',\n            mno: 0,\n            col: true,\n            ti: '.NamedGroup'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.NamedAttributeGroup'\n          }, {\n            n: 'element',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelElement'\n          }, {\n            n: 'attribute',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelAttribute'\n          }, {\n            n: 'notation',\n            mno: 0,\n            col: true,\n            ti: '.Notation'\n          }, {\n            n: 'annotation',\n            mno: 0,\n            col: true,\n            ti: '.Annotation'\n          }, {\n            n: 'targetNamespace',\n            an: {\n              lp: 'targetNamespace'\n            },\n            t: 'a'\n          }, {\n            n: 'version',\n            ti: 'Token',\n            an: {\n              lp: 'version'\n            },\n            t: 'a'\n          }, {\n            n: 'finalDefault',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'finalDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'blockDefault',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'blockDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'attributeFormDefault',\n            ti: 'NMToken',\n            an: {\n              lp: 'attributeFormDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'elementFormDefault',\n            ti: 'NMToken',\n            an: {\n              lp: 'elementFormDefault'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Selector',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'xpath',\n            rq: true,\n            an: {\n              lp: 'xpath'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LocalSimpleType',\n        tn: 'localSimpleType',\n        bti: '.SimpleType'\n      }, {\n        ln: 'TotalDigits',\n        tn: null,\n        bti: '.NumFacet'\n      }, {\n        ln: 'ExtensionType',\n        tn: 'extensionType',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'group',\n            rq: true,\n            ti: '.GroupRef'\n          }, {\n            n: 'all',\n            rq: true,\n            ti: '.All'\n          }, {\n            n: 'choice',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'sequence',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'attribute',\n            mno: 0,\n            col: true,\n            ti: '.Attribute'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.AttributeGroupRef'\n          }, {\n            n: 'anyAttribute',\n            ti: '.Wildcard'\n          }, {\n            n: 'base',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'base'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Documentation',\n        tn: null,\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'source',\n            an: {\n              lp: 'source'\n            },\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Appinfo',\n        tn: null,\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'source',\n            an: {\n              lp: 'source'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Annotation',\n        tn: null,\n        bti: '.OpenAttrs',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'appinfo',\n            mno: 0,\n            col: true,\n            ti: '.Appinfo'\n          }, {\n            n: 'documentation',\n            mno: 0,\n            col: true,\n            ti: '.Documentation'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'GroupRef',\n        tn: 'groupRef',\n        bti: '.RealGroup'\n      }, {\n        ln: 'Union',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleType',\n            mno: 0,\n            col: true,\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'memberTypes',\n            ti: {\n              t: 'l',\n              bti: 'QName'\n            },\n            an: {\n              lp: 'memberTypes'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'OpenAttrs',\n        tn: 'openAttrs',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }]\n      }, {\n        ln: 'RestrictionType',\n        tn: 'restrictionType',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'group',\n            rq: true,\n            ti: '.GroupRef'\n          }, {\n            n: 'all',\n            rq: true,\n            ti: '.All'\n          }, {\n            n: 'choice',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'sequence',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'simpleType',\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'minInclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'totalDigits',\n            col: true,\n            ti: '.TotalDigits'\n          }, {\n            n: 'minLength',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxLength',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxInclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'pattern',\n            col: true,\n            ti: '.Pattern'\n          }, {\n            n: 'enumeration',\n            col: true,\n            ti: '.NoFixedFacet'\n          }, {\n            n: 'minExclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'fractionDigits',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'length',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxExclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'whiteSpace',\n            col: true,\n            ti: '.WhiteSpace'\n          }, {\n            n: 'attribute',\n            mno: 0,\n            col: true,\n            ti: '.Attribute'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.AttributeGroupRef'\n          }, {\n            n: 'anyAttribute',\n            ti: '.Wildcard'\n          }, {\n            n: 'base',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'base'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SimpleExtensionType',\n        tn: 'simpleExtensionType',\n        bti: '.ExtensionType'\n      }, {\n        ln: 'Keyref',\n        tn: null,\n        bti: '.Keybase',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'refer',\n            rq: true,\n            ti: 'QName',\n            an: {\n              lp: 'refer'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ComplexRestrictionType',\n        tn: 'complexRestrictionType',\n        bti: '.RestrictionType'\n      }, {\n        ln: 'All',\n        tn: 'all',\n        bti: '.ExplicitGroup'\n      }, {\n        ln: 'Group',\n        tn: 'group',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'sequence',\n            col: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'all',\n            col: true,\n            ti: '.All'\n          }, {\n            n: 'choice',\n            col: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'any',\n            col: true,\n            ti: '.Any'\n          }, {\n            n: 'element',\n            col: true,\n            ti: '.LocalElement'\n          }, {\n            n: 'group',\n            col: true,\n            ti: '.GroupRef'\n          }, {\n            n: 'minOccurs',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'minOccurs'\n            },\n            t: 'a'\n          }, {\n            n: 'maxOccurs',\n            an: {\n              lp: 'maxOccurs'\n            },\n            t: 'a'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: 'ref',\n            ti: 'QName',\n            an: {\n              lp: 'ref'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'List',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleType',\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'itemType',\n            ti: 'QName',\n            an: {\n              lp: 'itemType'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Any',\n        tn: null,\n        bti: '.Wildcard',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'minOccurs',\n            ti: 'NonNegativeInteger',\n            an: {\n              lp: 'minOccurs'\n            },\n            t: 'a'\n          }, {\n            n: 'maxOccurs',\n            an: {\n              lp: 'maxOccurs'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopLevelSimpleType',\n        tn: 'topLevelSimpleType',\n        bti: '.SimpleType'\n      }, {\n        ln: 'Include',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'schemaLocation',\n            rq: true,\n            an: {\n              lp: 'schemaLocation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopLevelComplexType',\n        tn: 'topLevelComplexType',\n        bti: '.ComplexType'\n      }, {\n        ln: 'SimpleExplicitGroup',\n        tn: 'simpleExplicitGroup',\n        bti: '.ExplicitGroup'\n      }, {\n        ln: 'ComplexType',\n        tn: 'complexType',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleContent',\n            rq: true,\n            ti: '.SimpleContent'\n          }, {\n            n: 'complexContent',\n            rq: true,\n            ti: '.ComplexContent'\n          }, {\n            n: 'group',\n            rq: true,\n            ti: '.GroupRef'\n          }, {\n            n: 'all',\n            rq: true,\n            ti: '.All'\n          }, {\n            n: 'choice',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'sequence',\n            rq: true,\n            ti: '.ExplicitGroup'\n          }, {\n            n: 'attribute',\n            mno: 0,\n            col: true,\n            ti: '.Attribute'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.AttributeGroupRef'\n          }, {\n            n: 'anyAttribute',\n            ti: '.Wildcard'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: 'mixed',\n            ti: 'Boolean',\n            an: {\n              lp: 'mixed'\n            },\n            t: 'a'\n          }, {\n            n: '_abstract',\n            ti: 'Boolean',\n            an: {\n              lp: 'abstract'\n            },\n            t: 'a'\n          }, {\n            n: '_final',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'final'\n            },\n            t: 'a'\n          }, {\n            n: 'block',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'block'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'NamedGroup',\n        tn: 'namedGroup',\n        bti: '.RealGroup'\n      }, {\n        ln: 'NamedAttributeGroup',\n        tn: 'namedAttributeGroup',\n        bti: '.AttributeGroup'\n      }, {\n        ln: 'TopLevelAttribute',\n        tn: 'topLevelAttribute',\n        bti: '.Attribute'\n      }, {\n        ln: 'SimpleContent',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'restriction',\n            rq: true,\n            ti: '.SimpleRestrictionType'\n          }, {\n            n: 'extension',\n            rq: true,\n            ti: '.SimpleExtensionType'\n          }]\n      }, {\n        ln: 'Import',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'namespace',\n            an: {\n              lp: 'namespace'\n            },\n            t: 'a'\n          }, {\n            n: 'schemaLocation',\n            an: {\n              lp: 'schemaLocation'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Keybase',\n        tn: 'keybase',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'selector',\n            rq: true,\n            ti: '.Selector'\n          }, {\n            n: 'field',\n            rq: true,\n            col: true,\n            ti: '.Field'\n          }, {\n            n: 'name',\n            rq: true,\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Redefine',\n        tn: null,\n        bti: '.OpenAttrs',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'annotation',\n            mno: 0,\n            col: true,\n            ti: '.Annotation'\n          }, {\n            n: 'simpleType',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelSimpleType'\n          }, {\n            n: 'complexType',\n            mno: 0,\n            col: true,\n            ti: '.TopLevelComplexType'\n          }, {\n            n: 'group',\n            mno: 0,\n            col: true,\n            ti: '.NamedGroup'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.NamedAttributeGroup'\n          }, {\n            n: 'schemaLocation',\n            rq: true,\n            an: {\n              lp: 'schemaLocation'\n            },\n            t: 'a'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ExplicitGroup',\n        tn: 'explicitGroup',\n        bti: '.Group'\n      }, {\n        ln: 'SimpleType',\n        tn: 'simpleType',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'restriction',\n            rq: true,\n            ti: '.Restriction'\n          }, {\n            n: 'list',\n            rq: true,\n            ti: '.List'\n          }, {\n            n: 'union',\n            rq: true,\n            ti: '.Union'\n          }, {\n            n: '_final',\n            ti: {\n              t: 'l'\n            },\n            an: {\n              lp: 'final'\n            },\n            t: 'a'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'RealGroup',\n        tn: 'realGroup',\n        bti: '.Group'\n      }, {\n        ln: 'WhiteSpace',\n        tn: null,\n        bti: '.Facet'\n      }, {\n        ln: 'Field',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'xpath',\n            rq: true,\n            an: {\n              lp: 'xpath'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'AttributeGroupRef',\n        tn: 'attributeGroupRef',\n        bti: '.AttributeGroup'\n      }, {\n        ln: 'AttributeGroup',\n        tn: 'attributeGroup',\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'attribute',\n            mno: 0,\n            col: true,\n            ti: '.Attribute'\n          }, {\n            n: 'attributeGroup',\n            mno: 0,\n            col: true,\n            ti: '.AttributeGroupRef'\n          }, {\n            n: 'anyAttribute',\n            ti: '.Wildcard'\n          }, {\n            n: 'name',\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: 'ref',\n            ti: 'QName',\n            an: {\n              lp: 'ref'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Annotated',\n        tn: 'annotated',\n        bti: '.OpenAttrs',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'annotation',\n            ti: '.Annotation'\n          }, {\n            n: 'id',\n            ti: 'ID',\n            an: {\n              lp: 'id'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'Notation',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'name',\n            rq: true,\n            ti: 'NCName',\n            an: {\n              lp: 'name'\n            },\n            t: 'a'\n          }, {\n            n: '_public',\n            ti: 'Token',\n            an: {\n              lp: 'public'\n            },\n            t: 'a'\n          }, {\n            n: 'system',\n            an: {\n              lp: 'system'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'TopLevelElement',\n        tn: 'topLevelElement',\n        bti: '.Element'\n      }, {\n        ln: 'Restriction',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'simpleType',\n            ti: '.LocalSimpleType'\n          }, {\n            n: 'minInclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'totalDigits',\n            col: true,\n            ti: '.TotalDigits'\n          }, {\n            n: 'minLength',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxLength',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxInclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'pattern',\n            col: true,\n            ti: '.Pattern'\n          }, {\n            n: 'enumeration',\n            col: true,\n            ti: '.NoFixedFacet'\n          }, {\n            n: 'minExclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'fractionDigits',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'length',\n            col: true,\n            ti: '.NumFacet'\n          }, {\n            n: 'maxExclusive',\n            col: true,\n            ti: '.Facet'\n          }, {\n            n: 'whiteSpace',\n            col: true,\n            ti: '.WhiteSpace'\n          }, {\n            n: 'base',\n            ti: 'QName',\n            an: {\n              lp: 'base'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'SimpleRestrictionType',\n        tn: 'simpleRestrictionType',\n        bti: '.RestrictionType'\n      }, {\n        ln: 'ComplexContent',\n        tn: null,\n        bti: '.Annotated',\n        ps: [{\n            n: 'otherAttributes',\n            t: 'aa'\n          }, {\n            n: 'restriction',\n            rq: true,\n            ti: '.ComplexRestrictionType'\n          }, {\n            n: 'extension',\n            rq: true,\n            ti: '.ExtensionType'\n          }, {\n            n: 'mixed',\n            ti: 'Boolean',\n            an: {\n              lp: 'mixed'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'LocalElement',\n        tn: 'localElement',\n        bti: '.Element'\n      }, {\n        t: 'enum',\n        ln: 'ReducedDerivationControl',\n        bti: 'NMToken',\n        vs: ['extension', 'restriction']\n      }, {\n        t: 'enum',\n        ln: 'DerivationControl',\n        bti: 'NMToken',\n        vs: ['substitution', 'extension', 'restriction', 'list', 'union']\n      }, {\n        t: 'enum',\n        ln: 'TypeDerivationControl',\n        bti: 'NMToken',\n        vs: ['extension', 'restriction', 'list', 'union']\n      }, {\n        t: 'enum',\n        ln: 'FormChoice',\n        bti: 'NMToken',\n        vs: ['qualified', 'unqualified']\n      }],\n    eis: [{\n        en: 'unique',\n        ti: '.Keybase'\n      }, {\n        en: 'attributeGroup',\n        ti: '.NamedAttributeGroup'\n      }, {\n        en: 'annotation',\n        ti: '.Annotation'\n      }, {\n        en: 'all',\n        ti: '.All'\n      }, {\n        en: 'complexContent',\n        ti: '.ComplexContent'\n      }, {\n        en: 'list',\n        ti: '.List'\n      }, {\n        en: 'maxExclusive',\n        ti: '.Facet'\n      }, {\n        en: 'anyAttribute',\n        ti: '.Wildcard'\n      }, {\n        en: 'notation',\n        ti: '.Notation'\n      }, {\n        en: 'simpleType',\n        ti: '.TopLevelSimpleType'\n      }, {\n        en: 'include',\n        ti: '.Include'\n      }, {\n        en: 'restriction',\n        ti: '.Restriction'\n      }, {\n        en: 'redefine',\n        ti: '.Redefine'\n      }, {\n        en: 'maxInclusive',\n        ti: '.Facet'\n      }, {\n        en: 'minExclusive',\n        ti: '.Facet'\n      }, {\n        en: 'schema',\n        ti: '.Schema'\n      }, {\n        en: 'complexType',\n        ti: '.TopLevelComplexType'\n      }, {\n        en: 'element',\n        ti: '.LocalElement',\n        sc: '.Group'\n      }, {\n        en: 'appinfo',\n        ti: '.Appinfo'\n      }, {\n        en: 'totalDigits',\n        ti: '.TotalDigits'\n      }, {\n        en: 'choice',\n        ti: '.ExplicitGroup'\n      }, {\n        en: 'selector',\n        ti: '.Selector'\n      }, {\n        en: 'import',\n        ti: '.Import'\n      }, {\n        en: 'minLength',\n        ti: '.NumFacet'\n      }, {\n        en: 'simpleContent',\n        ti: '.SimpleContent'\n      }, {\n        en: 'keyref',\n        ti: '.Keyref'\n      }, {\n        en: 'element',\n        ti: '.TopLevelElement'\n      }, {\n        en: 'length',\n        ti: '.NumFacet'\n      }, {\n        en: 'group',\n        ti: '.NamedGroup'\n      }, {\n        en: 'maxLength',\n        ti: '.NumFacet'\n      }, {\n        en: 'fractionDigits',\n        ti: '.NumFacet'\n      }, {\n        en: 'enumeration',\n        ti: '.NoFixedFacet'\n      }, {\n        en: 'group',\n        ti: '.GroupRef',\n        sc: '.Group'\n      }, {\n        en: 'key',\n        ti: '.Keybase'\n      }, {\n        en: 'whiteSpace',\n        ti: '.WhiteSpace'\n      }, {\n        en: 'union',\n        ti: '.Union'\n      }, {\n        en: 'documentation',\n        ti: '.Documentation'\n      }, {\n        en: 'field',\n        ti: '.Field'\n      }, {\n        en: 'minInclusive',\n        ti: '.Facet'\n      }, {\n        en: 'sequence',\n        ti: '.ExplicitGroup'\n      }, {\n        en: 'attribute',\n        ti: '.TopLevelAttribute'\n      }, {\n        en: 'pattern',\n        ti: '.Pattern'\n      }, {\n        en: 'any',\n        ti: '.Any'\n      }]\n  };\n  return {\n    XSD_1_0: XSD_1_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], XSD_1_0_Module_Factory);\n}\nelse {\n  var XSD_1_0_Module = XSD_1_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.XSD_1_0 = XSD_1_0_Module.XSD_1_0;\n  }\n  else {\n    var XSD_1_0 = XSD_1_0_Module.XSD_1_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/w3c-schemas/lib/XSD_1_0.js\n// module id = 607\n// module chunks = 4","import Events from './events/Events.jsx';\r\nimport FieldSet from './components/FieldSet.jsx';\r\nimport MapConfigService from 'boundless-sdk/services/MapConfigService';\r\nimport MapConfigTransformService from 'boundless-sdk/services/MapConfigTransformService';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ol from 'openlayers';\r\n\r\nclass MapWidget extends BaseWidget {\r\n    static displayName = \"Map\";\r\n    constructor(props) {\r\n        super(props);\r\n        this.loaded = false;\r\n        this.map = new ol.Map({\r\n            //controls: [new ol.control.Attribution({collapsible: false}), new ol.control.ScaleLine()],\r\n            layers: [\r\n                new ol.layer.Tile({title: 'OpenStreetMap', source: new ol.source.OSM()})\r\n            ],\r\n            view: new ol.View({center: [0, 0], zoom: 3})\r\n        });\r\n        this.map.on('moveend', () => {\r\n            var extent = this.map.getView().calculateExtent( this.map.getSize() );\r\n            var eventName = 'mapExtentChanged' + '_' + this.props.id;\r\n            Events.emit(eventName, this.map, extent, this);\r\n        });\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n      if(this.state.config != nextState.config ){\r\n        this.update(nextState.config);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    update(config) {\r\n        if (config && config.mapId) {\r\n            var url = getMapConfigUrl(config.mapId);\r\n            fetch(url,{\r\n              method: \"GET\",\r\n              credentials: 'include'\r\n            }).then((response) => {\r\n                if(response.status == 200) {\r\n                    return response.json();\r\n                }\r\n            }).then((config) => {\r\n                if(config) {\r\n                    MapConfigService.load(MapConfigTransformService.transform(config), this.map,URLS.proxy);\r\n                    this.ready = true;\r\n                    Events.emit('mapReady' + '_' + this.props.id, this.map, this);\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    componentWillMount() {\r\n      this.update(this.state.config);\r\n    }\r\n    componentDidMount(){\r\n      this.map.setTarget(ReactDOM.findDOMNode(this.refs.map));\r\n    }\r\n    render() {\r\n        return (<div ref=\"map\" className='map-ct'></div>);\r\n    }\r\n}\r\n\r\nclass MapWidgetConfigForm extends FieldSet {\r\n  constructor(props){\r\n    super(props)\r\n    this.state.maps = [];\r\n  }\r\n  getSchema(props){\r\n    return {\r\n      mapId: {\r\n        type:'select',\r\n        options: {}\r\n      }\r\n    };\r\n  }\r\n  getInitialData(props){\r\n    return props.widget.getConfig();\r\n  }\r\n  getSelectOptions(name, config, value){\r\n      return this.state.maps.map(m => <option value={m.id}>{m.title}</option>);\r\n  }\r\n  componentWillMount(){\r\n    getMapsData().then(res => this.setState({maps:res.objects}) );\r\n  }\r\n}\r\n\r\n\r\nMapWidget.ConfigForm = MapWidgetConfigForm;\r\n\r\n\r\nDashboard.registerWidget(MapWidget);\r\nexport default MapWidget;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/map-widget.jsx","var _jsonix_factory = function(_jsonix_xmldom, _jsonix_xmlhttprequest, _jsonix_fs)\r\n{\r\n\t// Complete Jsonix script is included below \nvar Jsonix = {\r\n\tsingleFile : true\r\n};\nJsonix.Util = {};\r\n\r\nJsonix.Util.extend = function(destination, source) {\r\n\tdestination = destination || {};\r\n\tif (source) {\r\n\t\t/*jslint forin: true */\r\n\t\tfor ( var property in source) {\r\n\t\t\tvar value = source[property];\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tdestination[property] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * IE doesn't include the toString property when iterating over an\r\n\t\t * object's properties with the for(property in object) syntax.\r\n\t\t * Explicitly check if the source has its own toString property.\r\n\t\t */\r\n\r\n\t\t/*\r\n\t\t * FF/Windows < 2.0.0.13 reports \"Illegal operation on WrappedNative\r\n\t\t * prototype object\" when calling hawOwnProperty if the source object is\r\n\t\t * an instance of window.Event.\r\n\t\t */\r\n\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tsourceIsEvt = typeof window !== 'undefined' && window !== null && typeof window.Event === \"function\" && source instanceof window.Event;\r\n\r\n\t\tif (!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {\r\n\t\t\tdestination.toString = source.toString;\r\n\t\t}\r\n\t}\r\n\treturn destination;\r\n};\nJsonix.Class = function() {\r\n\tvar Class = function() {\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t};\r\n\tvar extended = {};\r\n\tvar empty = function() {\r\n\t};\r\n\tvar parent, initialize, Type;\r\n\tfor (var i = 0, len = arguments.length; i < len; ++i) {\r\n\t\tType = arguments[i];\r\n\t\tif (typeof Type == \"function\") {\r\n\t\t\t// make the class passed as the first argument the superclass\r\n\t\t\tif (i === 0 && len > 1) {\r\n\t\t\t\tinitialize = Type.prototype.initialize;\r\n\t\t\t\t// replace the initialize method with an empty function,\r\n\t\t\t\t// because we do not want to create a real instance here\r\n\t\t\t\tType.prototype.initialize = empty;\r\n\t\t\t\t// the line below makes sure that the new class has a\r\n\t\t\t\t// superclass\r\n\t\t\t\textended = new Type();\r\n\t\t\t\t// restore the original initialize method\r\n\t\t\t\tif (initialize === undefined) {\r\n\t\t\t\t\tdelete Type.prototype.initialize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tType.prototype.initialize = initialize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// get the prototype of the superclass\r\n\t\t\tparent = Type.prototype;\r\n\t\t} else {\r\n\t\t\t// in this case we're extending with the prototype\r\n\t\t\tparent = Type;\r\n\t\t}\r\n\t\tJsonix.Util.extend(extended, parent);\r\n\t}\r\n\tClass.prototype = extended;\r\n\treturn Class;\r\n};\r\n\nJsonix.XML = {\r\n\t\tXMLNS_NS : 'http://www.w3.org/2000/xmlns/',\r\n\t\tXMLNS_P : 'xmlns'\r\n};\r\n\r\n\nJsonix.DOM = {\r\n\tisDomImplementationAvailable : function () {\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t} else if (typeof document !== 'undefined' && Jsonix.Util.Type.exists(document.implementation) && Jsonix.Util.Type.isFunction(document.implementation.createDocument)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tcreateDocument : function() {\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn new (_jsonix_xmldom.DOMImplementation)().createDocument();\r\n\t\t} else if (typeof document !== 'undefined' && Jsonix.Util.Type.exists(document.implementation) && Jsonix.Util.Type.isFunction(document.implementation.createDocument)) {\r\n\t\t\treturn document.implementation.createDocument('', '', null);\r\n\t\t} else if (typeof ActiveXObject !== 'undefined') {\r\n\t\t\treturn new ActiveXObject('MSXML2.DOMDocument');\r\n\t\t} else {\r\n\t\t\tthrow new Error('Error created the DOM document.');\r\n\t\t}\r\n\t},\r\n\tserialize : function(node) {\r\n\t\tJsonix.Util.Ensure.ensureExists(node);\r\n\t\t// REWORK\r\n\t\t// Node.js\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn (new (_jsonix_xmldom).XMLSerializer()).serializeToString(node);\r\n\t\t} else if (Jsonix.Util.Type.exists(XMLSerializer)) {\r\n\t\t\treturn (new XMLSerializer()).serializeToString(node);\r\n\t\t} else if (Jsonix.Util.Type.exists(node.xml)) {\r\n\t\t\treturn node.xml;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Could not serialize the node, neither XMLSerializer nor the [xml] property were found.');\r\n\t\t}\r\n\t},\r\n\tparse : function(text) {\r\n\t\tJsonix.Util.Ensure.ensureExists(text);\r\n\t\tif (typeof _jsonix_xmldom !== 'undefined')\r\n\t\t{\r\n\t\t\treturn (new (_jsonix_xmldom).DOMParser()).parseFromString(text, 'application/xml');\r\n\t\t} else if (typeof DOMParser != 'undefined') {\r\n\t\t\treturn (new DOMParser()).parseFromString(text, 'application/xml');\r\n\t\t} else if (typeof ActiveXObject != 'undefined') {\r\n\t\t\tvar doc = Jsonix.DOM.createDocument('', '');\r\n\t\t\tdoc.loadXML(text);\r\n\t\t\treturn doc;\r\n\t\t} else {\r\n\t\t\tvar url = 'data:text/xml;charset=utf-8,' + encodeURIComponent(text);\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open('GET', url, false);\r\n\t\t\tif (request.overrideMimeType) {\r\n\t\t\t\trequest.overrideMimeType(\"text/xml\");\r\n\t\t\t}\r\n\t\t\trequest.send(null);\r\n\t\t\treturn request.responseXML;\r\n\t\t}\r\n\t},\r\n\tload : function(url, callback, options) {\r\n\r\n\t\tvar request = Jsonix.Request.INSTANCE;\r\n\r\n\t\trequest.issue(\r\n\t\t\t\t\t\turl,\r\n\t\t\t\t\t\tfunction(transport) {\r\n\t\t\t\t\t\t\tvar result;\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type.exists(transport.responseXML) && Jsonix.Util.Type.exists(transport.responseXML.documentElement)) {\r\n\t\t\t\t\t\t\t\tresult = transport.responseXML;\r\n\t\t\t\t\t\t\t} else if (Jsonix.Util.Type.isString(transport.responseText)) {\r\n\t\t\t\t\t\t\t\tresult = Jsonix.DOM.parse(transport.responseText);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Response does not have valid [responseXML] or [responseText].');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcallback(result);\r\n\r\n\t\t\t\t\t\t}, function(transport) {\r\n\t\t\t\t\t\t\tthrow new Error('Could not retrieve XML from URL [' + url\t+ '].');\r\n\r\n\t\t\t\t\t\t}, options);\r\n\t},\r\n\txlinkFixRequired : null,\r\n\tisXlinkFixRequired : function ()\r\n\t{\r\n\t\tif (Jsonix.DOM.xlinkFixRequired === null)\r\n\t\t{\r\n\t\t\tif (typeof navigator === 'undefined')\r\n\t\t\t{\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = false;\r\n\t\t\t}\r\n\t\t\telse if (!!navigator.userAgent && (/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)))\r\n\t\t\t{\r\n\t\t\t\tvar doc = Jsonix.DOM.createDocument();\r\n\t\t\t\tvar el = doc.createElement('test');\r\n\t\t\t\tel.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', 'urn:test');\r\n\t\t\t\tdoc.appendChild(el);\r\n\t\t\t\tvar testString = Jsonix.DOM.serialize(doc);\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = (testString.indexOf('xmlns:xlink') === -1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tJsonix.DOM.xlinkFixRequired = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Jsonix.DOM.xlinkFixRequired;\r\n\t}\r\n};\nJsonix.Request = Jsonix\r\n\t\t.Class({\r\n\t\t\t// REWORK\r\n\t\t\tfactories : [ function() {\r\n\t\t\t\treturn new XMLHttpRequest();\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject('Msxml2.XMLHTTP');\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\r\n\t\t\t}, function() {\r\n\t\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\t\t}, function() {\r\n\t\t\t\t// Node.js\r\n\t\t\t\tif (typeof _jsonix_xmlhttprequest !== 'undefined')\r\n\t\t\t\t{\r\n\t\t\t\t\tvar XMLHttpRequest = _jsonix_xmlhttprequest.XMLHttpRequest;\r\n\t\t\t\t\treturn new XMLHttpRequest();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tinitialize : function() {\r\n\t\t\t},\r\n\t\t\tissue : function(url, onSuccess, onFailure, options) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(url);\r\n\t\t\t\tif (Jsonix.Util.Type.exists(onSuccess)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(onSuccess);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonSuccess = function() {\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.exists(onFailure)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(onFailure);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tonFailure = function() {\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar transport = this.createTransport();\r\n\r\n\t\t\t\tvar method = Jsonix.Util.Type.isString(options.method) ? options.method\r\n\t\t\t\t\t\t: 'GET';\r\n\t\t\t\tvar async = Jsonix.Util.Type.isBoolean(options.async) ? options.async\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\tvar proxy = Jsonix.Util.Type.isString(options.proxy) ? options.proxy\r\n\t\t\t\t\t\t: Jsonix.Request.PROXY;\r\n\r\n\t\t\t\tvar user = Jsonix.Util.Type.isString(options.user) ? options.user\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tvar password = Jsonix.Util.Type.isString(options.password) ? options.password\r\n\t\t\t\t\t\t: null;\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isString(proxy) && (url.indexOf(\"http\") === 0)) {\r\n\t\t\t\t\turl = proxy + encodeURIComponent(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isString(user)) {\r\n\t\t\t\t\ttransport.open(method, url, async, user, password);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttransport.open(method, url, async);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(options.headers)) {\r\n\r\n\t\t\t\t\tfor ( var header in options.headers) {\r\n\t\t\t\t\t\tif (options.headers.hasOwnProperty(header)) {\r\n\t\t\t\t\t\t\ttransport.setRequestHeader(header,\r\n\t\t\t\t\t\t\t\t\toptions.headers[header]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar data = Jsonix.Util.Type.exists(options.data) ? options.data\r\n\t\t\t\t\t\t: null;\r\n\t\t\t\tif (!async) {\r\n\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\tthis.handleTransport(transport, onSuccess, onFailure);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar that = this;\r\n\t\t\t\t\tif (typeof window !== 'undefined') {\r\n\r\n\t\t\t\t\t\ttransport.onreadystatechange = function() {\r\n\t\t\t\t\t\t\tthat.handleTransport(transport, onSuccess,\r\n\t\t\t\t\t\t\t\t\tonFailure);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttransport.onreadystatechange = function() {\r\n\t\t\t\t\t\t\tthat.handleTransport(transport, onSuccess, onFailure);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\ttransport.send(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn transport;\r\n\r\n\t\t\t},\r\n\t\t\thandleTransport : function(transport, onSuccess, onFailure) {\r\n\t\t\t\tif (transport.readyState == 4) {\r\n\t\t\t\t\tif (!transport.status || (transport.status >= 200 && transport.status < 300)) {\r\n\t\t\t\t\t\tonSuccess(transport);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (transport.status && (transport.status < 200 || transport.status >= 300)) {\r\n\t\t\t\t\t\tonFailure(transport);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcreateTransport : function() {\r\n\t\t\t\tfor ( var index = 0, length = this.factories.length; index < length; index++) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar transport = this.factories[index]();\r\n\t\t\t\t\t\tif (transport !== null) {\r\n\t\t\t\t\t\t\treturn transport;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO log\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Could not create XML HTTP transport.');\r\n\t\t\t},\r\n\t\t\tCLASS_NAME : 'Jsonix.Request'\r\n\t\t});\r\nJsonix.Request.INSTANCE = new Jsonix.Request();\r\nJsonix.Request.PROXY = null;\nJsonix.Schema = {};\nJsonix.Model = {};\nJsonix.Util.Type = {\r\n\texists : function(value) {\r\n\t\treturn (typeof value !== 'undefined' && value !== null);\r\n\t},\r\n\tisUndefined : function(value) {\r\n\t\treturn typeof value === 'undefined';\r\n\t},\r\n\tisString : function(value) {\r\n\t\treturn typeof value === 'string';\r\n\t},\r\n\tisBoolean : function(value) {\r\n\t\treturn typeof value === 'boolean';\r\n\t},\r\n\tisObject : function(value) {\r\n\t\treturn typeof value === 'object';\r\n\t},\r\n\tisFunction : function(value) {\r\n\t\treturn typeof value === 'function';\r\n\t},\r\n\tisNumber : function(value) {\r\n\t\treturn (typeof value === 'number') && !isNaN(value);\r\n\t},\r\n\tisNumberOrNaN : function(value) {\r\n\t\treturn (value === +value) || (Object.prototype.toString.call(value) === '[object Number]');\r\n\t},\r\n\tisNaN : function(value) {\r\n\t\treturn Jsonix.Util.Type.isNumberOrNaN(value) && isNaN(value);\r\n\t},\r\n\tisArray : function(value) {\r\n\t\t// return value instanceof Array;\r\n\t\treturn !!(value && value.concat && value.unshift && !value.callee);\r\n\t},\r\n\tisDate : function(value) {\r\n\t\treturn !!(value && value.getTimezoneOffset && value.setUTCFullYear);\r\n\t},\r\n\tisRegExp : function(value) {\r\n\t\treturn !!(value && value.test && value.exec && (value.ignoreCase || value.ignoreCase === false));\r\n\t},\r\n\tisNode : function(value) {\r\n\t\treturn (typeof Node === \"object\" || typeof Node === \"function\") ? (value instanceof Node) : (value && (typeof value === \"object\") && (typeof value.nodeType === \"number\") && (typeof value.nodeName===\"string\"));\r\n\t},\r\n\tisEqual : function(a, b, report) {\r\n\t\tvar doReport = Jsonix.Util.Type.isFunction(report);\r\n\t\t// TODO rework\r\n\t\tvar _range = function(start, stop, step) {\r\n\t\t\tvar args = slice.call(arguments);\r\n\t\t\tvar solo = args.length <= 1;\r\n\t\t\tvar start_ = solo ? 0 : args[0];\r\n\t\t\tvar stop_ = solo ? args[0] : args[1];\r\n\t\t\tvar step_ = args[2] || 1;\r\n\t\t\tvar len = Math.max(Math.ceil((stop_ - start_) / step_), 0);\r\n\t\t\tvar idx = 0;\r\n\t\t\tvar range = new Array(len);\r\n\t\t\twhile (idx < len) {\r\n\t\t\t\trange[idx++] = start_;\r\n\t\t\t\tstart_ += step_;\r\n\t\t\t}\r\n\t\t\treturn range;\r\n\t\t};\r\n\r\n\t\tvar _keys = Object.keys || function(obj) {\r\n\t\t\tif (Jsonix.Util.Type.isArray(obj)) {\r\n\t\t\t\treturn _range(0, obj.length);\r\n\t\t\t}\r\n\t\t\tvar keys = [];\r\n\t\t\tfor ( var key in obj) {\r\n\t\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tkeys[keys.length] = key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t};\r\n\r\n\t\t// Check object identity.\r\n\t\tif (a === b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Check if both are NaNs\r\n\t\tif (Jsonix.Util.Type.isNaN(a) && Jsonix.Util.Type.isNaN(b)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// Different types?\r\n\t\tvar atype = typeof a;\r\n\t\tvar btype = typeof b;\r\n\t\tif (atype != btype) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('Types differ [' + atype + '], [' + btype + '].');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Basic equality test (watch out for coercions).\r\n\t\tif (a == b) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// One is falsy and the other truthy.\r\n\t\tif ((!a && b) || (a && !b)) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('One is falsy, the other is truthy.');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check dates' integer values.\r\n\t\tif (Jsonix.Util.Type.isDate(a) && Jsonix.Util.Type.isDate(b)) {\r\n\t\t\treturn a.getTime() === b.getTime();\r\n\t\t}\r\n\t\t// Both are NaN?\r\n\t\tif (Jsonix.Util.Type.isNaN(a) && Jsonix.Util.Type.isNaN(b)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Compare regular expressions.\r\n\t\tif (Jsonix.Util.Type.isRegExp(a) && Jsonix.Util.Type.isRegExp(b)) {\r\n\t\t\treturn a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline;\r\n\t\t}\r\n\t\t\r\n\t\tif (Jsonix.Util.Type.isNode(a) && Jsonix.Util.Type.isNode(b))\r\n\t\t{\r\n\t\t\tvar aSerialized = Jsonix.DOM.serialize(a);\r\n\t\t\tvar bSerialized = Jsonix.DOM.serialize(b);\r\n\t\t\tif (aSerialized !== bSerialized)\r\n\t\t\t{\r\n\t\t\t\tif (doReport)\r\n\t\t\t\t{\r\n\t\t\t\t\treport('Nodes differ.');\r\n\t\t\t\t\treport('A=' + aSerialized);\r\n\t\t\t\t\treport('B=' + bSerialized);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If a is not an object by this point, we can't handle it.\r\n\t\tif (atype !== 'object') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check for different array lengths before comparing contents.\r\n\t\tif (Jsonix.Util.Type.isArray(a) && (a.length !== b.length)) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\t\treport('Lengths differ.');\r\n\t\t\t\t\treport('A.length=' + a.length);\r\n\t\t\t\t\treport('B.length=' + b.length);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Nothing else worked, deep compare the contents.\r\n\t\tvar aKeys = _keys(a);\r\n\t\tvar bKeys = _keys(b);\r\n\t\t// Different object sizes?\r\n\t\tif (aKeys.length !== bKeys.length) {\r\n\t\t\tif (doReport) {\r\n\t\t\t\treport('Different number of properties [' + aKeys.length + '], [' + bKeys.length + '].');\r\n\t\t\t}\r\n\t\t\tfor ( var andex = 0; andex < aKeys.length; andex++) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('A [' + aKeys[andex] + ']=' + a[aKeys[andex]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor ( var bndex = 0; bndex < bKeys.length; bndex++) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('B [' + bKeys[bndex] + ']=' + b[bKeys[bndex]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Recursive comparison of contents.\r\n\t\tfor (var kndex = 0; kndex < aKeys.length; kndex++) {\r\n\t\t\tvar key = aKeys[kndex];\r\n\t\t\tif (!(key in b) || !Jsonix.Util.Type.isEqual(a[key], b[key], report)) {\r\n\t\t\t\tif (doReport) {\r\n\t\t\t\t\treport('One of the properties differ.');\r\n\t\t\t\t\treport('Key: [' + key + '].');\r\n\t\t\t\t\treport('Left: [' + a[key] + '].');\r\n\t\t\t\t\treport('Right: [' + b[key] + '].');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tcloneObject : function (source, target)\r\n\t{\r\n\t\ttarget = target || {};\r\n\t\tfor (var p in source)\r\n\t\t{\r\n\t\t\tif (source.hasOwnProperty(p))\r\n\t\t\t{\r\n\t\t\t\ttarget[p] = source[p];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t},\r\n\tdefaultValue : function()\r\n\t{\r\n\t\tvar args = arguments;\r\n\t\tif (args.length === 0)\r\n\t\t{\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar defaultValue = args[args.length - 1];\r\n\t\t\tvar typeOfDefaultValue = typeof defaultValue;\r\n\t\t\tfor (var index = 0; index < args.length - 1; index++)\r\n\t\t\t{\r\n\t\t\t\tvar candidateValue = args[index];\r\n\t\t\t\tif (typeof candidateValue === typeOfDefaultValue)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn candidateValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn defaultValue;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n};\nJsonix.Util.NumberUtils = {\r\n\tisInteger : function(value) {\r\n\t\treturn Jsonix.Util.Type.isNumber(value) && ((value % 1) === 0);\r\n\t}\r\n};\nJsonix.Util.StringUtils = {\r\n\ttrim : (!!String.prototype.trim) ?\r\n\tfunction(str) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\treturn str.trim();\r\n\t} :\r\n\tfunction(str) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\treturn str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n\t},\r\n\t/* isEmpty : function(str) {\r\n\t\tvar wcm = Jsonix.Util.StringUtils.whitespaceCharactersMap;\r\n\t\tfor (var index = 0; index < str.length; index++)\r\n\t\t{\r\n\t\t\tif (!wcm[str[index]])\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}, */\r\n\tisEmpty : function(str) {\r\n\t\tvar length = str.length;\r\n\t\tif (!length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var index = 0; index < length; index++)\r\n\t\t{\r\n\t\t\tvar c = str[index];\r\n\t\t\tif (c === ' ')\r\n\t\t\t{\r\n\t\t\t\t// skip\r\n\t\t\t}\r\n\t\t\telse if (c > '\\u000D' && c < '\\u0085')\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse if (c < '\\u00A0')\r\n\t\t\t{\r\n\t\t\t\tif (c < '\\u0009')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (c > '\\u0085')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (c > '\\u00A0')\r\n\t\t\t{\r\n\t\t\t\tif (c < '\\u2028')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (c < '\\u180E')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u1680')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(c > '\\u1680')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (c > '\\u180E')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u2000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u200A')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (c > '\\u2029')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (c < '\\u205F')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u202F')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u202F')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (c > '\\u205F')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (c < '\\u3000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c > '\\u3000')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisNotBlank : function(str) {\r\n\t\treturn Jsonix.Util.Type.isString(str) && !Jsonix.Util.StringUtils.isEmpty(str);\r\n\t},\r\n\twhitespaceCharacters: '\\u0009\\u000A\\u000B\\u000C\\u000D \\u0085\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000',\r\n\twhitespaceCharactersMap: {\r\n\t\t'\\u0009' : true,\r\n\t\t'\\u000A' : true,\r\n\t\t'\\u000B' : true,\r\n\t\t'\\u000C' : true,\r\n\t\t'\\u000D' : true,\r\n\t\t' ' : true,\r\n\t\t'\\u0085' : true,\r\n\t\t'\\u00A0' : true,\r\n\t\t'\\u1680' : true,\r\n\t\t'\\u180E' : true,\r\n\t\t'\\u2000' : true,\r\n\t\t'\\u2001' : true,\r\n\t\t'\\u2002' : true,\r\n\t\t'\\u2003' : true,\r\n\t\t'\\u2004' : true,\r\n\t\t'\\u2005' : true,\r\n\t\t'\\u2006' : true,\r\n\t\t'\\u2007' : true,\r\n\t\t'\\u2008' : true,\r\n\t\t'\\u2009' : true,\r\n\t\t'\\u200A' : true,\r\n\t\t'\\u2028' : true,\r\n\t\t'\\u2029' : true,\r\n\t\t'\\u202F' : true,\r\n\t\t'\\u205F' : true,\r\n\t\t'\\u3000' : true\r\n\t},\r\n\tsplitBySeparatorChars : function(str, separatorChars) {\r\n\t\tJsonix.Util.Ensure.ensureString(str);\r\n\t\tJsonix.Util.Ensure.ensureString(separatorChars);\r\n\t\tvar len = str.length;\r\n\t\tif (len === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tif (separatorChars.length === 1)\r\n\t\t{\r\n\t\t\treturn str.split(separatorChars);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar list = [];\r\n\t\t\tvar sizePlus1 = 1;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar start = 0;\r\n\t\t\tvar match = false;\r\n\t\t\tvar lastMatch = false;\r\n\t\t\tvar max = -1;\r\n\t\t\tvar preserveAllTokens = false;\r\n\t\t\t// standard case\r\n\t\t\t\twhile (i < len) {\r\n\t\t\t\t\t\tif (separatorChars.indexOf(str.charAt(i)) >= 0) {\r\n\t\t\t\t\t\t\t\tif (match || preserveAllTokens) {\r\n\t\t\t\t\t\t\t\t\t\tlastMatch = true;\r\n\t\t\t\t\t\t\t\t\t\tif (sizePlus1++ == max) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = len;\r\n\t\t\t\t\t\t\t\t\t\t\t\tlastMatch = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlist.push(str.substring(start, i));\r\n\t\t\t\t\t\t\t\t\t\tmatch = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstart = ++i;\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastMatch = false;\r\n\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (match || (preserveAllTokens && lastMatch)) {\r\n\t\t\t\t\tlist.push(str.substring(start, i));\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n};\nJsonix.Util.Ensure = {\r\n\tensureBoolean : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isBoolean(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a boolean.');\r\n\t\t}\r\n\t},\r\n\tensureString : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isString(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a string.');\r\n\t\t}\r\n\t},\r\n\tensureNumber : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumber(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a number.');\r\n\t\t}\r\n\t},\r\n\tensureNumberOrNaN : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumberOrNaN(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a number or NaN.');\r\n\t\t}\r\n\t},\r\n\tensureInteger : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isNumber(value)) {\r\n\t\t\tthrow new Error('Argument must be an integer, but it is not a number.');\r\n\t\t} else if (!Jsonix.Util.NumberUtils.isInteger(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an integer.');\r\n\t\t}\r\n\t},\r\n\tensureDate : function(value) {\r\n\t\tif (!(value instanceof Date)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a date.');\r\n\t\t}\r\n\t},\r\n\tensureObject : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isObject(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an object.');\r\n\t\t}\r\n\t},\r\n\tensureArray : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isArray(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be an array.');\r\n\t\t}\r\n\t},\r\n\tensureFunction : function(value) {\r\n\t\tif (!Jsonix.Util.Type.isFunction(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] must be a function.');\r\n\t\t}\r\n\t},\r\n\tensureExists : function(value) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\tthrow new Error('Argument [' + value + '] does not exist.');\r\n\t\t}\r\n\t}\r\n};\nJsonix.XML.QName = Jsonix.Class({\r\n\tkey : null,\r\n\tnamespaceURI : null,\r\n\tlocalPart : null,\r\n\tprefix : null,\r\n\tstring : null,\r\n\tinitialize : function(one, two, three) {\r\n\t\tvar namespaceURI;\r\n\t\tvar localPart;\r\n\t\tvar prefix;\r\n\t\tvar key;\r\n\t\tvar string;\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(two)) {\r\n\t\t\tnamespaceURI = '';\r\n\t\t\tlocalPart = one;\r\n\t\t\tprefix = '';\r\n\t\t} else if (!Jsonix.Util.Type.exists(three)) {\r\n\t\t\tnamespaceURI = Jsonix.Util.Type.exists(one) ? one : '';\r\n\t\t\tlocalPart = two;\r\n\t\t\tvar colonPosition = two.indexOf(':');\r\n\t\t\tif (colonPosition > 0 && colonPosition < two.length) {\r\n\t\t\t\tprefix = two.substring(0, colonPosition);\r\n\t\t\t\tlocalPart = two.substring(colonPosition + 1);\r\n\t\t\t} else {\r\n\t\t\t\tprefix = '';\r\n\t\t\t\tlocalPart = two;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnamespaceURI = Jsonix.Util.Type.exists(one) ? one : '';\r\n\t\t\tlocalPart = two;\r\n\t\t\tprefix = Jsonix.Util.Type.exists(three) ? three : '';\r\n\t\t}\r\n\t\tthis.namespaceURI = namespaceURI;\r\n\t\tthis.localPart = localPart;\r\n\t\tthis.prefix = prefix;\r\n\r\n\t\tthis.key = (namespaceURI !== '' ? ('{' + namespaceURI + '}') : '') + localPart;\r\n\t\tthis.string = (namespaceURI !== '' ? ('{' + namespaceURI + '}') : '') + (prefix !== '' ? (prefix + ':') : '') + localPart;\r\n\t},\r\n\ttoString : function() {\r\n\t\treturn this.string;\r\n\t},\r\n\t// foo:bar\r\n\ttoCanonicalString: function(namespaceContext) {\r\n\t\tvar canonicalPrefix = namespaceContext ? namespaceContext.getPrefix(this.namespaceURI, this.prefix) : this.prefix;\r\n\t\treturn this.prefix + (this.prefix === '' ? '' : ':') + this.localPart;\r\n\t},\r\n\tclone : function() {\r\n\t\treturn new Jsonix.XML.QName(this.namespaceURI, this.localPart, this.prefix);\r\n\t},\r\n\tequals : function(that) {\r\n\t\tif (!that) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn (this.namespaceURI == that.namespaceURI) && (this.localPart == that.localPart);\r\n\t\t}\r\n\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.QName\"\r\n});\r\nJsonix.XML.QName.fromString = function(qNameAsString, namespaceContext, defaultNamespaceURI) {\r\n\tvar leftBracket = qNameAsString.indexOf('{');\r\n\tvar rightBracket = qNameAsString.lastIndexOf('}');\r\n\tvar namespaceURI;\r\n\tvar prefixedName;\r\n\tif ((leftBracket === 0) && (rightBracket > 0) && (rightBracket < qNameAsString.length)) {\r\n\t\tnamespaceURI = qNameAsString.substring(1, rightBracket);\r\n\t\tprefixedName = qNameAsString.substring(rightBracket + 1);\r\n\t} else {\r\n\t\tnamespaceURI = null;\r\n\t\tprefixedName = qNameAsString;\r\n\t}\r\n\tvar colonPosition = prefixedName.indexOf(':');\r\n\tvar prefix;\r\n\tvar localPart;\r\n\tif (colonPosition > 0 && colonPosition < prefixedName.length) {\r\n\t\tprefix = prefixedName.substring(0, colonPosition);\r\n\t\tlocalPart = prefixedName.substring(colonPosition + 1);\r\n\t} else {\r\n\t\tprefix = '';\r\n\t\tlocalPart = prefixedName;\r\n\t}\r\n\t// If namespace URI was not set and we have a namespace context, try to find the namespace URI via this context\r\n\tif (namespaceURI === null)\r\n\t{\r\n\t\tif (prefix === '' && Jsonix.Util.Type.isString(defaultNamespaceURI))\r\n\t\t{\r\n\t\t\tnamespaceURI = defaultNamespaceURI;\r\n\t\t}\r\n\t\telse if (namespaceContext)\r\n\t\t{\r\n\t\t\tnamespaceURI = namespaceContext.getNamespaceURI(prefix);\r\n\t\t}\r\n\t}\r\n\t// If we don't have a namespace URI, assume '' by default\r\n\t// TODO document the assumption\r\n\tif (!Jsonix.Util.Type.isString(namespaceURI))\r\n\t{\r\n\t\tnamespaceURI = defaultNamespaceURI || '';\r\n\t}\r\n\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n};\r\nJsonix.XML.QName.fromObject = function(object) {\r\n\tJsonix.Util.Ensure.ensureObject(object);\r\n\tif (object instanceof Jsonix.XML.QName || (Jsonix.Util.Type.isString(object.CLASS_NAME) && object.CLASS_NAME === 'Jsonix.XML.QName')) {\r\n\t\treturn object;\r\n\t}\r\n\tvar localPart = object.localPart||object.lp||null;\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\tvar namespaceURI = object.namespaceURI||object.ns||'';\r\n\tvar prefix = object.prefix||object.p||'';\r\n\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n};\r\nJsonix.XML.QName.fromObjectOrString = function(value, namespaceContext, defaultNamespaceURI) {\r\n\tif (Jsonix.Util.Type.isString(value))\r\n\t{\r\n\t\treturn Jsonix.XML.QName.fromString(value, namespaceContext, defaultNamespaceURI);\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn Jsonix.XML.QName.fromObject(value);\r\n\t}\r\n};\r\nJsonix.XML.QName.key = function(namespaceURI, localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\tif (namespaceURI) {\r\n\t\tvar colonPosition = localPart.indexOf(':');\r\n\t\tif (colonPosition > 0 && colonPosition < localPart.length) {\r\n\t\t\tlocalName = localPart.substring(colonPosition + 1);\r\n\t\t} else {\r\n\t\t\tlocalName = localPart;\r\n\t\t}\r\n\t\treturn '{' + namespaceURI + '}' + localName;\r\n\t} else {\r\n\t\treturn localPart;\r\n\t}\r\n};\nJsonix.XML.Calendar = Jsonix.Class({\r\n\tyear : NaN,\r\n\tmonth : NaN,\r\n\tday : NaN,\r\n\thour : NaN,\r\n\tminute : NaN,\r\n\tsecond : NaN,\r\n\tfractionalSecond : NaN,\r\n\ttimezone : NaN,\r\n\tdate : null,\r\n\tinitialize : function(data) {\r\n\t\tJsonix.Util.Ensure.ensureObject(data);\r\n\t\t// Year\r\n\t\tif (Jsonix.Util.Type.exists(data.year)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.year);\r\n\t\t\tJsonix.XML.Calendar.validateYear(data.year);\r\n\t\t\tthis.year = data.year;\r\n\t\t} else {\r\n\t\t\tthis.year = NaN;\r\n\t\t}\r\n\t\t// Month\r\n\t\tif (Jsonix.Util.Type.exists(data.month)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.month);\r\n\t\t\tJsonix.XML.Calendar.validateMonth(data.month);\r\n\t\t\tthis.month = data.month;\r\n\t\t} else {\r\n\t\t\tthis.month = NaN;\r\n\t\t}\r\n\t\t// Day\r\n\t\tif (Jsonix.Util.Type.exists(data.day)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.day);\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(data.year) && Jsonix.Util.NumberUtils.isInteger(data.month)) {\r\n\t\t\t\tJsonix.XML.Calendar.validateYearMonthDay(data.year, data.month, data.day);\r\n\t\t\t} else if (Jsonix.Util.NumberUtils.isInteger(data.month)) {\r\n\t\t\t\tJsonix.XML.Calendar.validateMonthDay(data.month, data.day);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.XML.Calendar.validateDay(data.day);\r\n\t\t\t}\r\n\t\t\tthis.day = data.day;\r\n\t\t} else {\r\n\t\t\tthis.day = NaN;\r\n\t\t}\r\n\t\t// Hour\r\n\t\tif (Jsonix.Util.Type.exists(data.hour)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.hour);\r\n\t\t\tJsonix.XML.Calendar.validateHour(data.hour);\r\n\t\t\tthis.hour = data.hour;\r\n\t\t} else {\r\n\t\t\tthis.hour = NaN;\r\n\t\t}\r\n\t\t// Minute\r\n\t\tif (Jsonix.Util.Type.exists(data.minute)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.minute);\r\n\t\t\tJsonix.XML.Calendar.validateMinute(data.minute);\r\n\t\t\tthis.minute = data.minute;\r\n\t\t} else {\r\n\t\t\tthis.minute = NaN;\r\n\t\t}\r\n\t\t// Second\r\n\t\tif (Jsonix.Util.Type.exists(data.second)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(data.second);\r\n\t\t\tJsonix.XML.Calendar.validateSecond(data.second);\r\n\t\t\tthis.second = data.second;\r\n\t\t} else {\r\n\t\t\tthis.second = NaN;\r\n\t\t}\r\n\t\t// Fractional second\r\n\t\tif (Jsonix.Util.Type.exists(data.fractionalSecond)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(data.fractionalSecond);\r\n\t\t\tJsonix.XML.Calendar.validateFractionalSecond(data.fractionalSecond);\r\n\t\t\tthis.fractionalSecond = data.fractionalSecond;\r\n\t\t} else {\r\n\t\t\tthis.fractionalSecond = NaN;\r\n\t\t}\r\n\t\t// Timezone\r\n\t\tif (Jsonix.Util.Type.exists(data.timezone)) {\r\n\t\t\tif (Jsonix.Util.Type.isNaN(data.timezone)) {\r\n\t\t\t\tthis.timezone = NaN;\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureInteger(data.timezone);\r\n\t\t\t\tJsonix.XML.Calendar.validateTimezone(data.timezone);\r\n\t\t\t\tthis.timezone = data.timezone;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.timezone = NaN;\r\n\t\t}\r\n\r\n\t\tvar initialDate = new Date(0);\r\n\t\tinitialDate.setUTCFullYear(this.year || 1970);\r\n\t\tinitialDate.setUTCMonth(this.month - 1 || 0);\r\n\t\tinitialDate.setUTCDate(this.day || 1);\r\n\t\tinitialDate.setUTCHours(this.hour || 0);\r\n\t\tinitialDate.setUTCMinutes(this.minute || 0);\r\n\t\tinitialDate.setUTCSeconds(this.second || 0);\r\n\t\tinitialDate.setUTCMilliseconds((this.fractionalSecond || 0) * 1000);\r\n\t\tvar timezoneOffset = -60000 * (this.timezone || 0);\r\n\t\tthis.date = new Date(initialDate.getTime() + timezoneOffset);\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Calendar\"\r\n});\r\nJsonix.XML.Calendar.MIN_TIMEZONE = -14 * 60;\r\nJsonix.XML.Calendar.MAX_TIMEZONE = 14 * 60;\r\nJsonix.XML.Calendar.DAYS_IN_MONTH = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nJsonix.XML.Calendar.fromObject = function(object) {\r\n\tJsonix.Util.Ensure.ensureObject(object);\r\n\tif (Jsonix.Util.Type.isString(object.CLASS_NAME) && object.CLASS_NAME === 'Jsonix.XML.Calendar') {\r\n\t\treturn object;\r\n\t}\r\n\treturn new Jsonix.XML.Calendar(object);\r\n};\r\nJsonix.XML.Calendar.validateYear = function(year) {\r\n\tif (year === 0) {\r\n\t\tthrow new Error('Invalid year [' + year + ']. Year must not be [0].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMonth = function(month) {\r\n\tif (month < 1 || month > 12) {\r\n\t\tthrow new Error('Invalid month [' + month + ']. Month must be in range [1, 12].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateDay = function(day) {\r\n\tif (day < 1 || day > 31) {\r\n\t\tthrow new Error('Invalid day [' + day + ']. Day must be in range [1, 31].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMonthDay = function(month, day) {\r\n\tJsonix.XML.Calendar.validateMonth(month);\r\n\tvar maxDaysInMonth = Jsonix.XML.Calendar.DAYS_IN_MONTH[month - 1];\r\n\tif (day < 1 || day > Jsonix.XML.Calendar.DAYS_IN_MONTH[month - 1]) {\r\n\t\tthrow new Error('Invalid day [' + day + ']. Day must be in range [1, ' + maxDaysInMonth + '].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateYearMonthDay = function(year, month, day) {\r\n\t// #93 TODO proper validation of 28/29 02\r\n\tJsonix.XML.Calendar.validateYear(year);\r\n\tJsonix.XML.Calendar.validateMonthDay(month, day);\r\n};\r\nJsonix.XML.Calendar.validateHour = function(hour) {\r\n\tif (hour < 0 || hour > 23) {\r\n\t\tthrow new Error('Invalid hour [' + hour + ']. Hour must be in range [0, 23].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateMinute = function(minute) {\r\n\tif (minute < 0 || minute > 59) {\r\n\t\tthrow new Error('Invalid minute [' + minute + ']. Minute must be in range [0, 59].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateSecond = function(second) {\r\n\tif (second < 0 || second > 59) {\r\n\t\tthrow new Error('Invalid second [' + second + ']. Second must be in range [0, 59].');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateFractionalSecond = function(fractionalSecond) {\r\n\tif (fractionalSecond < 0 || fractionalSecond > 59) {\r\n\t\tthrow new Error('Invalid fractional second [' + fractionalSecond + ']. Fractional second must be in range [0, 1).');\r\n\t}\r\n};\r\nJsonix.XML.Calendar.validateTimezone = function(timezone) {\r\n\tif (timezone < Jsonix.XML.Calendar.MIN_TIMEZONE || timezone > Jsonix.XML.Calendar.MAX_TIMEZONE) {\r\n\t\tthrow new Error('Invalid timezone [' + timezone + ']. Timezone must not be in range [' + Jsonix.XML.Calendar.MIN_TIMEZONE + ', ' + Jsonix.XML.Calendar.MAX_TIMEZONE + '].');\r\n\t}\r\n};\nJsonix.XML.Input = Jsonix.Class({\r\n\troot : null,\r\n\tnode : null,\r\n\tattributes : null,\r\n\teventType : null,\r\n\tpns : null,\r\n\tinitialize : function(node) {\r\n\t\tJsonix.Util.Ensure.ensureExists(node);\r\n\t\tthis.root = node;\r\n\t\tvar rootPnsItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootPnsItem[Jsonix.XML.XMLNS_P] = Jsonix.XML.XMLNS_NS;\r\n\t\tthis.pns = [rootPnsItem];\r\n\t},\r\n\thasNext : function() {\r\n\t\t// No current node, we've not started yet\r\n\t\tif (this.node === null) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.node === this.root) {\r\n\t\t\tvar nodeType = this.node.nodeType;\r\n\t\t\t// Root node is document, last event type is END_DOCUMENT\r\n\t\t\tif (nodeType === 9 && this.eventType === 8) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Root node is element, last event type is END_ELEMENT\r\n\t\t\telse if (nodeType === 1 && this.eventType === 2) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tnext : function() {\r\n\t\tif (this.eventType === null) {\r\n\t\t\treturn this.enter(this.root);\r\n\t\t}\r\n\t\t// START_DOCUMENT\r\n\t\tif (this.eventType === 7) {\r\n\t\t\tvar documentElement = this.node.documentElement;\r\n\t\t\tif (documentElement) {\r\n\t\t\t\treturn this.enter(documentElement);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else if (this.eventType === 1) {\r\n\t\t\tvar firstChild = this.node.firstChild;\r\n\t\t\tif (firstChild) {\r\n\t\t\t\treturn this.enter(firstChild);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else if (this.eventType === 2) {\r\n\t\t\tvar nextSibling = this.node.nextSibling;\r\n\t\t\tif (nextSibling) {\r\n\t\t\t\treturn this.enter(nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.leave(this.node);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn this.leave(this.node);\r\n\t\t}\r\n\t},\r\n\tenter : function(node) {\r\n\t\tvar nodeType = node.nodeType;\r\n\t\tthis.node = node;\r\n\t\tthis.attributes = null;\r\n\t\t// Document node\r\n\t\tif (nodeType === 1) {\r\n\t\t\t// START_ELEMENT\r\n\t\t\tthis.eventType = 1;\r\n\t\t\tthis.pushNS(node);\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 2) {\r\n\t\t\t// ATTRIBUTE\r\n\t\t\tthis.eventType = 10;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 3) {\r\n\t\t\tvar nodeValue = node.nodeValue;\r\n\t\t\tif (Jsonix.Util.StringUtils.isEmpty(nodeValue)) {\r\n\t\t\t\t// SPACE\r\n\t\t\t\tthis.eventType = 6;\r\n\t\t\t} else {\r\n\t\t\t\t// CHARACTERS\r\n\t\t\t\tthis.eventType = 4;\r\n\t\t\t}\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 4) {\r\n\t\t\t// CDATA\r\n\t\t\tthis.eventType = 12;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 5) {\r\n\t\t\t// ENTITY_REFERENCE_NODE = 5\r\n\t\t\t// ENTITY_REFERENCE\r\n\t\t\tthis.eventType = 9;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 6) {\r\n\t\t\t// ENTITY_DECLARATION\r\n\t\t\tthis.eventType = 15;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 7) {\r\n\t\t\t// PROCESSING_INSTRUCTION\r\n\t\t\tthis.eventType = 3;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 8) {\r\n\t\t\t// COMMENT\r\n\t\t\tthis.eventType = 5;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 9) {\r\n\t\t\t// START_DOCUMENT\r\n\t\t\tthis.eventType = 7;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 10) {\r\n\t\t\t// DTD\r\n\t\t\tthis.eventType = 12;\r\n\t\t\treturn this.eventType;\r\n\t\t} else if (nodeType === 12) {\r\n\t\t\t// NOTATION_DECLARATION\r\n\t\t\tthis.eventType = 14;\r\n\t\t\treturn this.eventType;\r\n\t\t} else {\r\n\t\t\t// DOCUMENT_FRAGMENT_NODE = 11\r\n\t\t\tthrow new Error(\"Node type [\" + nodeType + '] is not supported.');\r\n\t\t}\r\n\t},\r\n\tleave : function(node) {\r\n\t\tif (node.nodeType === 9) {\r\n\t\t\tif (this.eventType == 8) {\r\n\t\t\t\tthrow new Error(\"Invalid state.\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.node = node;\r\n\t\t\t\tthis.attributes = null;\r\n\t\t\t\t// END_ELEMENT\r\n\t\t\t\tthis.eventType = 8;\r\n\t\t\t\treturn this.eventType;\r\n\t\t\t}\r\n\t\t} else if (node.nodeType === 1) {\r\n\t\t\tif (this.eventType == 2) {\r\n\t\t\t\tvar nextSibling = node.nextSibling;\r\n\t\t\t\tif (nextSibling) {\r\n\t\t\t\t\treturn this.enter(nextSibling);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.node = node;\r\n\t\t\t\tthis.attributes = null;\r\n\t\t\t\t// END_ELEMENT\r\n\t\t\t\tthis.eventType = 2;\r\n\t\t\t\tthis.popNS();\r\n\t\t\t\treturn this.eventType;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar nextSibling1 = node.nextSibling;\r\n\t\tif (nextSibling1) {\r\n\t\t\treturn this.enter(nextSibling1);\r\n\t\t} else {\r\n\t\t\tvar parentNode = node.parentNode;\r\n\t\t\tthis.node = parentNode;\r\n\t\t\tthis.attributes = null;\r\n\t\t\tif (parentNode.nodeType === 9) {\r\n\t\t\t\tthis.eventType = 8;\r\n\t\t\t} else {\r\n\t\t\t\tthis.eventType = 2;\r\n\t\t\t}\r\n\t\t\treturn this.eventType;\r\n\t\t}\r\n\t},\r\n\tgetName : function() {\r\n\t\tvar node = this.node;\r\n\t\tif (Jsonix.Util.Type.isString(node.nodeName)) {\r\n\t\t\tif (Jsonix.Util.Type.isString(node.namespaceURI)) {\r\n\t\t\t\treturn new Jsonix.XML.QName(node.namespaceURI, node.nodeName);\r\n\t\t\t} else {\r\n\t\t\t\treturn new Jsonix.XML.QName(node.nodeName);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetNameKey : function() {\r\n\t\tvar node = this.node;\r\n\t\tif (Jsonix.Util.Type.isString(node.nodeName)) {\r\n\t\t\treturn Jsonix.XML.QName.key(node.namespaceURI, node.nodeName);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetText : function() {\r\n\t\treturn this.node.nodeValue;\r\n\t},\r\n\tnextTag : function() {\r\n\t\tvar et = this.next();\r\n\t\t// TODO isWhiteSpace\r\n\t\twhile (et === 7 || et === 4 || et === 12 || et === 6 || et === 3 || et === 5) {\r\n\t\t\tet = this.next();\r\n\t\t}\r\n\t\tif (et !== 1 && et !== 2) {\r\n\t\t\t// TODO location\r\n\t\t\tthrow new Error('Expected start or end tag.');\r\n\t\t}\r\n\t\treturn et;\r\n\t},\r\n\tskipElement : function() {\r\n\t\tif (this.eventType !== Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to skip element.\");\r\n\t\t}\r\n\t\tvar numberOfOpenTags = 1;\r\n\t\tvar et;\r\n\t\tdo {\r\n\t\t\tet = this.nextTag();\r\n\t\t    numberOfOpenTags += (et === Jsonix.XML.Input.START_ELEMENT) ? 1 : -1;\r\n\t\t  } while (numberOfOpenTags > 0);\r\n\t\treturn et;\r\n\t},\t\r\n\tgetElementText : function() {\r\n\t\tif (this.eventType != 1) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read next text.\");\r\n\t\t}\r\n\t\tvar et = this.next();\r\n\t\tvar content = '';\r\n\t\twhile (et !== 2) {\r\n\t\t\tif (et === 4 || et === 12 || et === 6 || et === 9) {\r\n\t\t\t\tcontent = content + this.getText();\r\n\t\t\t} else if (et === 3 || et === 5) {\r\n\t\t\t\t// Skip PI or comment\r\n\t\t\t} else if (et === 8) {\r\n\t\t\t\t// End document\r\n\t\t\t\tthrow new Error(\"Unexpected end of document when reading element text content.\");\r\n\t\t\t} else if (et === 1) {\r\n\t\t\t\t// End element\r\n\t\t\t\t// TODO location\r\n\t\t\t\tthrow new Error(\"Element text content may not contain START_ELEMENT.\");\r\n\t\t\t} else {\r\n\t\t\t\t// TODO location\r\n\t\t\t\tthrow new Error(\"Unexpected event type [\" + et + \"].\");\r\n\t\t\t}\r\n\t\t\tet = this.next();\r\n\t\t}\r\n\t\treturn content;\r\n\t},\r\n\tretrieveElement : function () {\r\n\t\tvar element;\r\n\t\tif (this.eventType === 1) {\r\n\t\t\telement = this.node;\r\n\t\t} else if (this.eventType === 10) {\r\n\t\t\telement = this.node.parentNode;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element can only be retrieved for START_ELEMENT or ATTRIBUTE nodes.\");\r\n\t\t}\r\n\t\treturn element;\r\n\t},\r\n\tretrieveAttributes : function () {\r\n\t\tvar attributes;\r\n\t\tif (this.attributes)\r\n\t\t{\r\n\t\t\tattributes = this.attributes;\r\n\t\t} else if (this.eventType === 1) {\r\n\t\t\tattributes = this.node.attributes;\r\n\t\t\tthis.attributes = attributes;\r\n\t\t} else if (this.eventType === 10) {\r\n\t\t\tattributes = this.node.parentNode.attributes;\r\n\t\t\tthis.attributes = attributes;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Attributes can only be retrieved for START_ELEMENT or ATTRIBUTE nodes.\");\r\n\t\t}\r\n\t\treturn attributes;\r\n\t},\r\n\tgetAttributeCount : function() {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\treturn attributes.length;\r\n\t},\r\n\tgetAttributeName : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\t\tif (Jsonix.Util.Type.isString(attribute.namespaceURI)) {\r\n\t\t\treturn new Jsonix.XML.QName(attribute.namespaceURI, attribute.nodeName);\r\n\t\t} else {\r\n\t\t\treturn new Jsonix.XML.QName(attribute.nodeName);\r\n\t\t}\r\n\t},\r\n\tgetAttributeNameKey : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\r\n\t\treturn Jsonix.XML.QName.key(attribute.namespaceURI, attribute.nodeName);\r\n\t},\r\n\tgetAttributeValue : function(index) {\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tif (index < 0 || index >= attributes.length) {\r\n\t\t\tthrow new Error(\"Invalid attribute index [\" + index + \"].\");\r\n\t\t}\r\n\t\tvar attribute = attributes[index];\r\n\t\treturn attribute.value;\r\n\t},\r\n\tgetAttributeValueNS : null,\r\n\tgetAttributeValueNSViaElement : function(namespaceURI, localPart) {\r\n\t\tvar element = this.retrieveElement();\r\n\t\treturn element.getAttributeNS(namespaceURI, localPart);\r\n\t},\r\n\tgetAttributeValueNSViaAttribute : function(namespaceURI, localPart) {\r\n\t\tvar attributeNode = this.getAttributeNodeNS(namespaceURI, localPart);\r\n\t\tif (Jsonix.Util.Type.exists(attributeNode)) {\r\n\t\t\treturn attributeNode.nodeValue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tgetAttributeNodeNS : null,\r\n\tgetAttributeNodeNSViaElement : function(namespaceURI, localPart) {\r\n\t\tvar element = this.retrieveElement();\r\n\t\treturn element.getAttributeNodeNS(namespaceURI, localPart);\r\n\t},\r\n\tgetAttributeNodeNSViaAttributes : function(namespaceURI, localPart) {\r\n\t\tvar attributeNode = null;\r\n\t\tvar attributes = this.retrieveAttributes();\r\n\t\tvar potentialNode, fullName;\r\n\t\tfor (var i = 0, len = attributes.length; i < len; ++i) {\r\n\t\t\tpotentialNode = attributes[i];\r\n\t\t\tif (potentialNode.namespaceURI === namespaceURI) {\r\n\t\t\t\tfullName = (potentialNode.prefix) ? (potentialNode.prefix + ':' + localPart) : localPart;\r\n\t\t\t\tif (fullName === potentialNode.nodeName) {\r\n\t\t\t\t\tattributeNode = potentialNode;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn attributeNode;\r\n\t},\r\n\tgetElement : function() {\r\n\t\tif (this.eventType === 1 || this.eventType === 2) {\r\n\t\t\t// Go to the END_ELEMENT\r\n\t\t\tthis.eventType = 2;\r\n\t\t\treturn this.node;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT or END_ELEMENT to return current element.\");\r\n\t\t}\r\n\t},\r\n\tpushNS : function (node) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar parentPnsItem = this.pns[pindex];\r\n\t\tvar pnsItem = Jsonix.Util.Type.isObject(parentPnsItem) ? pindex : parentPnsItem;\r\n\t\tthis.pns.push(pnsItem);\r\n\t\tpindex++;\r\n\t\tvar reference = true;\r\n\t\tif (node.attributes)\r\n\t\t{\r\n\t\t\tvar attributes = node.attributes;\r\n\t\t\tvar alength = attributes.length;\r\n\t\t\tif (alength > 0)\r\n\t\t\t{\r\n\t\t\t\t// If given node has attributes\r\n\t\t\t\tfor (var aindex = 0; aindex < alength; aindex++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar attribute = attributes[aindex];\r\n\t\t\t\t\tvar attributeName = attribute.nodeName;\r\n\t\t\t\t\tvar p = null;\r\n\t\t\t\t\tvar ns = null;\r\n\t\t\t\t\tvar isNS = false;\r\n\t\t\t\t\tif (attributeName === 'xmlns')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = '';\r\n\t\t\t\t\t\tns = attribute.value;\r\n\t\t\t\t\t\tisNS = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (attributeName.substring(0, 6) === 'xmlns:')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = attributeName.substring(6);\r\n\t\t\t\t\t\tns = attribute.value;\r\n\t\t\t\t\t\tisNS = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Attribute is a namespace declaration\r\n\t\t\t\t\tif (isNS)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (reference)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpnsItem = Jsonix.Util.Type.cloneObject(this.pns[pnsItem], {});\r\n\t\t\t\t\t\t\tthis.pns[pindex] = pnsItem;\r\n\t\t\t\t\t\t\treference = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpnsItem[p] = ns;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t},\r\n\tpopNS : function () {\r\n\t\tthis.pns.pop();\r\n\t},\r\n\tgetNamespaceURI : function (p) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[pindex];\r\n\t\tpnsItem = Jsonix.Util.Type.isObject(pnsItem) ? pnsItem : this.pns[pnsItem];\r\n\t\treturn pnsItem[p];\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Input\"\r\n\r\n});\r\n\r\nJsonix.XML.Input.prototype.getAttributeValueNS = (Jsonix.DOM.isDomImplementationAvailable()) ? Jsonix.XML.Input.prototype.getAttributeValueNSViaElement : Jsonix.XML.Input.prototype.getAttributeValueNSViaAttribute;\r\nJsonix.XML.Input.prototype.getAttributeNodeNS = (Jsonix.DOM.isDomImplementationAvailable()) ? Jsonix.XML.Input.prototype.getAttributeNodeNSViaElement : Jsonix.XML.Input.prototype.getAttributeNodeNSViaAttributes;\r\n\r\nJsonix.XML.Input.START_ELEMENT = 1;\r\nJsonix.XML.Input.END_ELEMENT = 2;\r\nJsonix.XML.Input.PROCESSING_INSTRUCTION = 3;\r\nJsonix.XML.Input.CHARACTERS = 4;\r\nJsonix.XML.Input.COMMENT = 5;\r\nJsonix.XML.Input.SPACE = 6;\r\nJsonix.XML.Input.START_DOCUMENT = 7;\r\nJsonix.XML.Input.END_DOCUMENT = 8;\r\nJsonix.XML.Input.ENTITY_REFERENCE = 9;\r\nJsonix.XML.Input.ATTRIBUTE = 10;\r\nJsonix.XML.Input.DTD = 11;\r\nJsonix.XML.Input.CDATA = 12;\r\nJsonix.XML.Input.NAMESPACE = 13;\r\nJsonix.XML.Input.NOTATION_DECLARATION = 14;\r\nJsonix.XML.Input.ENTITY_DECLARATION = 15;\r\n\nJsonix.XML.Output = Jsonix.Class({\r\n\tdocument : null,\r\n\tdocumentElement : null,\r\n\tnode : null,\r\n\tnodes : null,\r\n\tnsp : null,\r\n\tpns : null,\r\n\tnamespacePrefixIndex : 0,\r\n\txmldom : null,\r\n\tinitialize : function(options) {\r\n\t\t// REWORK\r\n\t\tif (typeof ActiveXObject !== 'undefined') {\r\n\t\t\tthis.xmldom = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n\t\t} else {\r\n\t\t\tthis.xmldom = null;\r\n\t\t}\r\n\t\tthis.nodes = [];\r\n\t\tvar rootNspItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootNspItem[Jsonix.XML.XMLNS_NS] = Jsonix.XML.XMLNS_P;\r\n\t\tif (Jsonix.Util.Type.isObject(options)) {\r\n\t\t\tif (Jsonix.Util.Type.isObject(options.namespacePrefixes)) {\r\n\t\t\t\tJsonix.Util.Type.cloneObject(options.namespacePrefixes, rootNspItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.nsp = [rootNspItem];\r\n\t\tvar rootPnsItem =\r\n\t\t{\r\n\t\t\t'' : ''\r\n\t\t};\r\n\t\trootPnsItem[Jsonix.XML.XMLNS_P] = Jsonix.XML.XMLNS_NS;\r\n\t\tthis.pns = [rootPnsItem];\r\n\t},\r\n\tdestroy : function() {\r\n\t\tthis.xmldom = null;\r\n\t},\r\n\twriteStartDocument : function() {\r\n\t\t// TODO Check\r\n\t\tvar doc = Jsonix.DOM.createDocument();\r\n\t\tthis.document = doc;\r\n\t\treturn this.push(doc);\r\n\t},\r\n\twriteEndDocument : function() {\r\n\t\treturn this.pop();\r\n\r\n\t},\r\n\twriteStartElement : function(name) {\r\n\t\tJsonix.Util.Ensure.ensureObject(name);\r\n\t\tvar localPart = name.localPart || name.lp || null;\r\n\t\tJsonix.Util.Ensure.ensureString(localPart);\r\n\t\tvar ns = name.namespaceURI || name.ns || null;\r\n\t\tvar namespaceURI = Jsonix.Util.Type.isString(ns) ? ns : '';\r\n\r\n\t\tvar p = name.prefix || name.p;\r\n\t\tvar prefix = this.getPrefix(namespaceURI, p);\r\n\r\n\t\tvar qualifiedName = (!prefix ? localPart : prefix + ':' + localPart);\r\n\r\n\t\tvar element;\r\n\t\tif (Jsonix.Util.Type.isFunction(this.document.createElementNS))\t{\r\n\t\t\telement = this.document.createElementNS(namespaceURI, qualifiedName);\r\n\t\t}\r\n\t\telse if (this.xmldom) {\r\n\t\t\telement = this.xmldom.createNode(1, qualifiedName, namespaceURI);\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Could not create an element node.\");\r\n\t\t}\r\n\t\tthis.peek().appendChild(element);\r\n\t\tthis.push(element);\r\n\t\tthis.declareNamespace(namespaceURI, prefix);\r\n\t\tif (this.documentElement === null)\r\n\t\t{\r\n\t\t\tthis.documentElement = element;\r\n\t\t\tthis.declareNamespaces();\r\n\t\t}\r\n\t\treturn element;\r\n\t},\r\n\twriteEndElement : function() {\r\n\t\treturn this.pop();\r\n\t},\r\n\twriteCharacters : function(text) {\r\n\t\tvar node;\r\n\t\tif (Jsonix.Util.Type.isFunction(this.document.createTextNode))\t{\r\n\t\t\tnode = this.document.createTextNode(text);\r\n\t\t}\r\n\t\telse if (this.xmldom) {\r\n\t\t\tnode = this.xmldom.createTextNode(text);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Could not create a text node.\");\r\n\t\t}\r\n\t\tthis.peek().appendChild(node);\r\n\t\treturn node;\r\n\r\n\t},\r\n\twriteAttribute : function(name, value) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\tJsonix.Util.Ensure.ensureObject(name);\r\n\t\tvar localPart = name.localPart || name.lp || null;\r\n\t\tJsonix.Util.Ensure.ensureString(localPart);\r\n\t\tvar ns = name.namespaceURI || name.ns || null;\r\n\t\tvar namespaceURI = Jsonix.Util.Type.isString(ns) ? ns : '';\r\n\t\tvar p = name.prefix || name.p || null;\r\n\t\tvar prefix = this.getPrefix(namespaceURI, p);\r\n\r\n\t\tvar qualifiedName = (!prefix ? localPart : prefix + ':' + localPart);\r\n\r\n\t\tvar node = this.peek();\r\n\r\n\t\tif (namespaceURI === '') {\r\n\t\t\tnode.setAttribute(qualifiedName, value);\r\n\t\t} else {\r\n\t\t\tif (node.setAttributeNS) {\r\n\t\t\t\tnode.setAttributeNS(namespaceURI, qualifiedName, value);\r\n\t\t\t} else {\r\n\t\t\t\tif (this.xmldom) {\r\n\t\t\t\t\tvar attribute = this.document.createNode(2, qualifiedName, namespaceURI);\r\n\t\t\t\t\tattribute.nodeValue = value;\r\n\t\t\t\t\tnode.setAttributeNode(attribute);\r\n\t\t\t\t}\r\n\t\t\t\telse if (namespaceURI === Jsonix.XML.XMLNS_NS)\r\n\t\t\t\t{\r\n\t\t\t\t\t// XMLNS namespace may be processed unqualified\r\n\t\t\t\t\tnode.setAttribute(qualifiedName, value);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(\"The [setAttributeNS] method is not implemented\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.declareNamespace(namespaceURI, prefix);\r\n\t\t}\r\n\t\t\r\n\t},\r\n\twriteNode : function(node) {\r\n\t\tvar importedNode;\r\n\t\tif (Jsonix.Util.Type.exists(this.document.importNode)) {\r\n\t\t\timportedNode = this.document.importNode(node, true);\r\n\t\t} else {\r\n\t\t\timportedNode = node;\r\n\t\t}\r\n\t\tthis.peek().appendChild(importedNode);\r\n\t\treturn importedNode;\r\n\t},\r\n\tpush : function(node) {\r\n\t\tthis.nodes.push(node);\r\n\t\tthis.pushNS();\r\n\t\treturn node;\r\n\t},\r\n\tpeek : function() {\r\n\t\treturn this.nodes[this.nodes.length - 1];\r\n\t},\r\n\tpop : function() {\r\n\t\tthis.popNS();\r\n\t\tvar result = this.nodes.pop();\r\n\t\treturn result;\r\n\t},\r\n\tpushNS : function ()\r\n\t{\r\n\t\tvar nindex = this.nsp.length - 1;\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar parentNspItem = this.nsp[nindex];\r\n\t\tvar parentPnsItem = this.pns[pindex];\r\n\t\tvar nspItem = Jsonix.Util.Type.isObject(parentNspItem) ? nindex : parentNspItem;\r\n\t\tvar pnsItem = Jsonix.Util.Type.isObject(parentPnsItem) ? pindex : parentPnsItem;\r\n\t\tthis.nsp.push(nspItem);\r\n\t\tthis.pns.push(pnsItem);\r\n\t},\r\n\tpopNS : function ()\r\n\t{\r\n\t\tthis.nsp.pop();\r\n\t\tthis.pns.pop();\r\n\t},\r\n\tdeclareNamespaces : function ()\r\n\t{\r\n\t\tvar index = this.nsp.length - 1;\r\n\t\tvar nspItem = this.nsp[index];\r\n\t\tnspItem = Jsonix.Util.Type.isNumber(nspItem) ? this.nsp[nspItem] : nspItem;\r\n\t\tvar ns, p;\r\n\t\tfor (ns in nspItem)\r\n\t\t{\r\n\t\t\tif (nspItem.hasOwnProperty(ns))\r\n\t\t\t{\r\n\t\t\t\tp = nspItem[ns];\r\n\t\t\t\tthis.declareNamespace(ns, p);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdeclareNamespace : function (ns, p)\r\n\t{\r\n\t\tvar index = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[index];\r\n\t\tvar reference;\r\n\t\tif (Jsonix.Util.Type.isNumber(pnsItem))\r\n\t\t{\r\n\t\t\t// Resolve the reference\r\n\t\t\treference = true;\r\n\t\t\tpnsItem = this.pns[pnsItem];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treference = false;\r\n\t\t}\r\n\t\t// If this prefix is mapped to a different namespace and must be redeclared\r\n\t\tif (pnsItem[p] !== ns)\r\n\t\t{\r\n\t\t\tif (p === '')\r\n\t\t\t{\r\n\t\t\t\tthis.writeAttribute({lp : Jsonix.XML.XMLNS_P}, ns);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.writeAttribute({ns : Jsonix.XML.XMLNS_NS, lp : p, p : Jsonix.XML.XMLNS_P}, ns);\r\n\t\t\t}\r\n\t\t\tif (reference)\r\n\t\t\t{\r\n\t\t\t\t// If this was a reference, clone it and replace the reference\r\n\t\t\t\tpnsItem = Jsonix.Util.Type.cloneObject(pnsItem, {});\r\n\t\t\t\tthis.pns[index] = pnsItem;\r\n\t\t\t}\r\n\t\t\tpnsItem[p] = ns;\r\n\t\t}\r\n\t},\r\n\tgetPrefix : function (ns, p)\r\n\t{\r\n\t\tvar index = this.nsp.length - 1;\r\n\t\tvar nspItem = this.nsp[index];\r\n\t\tvar reference;\r\n\t\tif (Jsonix.Util.Type.isNumber(nspItem))\r\n\t\t{\r\n\t\t\t// This is a reference, the item is the index of the parent item\r\n\t\t\treference = true;\r\n\t\t\tnspItem = this.nsp[nspItem];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treference = false;\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.isString(p))\r\n\t\t{\r\n\t\t\tvar oldp = nspItem[ns];\r\n\t\t\t// If prefix is already declared and equals the proposed prefix \r\n\t\t\tif (p === oldp)\r\n\t\t\t{\r\n\t\t\t\t// Nothing to do\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// If this was a reference, we have to clone it now\r\n\t\t\t\tif (reference)\r\n\t\t\t\t{\r\n\t\t\t\t\tnspItem = Jsonix.Util.Type.cloneObject(nspItem, {});\r\n\t\t\t\t\tthis.nsp[index] = nspItem;\r\n\t\t\t\t}\r\n\t\t\t\tnspItem[ns] = p;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tp = nspItem[ns];\r\n\t\t\tif (!Jsonix.Util.Type.exists(p)) {\r\n\t\t\t\tp = 'p' + (this.namespacePrefixIndex++);\r\n\t\t\t\t// If this was a reference, we have to clone it now\r\n\t\t\t\tif (reference)\r\n\t\t\t\t{\r\n\t\t\t\t\tnspItem = Jsonix.Util.Type.cloneObject(nspItem, {});\r\n\t\t\t\t\tthis.nsp[index] = nspItem;\r\n\t\t\t\t}\r\n\t\t\t\tnspItem[ns] = p;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn p;\r\n\t},\r\n\tgetNamespaceURI : function (p) {\r\n\t\tvar pindex = this.pns.length - 1;\r\n\t\tvar pnsItem = this.pns[pindex];\r\n\t\tpnsItem = Jsonix.Util.Type.isObject(pnsItem) ? pnsItem : this.pns[pnsItem];\r\n\t\treturn pnsItem[p];\r\n\t},\r\n\tCLASS_NAME : \"Jsonix.XML.Output\"\r\n});\nJsonix.Mapping = {};\nJsonix.Mapping.Style = Jsonix.Class({\r\n\tmarshaller : null,\r\n\tunmarshaller : null,\r\n\tmodule : null,\r\n\telementInfo : null,\r\n\tclassInfo : null,\r\n\tenumLeafInfo : null,\r\n\tanyAttributePropertyInfo : null,\r\n\tanyElementPropertyInfo : null,\r\n\tattributePropertyInfo : null,\r\n\telementMapPropertyInfo : null,\r\n\telementPropertyInfo : null,\r\n\telementsPropertyInfo : null,\r\n\telementRefPropertyInfo : null,\r\n\telementRefsPropertyInfo : null,\r\n\tvaluePropertyInfo : null,\r\n\tinitialize : function() {\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style'\r\n});\r\n\r\nJsonix.Mapping.Style.STYLES = {};\nJsonix.Mapping.Styled = Jsonix.Class({\r\n\tmappingStyle : null,\r\n\tinitialize : function(options) {\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\tif (Jsonix.Util.Type.isString(options.mappingStyle)) {\r\n\t\t\t\tvar mappingStyle = Jsonix.Mapping.Style.STYLES[options.mappingStyle];\r\n\t\t\t\tif (!mappingStyle) {\r\n\t\t\t\t\tthrow new Error(\"Mapping style [\" + options.mappingStyle + \"] is not known.\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.mappingStyle = mappingStyle;\r\n\t\t\t} else if (Jsonix.Util.Type.isObject(options.mappingStyle)) {\r\n\t\t\t\tthis.mappingStyle = options.mappingStyle;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.mappingStyle) {\r\n\t\t\tthis.mappingStyle = Jsonix.Mapping.Style.STYLES.standard;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Styled'\r\n});\nJsonix.Binding = {};\nJsonix.Binding.Marshalls = {\r\n};\r\n\r\nJsonix.Binding.Marshalls.Element = Jsonix.Class({\r\n\tmarshalElement : function(value, context, output, scope) {\r\n\t\tvar elementValue = this.convertToTypedNamedValue(value, context, output, scope);\r\n\t\tvar declaredTypeInfo = elementValue.typeInfo;\r\n\t\tvar actualTypeInfo = undefined;\r\n\t\tif (context.supportXsiType && Jsonix.Util.Type.exists(elementValue.value))\r\n\t\t{\r\n\t\t\tvar typeInfoByValue = context.getTypeInfoByValue(elementValue.value);\r\n\t\t\tif (typeInfoByValue && typeInfoByValue.typeName)\r\n\t\t\t{\r\n\t\t\t\tactualTypeInfo = typeInfoByValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar typeInfo = actualTypeInfo || declaredTypeInfo;\r\n\t\tif (typeInfo) {\r\n\t\t\toutput.writeStartElement(elementValue.name);\r\n\t\t\tif (actualTypeInfo && declaredTypeInfo !== actualTypeInfo) {\r\n\t\t\t\tvar xsiTypeName = actualTypeInfo.typeName;\r\n\t\t\t\tvar xsiType = Jsonix.Schema.XSD.QName.INSTANCE.print(xsiTypeName, context, output, scope);\r\n\t\t\t\toutput.writeAttribute(Jsonix.Schema.XSI.TYPE_QNAME, xsiType);\r\n\t\t\t}\r\n\t\t\tif (Jsonix.Util.Type.exists(elementValue.value)) {\r\n\t\t\t\ttypeInfo.marshal(elementValue.value, context, output, scope);\r\n\t\t\t}\r\n\t\t\toutput.writeEndElement();\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element [\" + elementValue.name.key + \"] is not known in this context, could not determine its type.\");\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(name, context, scope) {\r\n\t\tvar elementInfo = context.getElementInfo(name, scope);\r\n\t\tif (Jsonix.Util.Type.exists(elementInfo)) {\r\n\t\t\treturn elementInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n});\r\nJsonix.Binding.Marshalls.Element.AsElementRef = Jsonix.Class({\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar elementValue = this.convertToNamedValue(value, context, output, scope);\r\n\t\treturn {\r\n\t\t\tname : elementValue.name,\r\n\t\t\tvalue : elementValue.value,\r\n\t\t\ttypeInfo : this.getTypeInfoByElementName(elementValue.name, context, scope)\r\n\t\t};\r\n\t},\r\n\tconvertToNamedValue : function(elementValue, context, output, scope) {\r\n\t\tvar name;\r\n\t\tvar value;\r\n\t\tif (Jsonix.Util.Type.exists(elementValue.name) && !Jsonix.Util.Type.isUndefined(elementValue.value)) {\r\n\t\t\tname = Jsonix.XML.QName.fromObjectOrString(elementValue.name, context);\r\n\t\t\tvalue = Jsonix.Util.Type.exists(elementValue.value) ? elementValue.value : null;\r\n\t\t\treturn {\r\n\t\t\t\tname : name,\r\n\t\t\t\tvalue : value\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tfor ( var propertyName in elementValue) {\r\n\t\t\t\tif (elementValue.hasOwnProperty(propertyName)) {\r\n\t\t\t\t\tname = Jsonix.XML.QName.fromObjectOrString(propertyName, context);\r\n\t\t\t\t\tvalue = elementValue[propertyName];\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname : name,\r\n\t\t\t\t\t\tvalue : value\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(\"Invalid element value [\" + elementValue + \"]. Element values must either have {name:'myElementName', value: elementValue} or {myElementName:elementValue} structure.\");\r\n\t}\r\n});\r\n\nJsonix.Binding.Unmarshalls = {};\r\n\r\nJsonix.Binding.Unmarshalls.WrapperElement = Jsonix.Class({\r\n\tmixed : false,\r\n\tunmarshalWrapperElement : function(context, input, scope, callback) {\r\n\t\tvar et = input.next();\r\n\t\twhile (et !== Jsonix.XML.Input.END_ELEMENT) {\r\n\t\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t\t} else\r\n\t\t\t// Characters\r\n\t\t\tif (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\t\tcallback(input.getText());\r\n\t\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t\t// Skip whitespace\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t\t}\r\n\t\t\tet = input.next();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element = Jsonix.Class({\r\n\tallowTypedObject : true,\r\n\tallowDom : false,\r\n\tunmarshalElement : function(context, input, scope, callback) {\r\n\t\tif (input.eventType != 1) {\r\n\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read next element.\");\r\n\t\t}\r\n\t\tvar typeInfo = this.getTypeInfoByInputElement(context, input, scope);\r\n\t\tvar name = input.getName();\r\n\t\tvar elementValue;\r\n\t\tif (this.allowTypedObject) {\r\n\t\t\tif (Jsonix.Util.Type.exists(typeInfo)) {\r\n\t\t\t\tvar value = typeInfo.unmarshal(context, input, scope);\r\n\t\t\t\tvar typedNamedValue = {\r\n\t\t\t\t\tname : name,\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t\t};\r\n\t\t\t\telementValue = this.convertFromTypedNamedValue(typedNamedValue, context, input, scope);\r\n\t\t\t} else if (this.allowDom) {\r\n\t\t\t\telementValue = input.getElement();\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Element [\" + name.toString() + \"] could not be unmarshalled as is not known in this context and the property does not allow DOM content.\");\r\n\t\t\t}\r\n\t\t} else if (this.allowDom) {\r\n\t\t\telementValue = input.getElement();\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Element [\" + name.toString() + \"] could not be unmarshalled as the property neither allows typed objects nor DOM as content. This is a sign of invalid mappings, do not use [allowTypedObject : false] and [allowDom : false] at the same time.\");\r\n\t\t}\r\n\t\tcallback(elementValue);\r\n\t},\r\n\tgetTypeInfoByInputElement : function(context, input, scope) {\r\n\t\tvar xsiTypeInfo = null;\r\n\t\tif (context.supportXsiType) {\r\n\t\t\tvar xsiType = input.getAttributeValueNS(Jsonix.Schema.XSI.NAMESPACE_URI, Jsonix.Schema.XSI.TYPE);\r\n\t\t\tif (Jsonix.Util.StringUtils.isNotBlank(xsiType)) {\r\n\t\t\t\tvar xsiTypeName = Jsonix.Schema.XSD.QName.INSTANCE.parse(xsiType, context, input, scope);\r\n\t\t\t\txsiTypeInfo = context.getTypeInfoByTypeNameKey(xsiTypeName.key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar name = input.getName();\r\n\t\tvar typeInfo = xsiTypeInfo ? xsiTypeInfo : this.getTypeInfoByElementName(name, context, scope);\r\n\t\treturn typeInfo;\r\n\t},\r\n\tgetTypeInfoByElementName : function(name, context, scope) {\r\n\t\tvar elementInfo = context.getElementInfo(name, scope);\r\n\t\tif (Jsonix.Util.Type.exists(elementInfo)) {\r\n\t\t\treturn elementInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element.AsElementRef = Jsonix.Class({\r\n\tconvertFromTypedNamedValue : function(typedNamedValue, context, input, scope) {\r\n\t\treturn {\r\n\t\t\tname : typedNamedValue.name,\r\n\t\t\tvalue : typedNamedValue.value\r\n\t\t};\r\n\t}\r\n});\r\n\r\nJsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef = Jsonix.Class({\r\n\tconvertFromTypedNamedValue : function(typedNamedValue, context, input, scope) {\r\n\t\tvar propertyName = typedNamedValue.name.toCanonicalString(context);\r\n\t\tvar value = {};\r\n\t\tvalue[propertyName] = typedNamedValue.value;\r\n\t\treturn value;\r\n\t}\r\n});\nJsonix.Binding.Marshaller = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, {\r\n\tcontext : null,\r\n\tinitialize : function(context) {\r\n\t\tJsonix.Util.Ensure.ensureObject(context);\r\n\t\tthis.context = context;\r\n\t},\r\n\tmarshalString : function(value) {\r\n\t\tvar doc = this.marshalDocument(value);\r\n\t\tvar text = Jsonix.DOM.serialize(doc);\r\n\t\treturn text;\r\n\t},\r\n\tmarshalDocument : function(value) {\r\n\t\tvar output = new Jsonix.XML.Output({\r\n\t\t\tnamespacePrefixes : this.context.namespacePrefixes\r\n\t\t});\r\n\r\n\t\tvar doc = output.writeStartDocument();\r\n\t\tthis.marshalElement(value, this.context, output, undefined);\r\n\t\toutput.writeEndDocument();\r\n\t\treturn doc;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Binding.Marshaller'\r\n});\r\nJsonix.Binding.Marshaller.Simplified = Jsonix.Class(Jsonix.Binding.Marshaller, {\r\n\tCLASS_NAME : 'Jsonix.Binding.Marshaller.Simplified'\r\n});\nJsonix.Binding.Unmarshaller = Jsonix.Class(Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.Element.AsElementRef, {\r\n\tcontext : null,\r\n\tallowTypedObject : true,\r\n\tallowDom : false,\r\n\tinitialize : function(context) {\r\n\t\tJsonix.Util.Ensure.ensureObject(context);\r\n\t\tthis.context = context;\r\n\t},\r\n\tunmarshalString : function(text) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar doc = Jsonix.DOM.parse(text);\r\n\t\treturn this.unmarshalDocument(doc);\r\n\t},\r\n\tunmarshalURL : function(url, callback, options) {\r\n\t\tJsonix.Util.Ensure.ensureString(url);\r\n\t\tJsonix.Util.Ensure.ensureFunction(callback);\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t}\r\n\t\tthat = this;\r\n\t\tJsonix.DOM.load(url, function(doc) {\r\n\t\t\tcallback(that.unmarshalDocument(doc));\r\n\t\t}, options);\r\n\t},\r\n\tunmarshalFile : function(fileName, callback, options) {\r\n\t\tif (typeof _jsonix_fs === 'undefined') {\r\n\t\t\tthrow new Error(\"File unmarshalling is only available in environments which support file systems.\");\r\n\t\t}\r\n\t\tJsonix.Util.Ensure.ensureString(fileName);\r\n\t\tJsonix.Util.Ensure.ensureFunction(callback);\r\n\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t}\r\n\t\tthat = this;\r\n\t\tvar fs = _jsonix_fs;\r\n\t\tfs.readFile(fileName, options, function(err, data) {\r\n\t\t\tif (err) {\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tvar text = data.toString();\r\n\t\t\t\tvar doc = Jsonix.DOM.parse(text);\r\n\t\t\t\tcallback(that.unmarshalDocument(doc));\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\tunmarshalDocument : function(doc, scope) {\r\n\t\tvar input = new Jsonix.XML.Input(doc);\r\n\t\tvar result = null;\r\n\t\tvar callback = function(_result) {\r\n\t\t\tresult = _result;\r\n\t\t};\r\n\t\tinput.nextTag();\r\n\t\tthis.unmarshalElement(this.context, input, scope, callback);\r\n\t\treturn result;\r\n\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Binding.Unmarshaller'\r\n});\r\nJsonix.Binding.Unmarshaller.Simplified = Jsonix.Class(Jsonix.Binding.Unmarshaller, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Binding.Unmarshaller.Simplified'\r\n});\nJsonix.Model.TypeInfo = Jsonix.Class({\r\n\tname : null,\r\n\tbaseTypeInfo : null,\r\n\tinitialize : function() {\r\n\t},\r\n\tisBasedOn : function(typeInfo) {\r\n\t\tvar currentTypeInfo = this;\r\n\t\twhile (currentTypeInfo) {\r\n\t\t\tif (typeInfo === currentTypeInfo) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcurrentTypeInfo = currentTypeInfo.baseTypeInfo;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.TypeInfo'\r\n});\nJsonix.Model.ClassInfo = Jsonix\r\n\t\t.Class(Jsonix.Model.TypeInfo, Jsonix.Mapping.Styled, {\r\n\t\t\tname : null,\r\n\t\t\tlocalName : null,\r\n\t\t\ttypeName : null,\r\n\t\t\tinstanceFactory : null,\r\n\t\t\tproperties : null,\r\n\t\t\tpropertiesMap : null,\r\n\t\t\tstructure : null,\r\n\t\t\ttargetNamespace : '',\r\n\t\t\tdefaultElementNamespaceURI : '',\r\n\t\t\tdefaultAttributeNamespaceURI : '',\r\n\t\t\tbuilt : false,\r\n\t\t\tinitialize : function(mapping, options) {\r\n\t\t\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t\t\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [options]);\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\t\tvar n = mapping.name||mapping.n||undefined;\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\t\t\tthis.name = n;\r\n\t\t\t\t\r\n\t\t\t\tvar ln = mapping.localName||mapping.ln||null;\r\n\t\t\t\tthis.localName = ln;\r\n\r\n\t\t\t\tvar dens = mapping.defaultElementNamespaceURI||mapping.dens||mapping.targetNamespace||mapping.tns||'';\r\n\t\t\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\t\t\r\n\t\t\t\tvar tns =  mapping.targetNamespace||mapping.tns||mapping.defaultElementNamespaceURI||mapping.dens||this.defaultElementNamespaceURI;\r\n\t\t\t\tthis.targetNamespace = tns;\r\n\r\n\t\t\t\tvar dans = mapping.defaultAttributeNamespaceURI||mapping.dans||'';\r\n\t\t\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\t\t\t\r\n\t\t\t\tvar bti = mapping.baseTypeInfo||mapping.bti||null;\r\n\t\t\t\tthis.baseTypeInfo = bti;\r\n\t\t\t\t\r\n\t\t\t\tvar inF = mapping.instanceFactory||mapping.inF||undefined;\r\n\t\t\t\tif (Jsonix.Util.Type.exists(inF)) {\r\n\t\t\t\t\t// TODO: should we support instanceFactory as functions?\r\n\t\t\t\t\t// For the pure JSON configuration?\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureFunction(inF);\r\n\t\t\t\t\tthis.instanceFactory = inF;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar tn = mapping.typeName||mapping.tn||undefined;\r\n\t\t\t\t\r\n\t\t\t\tif (Jsonix.Util.Type.exists(tn))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(tn))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.typeName = new Jsonix.XML.QName(this.targetNamespace, tn);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.typeName = Jsonix.XML.QName.fromObject(tn);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Jsonix.Util.Type.exists(ln))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.typeName = new Jsonix.XML.QName(tns, ln);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.properties = [];\r\n\t\t\t\tthis.propertiesMap = {};\r\n\t\t\t\tvar ps = mapping.propertyInfos||mapping.ps||[];\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(ps);\r\n\t\t\t\tfor ( var index = 0; index < ps.length; index++) {\r\n\t\t\t\t\tthis.p(ps[index]);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t\tgetPropertyInfoByName : function(name) {\r\n\t\t\t\treturn this.propertiesMap[name];\r\n\t\t\t},\r\n\t\t\t// Obsolete\r\n\t\t\tdestroy : function() {\r\n\t\t\t},\r\n\t\t\tbuild : function(context, module) {\r\n\t\t\t\tif (!this.built) {\r\n\t\t\t\t\tthis.baseTypeInfo = context.resolveTypeInfo(this.baseTypeInfo, module);\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\t\tthis.baseTypeInfo.build(context, module);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Build properties in this context\r\n\t\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\t\tpropertyInfo.build(context, module);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Build the structure\r\n\t\t\t\t\tvar structure = {\r\n\t\t\t\t\t\telements : null,\r\n\t\t\t\t\t\tattributes : {},\r\n\t\t\t\t\t\tanyAttribute : null,\r\n\t\t\t\t\t\tvalue : null,\r\n\t\t\t\t\t\tany : null\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.buildStructure(context, structure);\r\n\t\t\t\t\tthis.structure = structure;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildStructure : function(context, structure) {\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\tthis.baseTypeInfo.buildStructure(context, structure);\r\n\t\t\t\t}\r\n\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\tpropertyInfo.buildStructure(context, structure);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tunmarshal : function(context, input) {\r\n\t\t\t\tthis.build(context);\r\n\t\t\t\tvar result;\r\n\t\t\t\t\r\n\t\t\t\tif (this.instanceFactory) {\r\n\t\t\t\t\tresult = new this.instanceFactory();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = { TYPE_NAME : this.name }; \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (input.eventType !== 1) {\r\n\t\t\t\t\tthrow new Error(\"Parser must be on START_ELEMENT to read a class info.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Read attributes\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.attributes)) {\r\n\t\t\t\t\tvar attributeCount = input.getAttributeCount();\r\n\t\t\t\t\tif (attributeCount !== 0) {\r\n\t\t\t\t\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\t\t\t\t\tvar attributeNameKey = input\r\n\t\t\t\t\t\t\t\t\t.getAttributeNameKey(index);\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.attributes[attributeNameKey])) {\r\n\t\t\t\t\t\t\t\tvar attributeValue = input\r\n\t\t\t\t\t\t\t\t\t\t.getAttributeValue(index);\r\n\t\t\t\t\t\t\t\tif (Jsonix.Util.Type.isString(attributeValue)) {\r\n\t\t\t\t\t\t\t\t\tvar attributePropertyInfo = this.structure.attributes[attributeNameKey];\r\n\t\t\t\t\t\t\t\t\tthis.unmarshalPropertyValue(context, input,\r\n\t\t\t\t\t\t\t\t\t\t\tattributePropertyInfo, result,\r\n\t\t\t\t\t\t\t\t\t\t\tattributeValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Read any attribute\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.anyAttribute)) {\r\n\t\t\t\t\tvar propertyInfo = this.structure.anyAttribute;\r\n\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t.unmarshalProperty(context, input, propertyInfo,\r\n\t\t\t\t\t\t\t\t\tresult);\r\n\t\t\t\t}\r\n\t\t\t\t// Read elements\r\n\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.elements)) {\r\n\r\n\t\t\t\t\tvar et = input.next();\r\n\t\t\t\t\twhile (et !== Jsonix.XML.Input.END_ELEMENT) {\r\n\t\t\t\t\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\t\t\t\t\t// New sub-element starts\r\n\t\t\t\t\t\t\tvar elementNameKey = input.getNameKey();\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.elements[elementNameKey])) {\r\n\t\t\t\t\t\t\t\tvar elementPropertyInfo = this.structure.elements[elementNameKey];\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\telementPropertyInfo, result);\r\n\t\t\t\t\t\t\t} else if (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t\t\t.exists(this.structure.any)) {\r\n\t\t\t\t\t\t\t\t// TODO Refactor\r\n\r\n\t\t\t\t\t\t\t\tvar anyPropertyInfo = this.structure.any;\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\tanyPropertyInfo, result);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// TODO optionally report a validation error that the element is not expected\r\n\t\t\t\t\t\t\t\tet = input.skipElement();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if ((et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\t\t\t\t\tif (Jsonix.Util.Type.exists(this.structure.mixed))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Characters and structure has a mixed property\r\n\t\t\t\t\t\t\t\tvar mixedPropertyInfo = this.structure.mixed;\r\n\t\t\t\t\t\t\t\tthis.unmarshalProperty(context, input,\r\n\t\t\t\t\t\t\t\t\t\tmixedPropertyInfo, result);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT\t|| et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t\t\t\t\t// Ignore\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et\t+ \"].\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tet = input.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (Jsonix.Util.Type.exists(this.structure.value)) {\r\n\t\t\t\t\tvar valuePropertyInfo = this.structure.value;\r\n\t\t\t\t\tthis.unmarshalProperty(context, input, valuePropertyInfo,\r\n\t\t\t\t\t\t\tresult);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Just skip everything\r\n\t\t\t\t\tinput.nextTag();\r\n\t\t\t\t}\r\n\t\t\t\tif (input.eventType !== 2) {\r\n\t\t\t\t\tthrow new Error(\"Illegal state: must be END_ELEMENT.\");\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t},\r\n\t\t\tunmarshalProperty : function(context, input, propertyInfo, result) {\r\n\t\t\t\tvar propertyValue = propertyInfo\r\n\t\t\t\t\t\t.unmarshal(context, input, this);\r\n\t\t\t\tpropertyInfo.setProperty(result, propertyValue);\r\n\t\t\t},\r\n\t\t\tunmarshalPropertyValue : function(context, input, propertyInfo,\r\n\t\t\t\t\tresult, value) {\r\n\t\t\t\tvar propertyValue = propertyInfo.unmarshalValue(value, context, input, this);\r\n\t\t\t\tpropertyInfo.setProperty(result, propertyValue);\r\n\t\t\t},\r\n\t\t\tmarshal : function(value, context, output, scope) {\r\n\t\t\t\tif (this.isMarshallable(value, context, scope))\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO This must be reworked\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(this.baseTypeInfo)) {\r\n\t\t\t\t\t\tthis.baseTypeInfo.marshal(value, context, output);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( var index = 0; index < this.properties.length; index++) {\r\n\t\t\t\t\t\tvar propertyInfo = this.properties[index];\r\n\t\t\t\t\t\tvar propertyValue = value[propertyInfo.name];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(propertyValue)) {\r\n\t\t\t\t\t\t\tpropertyInfo.marshal(propertyValue, context, output, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// Otherwise if there is just one property, use this property to marshal\r\n\t\t\t\t\tif (this.structure.value)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar valuePropertyInfo = this.structure.value;\r\n\t\t\t\t\t\tvaluePropertyInfo.marshal(value, context, output, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.properties.length === 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar singlePropertyInfo = this.properties[0];\r\n\t\t\t\t\t\tsinglePropertyInfo.marshal(value, context, output, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// TODO throw an error\r\n\t\t\t\t\t\tthrow new Error(\"The passed value [\" + value + \"] is not an object and there is no single suitable property to marshal it.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Checks if the value is marshallable\r\n\t\t\tisMarshallable : function(value, context, scope) {\r\n\t\t\t\treturn this.isInstance(value, context, scope) || (Jsonix.Util.Type.isObject(value) && !Jsonix.Util.Type.isArray(value));\r\n\t\t\t},\r\n\t\t\tisInstance : function(value, context, scope) {\r\n\t\t\t\tif (this.instanceFactory) {\r\n\t\t\t\t\treturn value instanceof this.instanceFactory;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn Jsonix.Util.Type.isObject(value) && Jsonix.Util.Type.isString(value.TYPE_NAME) && value.TYPE_NAME === this.name;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// Obsolete, left for backwards compatibility\r\n\t\t\tb : function(baseTypeInfo) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(baseTypeInfo);\r\n\t\t\t\tthis.baseTypeInfo = baseTypeInfo;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\t// Obsolete, left for backwards compatibility\r\n\t\t\tps : function() {\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tp : function(mapping) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\t\t// If mapping is an instance of the property class\r\n\t\t\t\tif (mapping instanceof Jsonix.Model.PropertyInfo) {\r\n\t\t\t\t\tthis.addProperty(mapping);\r\n\t\t\t\t}\r\n\t\t\t\t// Else create it via generic mapping configuration\r\n\t\t\t\telse {\r\n\t\t\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\t\t\tvar type = mapping.type||mapping.t||'element';\r\n\t\t\t\t\t// Locate the creator function\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isFunction(this.propertyInfoCreators[type])) {\r\n\t\t\t\t\t\tvar propertyInfoCreator = this.propertyInfoCreators[type];\r\n\t\t\t\t\t\t// Call the creator function\r\n\t\t\t\t\t\tpropertyInfoCreator.call(this, mapping);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error(\"Unknown property info type [\" + type + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taa : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.anyAttributePropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tae : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.anyElementPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ta : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.attributePropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tem : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementMapPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\te : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.elementPropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tes : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.elementsPropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ter : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementRefPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\ters : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this\r\n\t\t\t\t\t\t.addProperty(new this.mappingStyle.elementRefsPropertyInfo(\r\n\t\t\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\tv : function(mapping) {\r\n\t\t\t\tthis.addDefaultNamespaces(mapping);\r\n\t\t\t\treturn this.addProperty(new this.mappingStyle.valuePropertyInfo(\r\n\t\t\t\t\t\tmapping, {\r\n\t\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t\t}));\r\n\t\t\t},\r\n\t\t\taddDefaultNamespaces : function(mapping) {\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(mapping)) {\r\n\t\t\t\t\tif (!Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isString(mapping.defaultElementNamespaceURI)) {\r\n\t\t\t\t\t\tmapping.defaultElementNamespaceURI = this.defaultElementNamespaceURI;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isString(mapping.defaultAttributeNamespaceURI)) {\r\n\t\t\t\t\t\tmapping.defaultAttributeNamespaceURI = this.defaultAttributeNamespaceURI;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddProperty : function(property) {\r\n\t\t\t\tthis.properties.push(property);\r\n\t\t\t\tthis.propertiesMap[property.name] = property;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tCLASS_NAME : 'Jsonix.Model.ClassInfo'\r\n\t\t});\r\nJsonix.Model.ClassInfo.prototype.propertyInfoCreators = {\r\n\t\"aa\" : Jsonix.Model.ClassInfo.prototype.aa,\r\n\t\"anyAttribute\" : Jsonix.Model.ClassInfo.prototype.aa,\r\n\t\"ae\" : Jsonix.Model.ClassInfo.prototype.ae,\r\n\t\"anyElement\" : Jsonix.Model.ClassInfo.prototype.ae,\r\n\t\"a\" : Jsonix.Model.ClassInfo.prototype.a,\r\n\t\"attribute\" : Jsonix.Model.ClassInfo.prototype.a,\r\n\t\"em\" : Jsonix.Model.ClassInfo.prototype.em,\r\n\t\"elementMap\" : Jsonix.Model.ClassInfo.prototype.em,\r\n\t\"e\" : Jsonix.Model.ClassInfo.prototype.e,\r\n\t\"element\" : Jsonix.Model.ClassInfo.prototype.e,\r\n\t\"es\" : Jsonix.Model.ClassInfo.prototype.es,\r\n\t\"elements\" : Jsonix.Model.ClassInfo.prototype.es,\r\n\t\"er\" : Jsonix.Model.ClassInfo.prototype.er,\r\n\t\"elementRef\" : Jsonix.Model.ClassInfo.prototype.er,\r\n\t\"ers\" : Jsonix.Model.ClassInfo.prototype.ers,\r\n\t\"elementRefs\" : Jsonix.Model.ClassInfo.prototype.ers,\r\n\t\"v\" : Jsonix.Model.ClassInfo.prototype.v,\r\n\t\"value\" : Jsonix.Model.ClassInfo.prototype.v\r\n};\nJsonix.Model.EnumLeafInfo = Jsonix.Class(Jsonix.Model.TypeInfo, {\r\n\tname : null,\r\n\tbaseTypeInfo : 'String',\r\n\tentries : null,\r\n\tkeys : null,\r\n\tvalues : null,\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\r\n\t\tvar n = mapping.name||mapping.n||undefined;\r\n\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\tthis.name = n;\r\n\t\t\r\n\t\tvar bti = mapping.baseTypeInfo||mapping.bti||'String';\r\n\t\tthis.baseTypeInfo = bti;\r\n\t\t\r\n\t\tvar vs = mapping.values||mapping.vs||undefined;\r\n\t\tJsonix.Util.Ensure.ensureExists(vs);\r\n\t\tif (!(Jsonix.Util.Type.isObject(vs) || Jsonix.Util.Type.isArray(vs))) {\r\n\t\t\tthrow new Error('Enum values must be either an array or an object.');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.entries = vs;\r\n\t\t}\t\t\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\tif (!this.built) {\r\n\t\t\tthis.baseTypeInfo = context.resolveTypeInfo(this.baseTypeInfo, module);\r\n\t\t\tthis.baseTypeInfo.build(context, module);\r\n\t\t\tvar items = this.entries;\r\n\t\t\tvar entries = {};\r\n\t\t\tvar keys = [];\r\n\t\t\tvar values = [];\r\n\t\t\tvar index = 0;\r\n\t\t\tvar key;\r\n\t\t\tvar value;\r\n\t\t\t// If values is an array, process individual items\r\n\t\t\tif (Jsonix.Util.Type.isArray(items))\r\n\t\t\t{\r\n\t\t\t\t// Build properties in this context\r\n\t\t\t\tfor (index = 0; index < items.length; index++) {\r\n\t\t\t\t\tvalue = items[index];\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\t\tkey = value;\r\n\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.parse)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrow new Error('Enum value is provided as string but the base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the parse method.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Using null as input since input is not available\r\n\t\t\t\t\t\tvalue = this.baseTypeInfo.parse(value, context, null, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.baseTypeInfo.isInstance(value, context, this))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.print)))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('The base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the print method, unable to produce the enum key as string.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Using null as output since output is not available at this moment\r\n\t\t\t\t\t\t\tkey = this.baseTypeInfo.print(value, context, null, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrow new Error('Enum value [' + value + '] is not an instance of the enum base type [' + this.baseTypeInfo.name + '].');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tentries[key] = value;\r\n\t\t\t\t\tkeys[index] = key;\r\n\t\t\t\t\tvalues[index] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isObject(items))\r\n\t\t\t{\r\n\t\t\t\tfor (key in items) {\r\n\t\t\t\t\tif (items.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tvalue = items[key];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\t\t\tif (!(Jsonix.Util.Type.isFunction(this.baseTypeInfo.parse)))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('Enum value is provided as string but the base type ['+this.baseTypeInfo.name+'] of the enum info [' + this.name + '] does not implement the parse method.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Using null as input since input is not available\r\n\t\t\t\t\t\t\tvalue = this.baseTypeInfo.parse(value, context, null, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!this.baseTypeInfo.isInstance(value, context, this))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthrow new Error('Enum value [' + value + '] is not an instance of the enum base type [' + this.baseTypeInfo.name + '].');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tentries[key] = value;\r\n\t\t\t\t\t\tkeys[index] = key;\r\n\t\t\t\t\t\tvalues[index] = value;\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error('Enum values must be either an array or an object.');\r\n\t\t\t}\r\n\t\t\tthis.entries = entries;\r\n\t\t\tthis.keys = keys;\r\n\t\t\tthis.values = values;\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.parse(text, context, input, scope);\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeCharacters(this.reprint(value, context, output, scope));\r\n\t\t}\r\n\t},\r\n\treprint : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.isString(value) && !this.isInstance(value, context, scope)) {\r\n\t\t\t// Using null as input since input is not available\r\n\t\t\treturn this.print(this.parse(value, context, null, scope), context, output, scope);\r\n\t\t} else {\r\n\t\t\treturn this.print(value, context, output, scope);\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tfor (var index = 0; index < this.values.length; index++)\r\n\t\t{\r\n\t\t\tif (this.values[index] === value)\r\n\t\t\t{\r\n\t\t\t\treturn this.keys[index];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] is invalid for the enum type [' + this.name + '].');\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (this.entries.hasOwnProperty(text))\r\n\t\t{\r\n\t\t\treturn this.entries[text];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthrow new Error('Value [' + text + '] is invalid for the enum type [' + this.name + '].');\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\tfor (var index = 0; index < this.values.length; index++)\r\n\t\t{\r\n\t\t\tif (this.values[index] === value)\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.EnumLeafInfo'\r\n});\nJsonix.Model.ElementInfo = Jsonix.Class({\r\n\telementName : null,\r\n\ttypeInfo : null,\r\n\tsubstitutionHead : null,\r\n\tscope : null,\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\r\n\t\tvar dens = mapping.defaultElementNamespaceURI||mapping.dens||'';\r\n\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\r\n\t\tvar en = mapping.elementName || mapping.en||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(en);\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t}\r\n\t\t\r\n\t\tvar ti = mapping.typeInfo||mapping.ti||'String';\r\n\t\tthis.typeInfo = ti;\r\n\t\t\r\n\t\tvar sh = mapping.substitutionHead||mapping.sh||null;\r\n\t\tthis.substitutionHead = sh;\r\n\t\t\r\n\t\tvar sc = mapping.scope||mapping.sc||null;\r\n\t\tthis.scope = sc;\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\t// If element info is not yet built\r\n\t\tif (!this.built) {\r\n\t\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t\t\tthis.scope = context.resolveTypeInfo(this.scope, module);\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementInfo'\r\n});\nJsonix.Model.PropertyInfo = Jsonix.Class({\r\n\tname : null,\r\n\tcollection : false,\r\n\ttargetNamespace : '',\r\n\tdefaultElementNamespaceURI : '',\r\n\tdefaultAttributeNamespaceURI : '',\r\n\tbuilt : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar n = mapping.name || mapping.n || undefined;\r\n\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\tthis.name = n;\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || mapping.targetNamespace || mapping.tns || '';\r\n\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\tvar tns = mapping.targetNamespace || mapping.tns || mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tthis.targetNamespace = tns;\r\n\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || '';\r\n\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\tvar col = mapping.collection || mapping.col || false;\r\n\t\tthis.collection = col;\r\n\t\tvar rq = mapping.required || mapping.rq || false;\r\n\t\tthis.required = rq;\r\n\t\tif (this.collection) {\r\n\t\t\tvar mno;\r\n\t\t\tif (Jsonix.Util.Type.isNumber(mapping.minOccurs)) {\r\n\t\t\t\tmno = mapping.minOccurs;\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isNumber(mapping.mno)) {\r\n\t\t\t\tmno = mapping.mno;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmno = 1;\r\n\t\t\t}\r\n\t\t\tthis.minOccurs = mno;\r\n\t\t\tvar mxo;\r\n\t\t\tif (Jsonix.Util.Type.isNumber(mapping.maxOccurs)) {\r\n\t\t\t\tmxo = mapping.maxOccurs;\r\n\t\t\t}\r\n\t\t\telse if (Jsonix.Util.Type.isNumber(mapping.mxo)) {\r\n\t\t\t\tmxo = mapping.mxo;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmxo = null;\r\n\t\t\t}\r\n\t\t\tthis.maxOccurs = mxo;\r\n\t\t}\r\n\t},\r\n\tbuild : function(context, module) {\r\n\t\tif (!this.built) {\r\n\t\t\tthis.doBuild(context, module);\r\n\t\t\tthis.built = true;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthrow new Error(\"Abstract method [doBuild].\");\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructure].\");\r\n\t},\r\n\tsetProperty : function(object, value) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tif (this.collection) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(value, 'Collection property requires an array value.');\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(object[this.name])) {\r\n\t\t\t\t\tobject[this.name] = [];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\t\tobject[this.name].push(value[index]);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tobject[this.name] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.PropertyInfo'\r\n});\nJsonix.Model.AnyAttributePropertyInfo = Jsonix.Class(Jsonix.Model.PropertyInfo, {\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar attributeCount = input.getAttributeCount();\r\n\t\tif (attributeCount === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tvar result = {};\r\n\t\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\t\tvar value = input.getAttributeValue(index);\r\n\t\t\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\t\t\tvar propertyName = this.convertFromAttributeName(input.getAttributeName(index), context, input, scope);\r\n\t\t\t\t\tresult[propertyName] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.isObject(value)) {\r\n\t\t\t// Nothing to do\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor ( var propertyName in value) {\r\n\t\t\tif (value.hasOwnProperty(propertyName)) {\r\n\t\t\t\tvar propertyValue = value[propertyName];\r\n\t\t\t\tif (Jsonix.Util.Type.isString(propertyValue)) {\r\n\t\t\t\t\tvar attributeName = this.convertToAttributeName(propertyName, context, output, scope);\r\n\t\t\t\t\toutput.writeAttribute(attributeName, propertyValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tconvertFromAttributeName : function(attributeName, context, input, scope) {\r\n\t\treturn attributeName.key;\r\n\t},\r\n\tconvertToAttributeName : function(propertyName, context, output, scope) {\r\n\t\treturn Jsonix.XML.QName.fromObjectOrString(propertyName, context);\r\n\t},\r\n\tdoBuild : function(context, module)\t{\r\n\t\t// Nothing to do\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\t// if (Jsonix.Util.Type.exists(structure.anyAttribute))\r\n\t\t// {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an any attribute\r\n\t\t// property.\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\tstructure.anyAttribute = this;\r\n\t\t// }\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AnyAttributePropertyInfo'\r\n});\r\nJsonix.Model.AnyAttributePropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.AnyAttributePropertyInfo, {\r\n\tconvertFromAttributeName : function(attributeName, context, input, scope)\r\n\t{\r\n\t\treturn attributeName.toCanonicalString(context);\r\n\t}\r\n});\r\n\nJsonix.Model.SingleTypePropertyInfo = Jsonix.Class(Jsonix.Model.PropertyInfo, {\r\n\ttypeInfo : 'String',\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tthis.typeInfo = ti;\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tunmarshalValue : function(value, context, input, scope) {\r\n\t\treturn this.parse(value, context, input, scope);\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.typeInfo.parse(value, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.typeInfo.reprint(value, context, output, scope);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.SingleTypePropertyInfo'\r\n});\r\n\nJsonix.Model.AttributePropertyInfo = Jsonix.Class(Jsonix.Model.SingleTypePropertyInfo, {\r\n\tattributeName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.SingleTypePropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar an = mapping.attributeName||mapping.an||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(an)) {\r\n\t\t\tthis.attributeName = Jsonix.XML.QName.fromObject(an);\r\n\t\t} else if (Jsonix.Util.Type.isString(an)) {\r\n\t\t\tthis.attributeName = new Jsonix.XML.QName(this.defaultAttributeNamespaceURI, an);\r\n\t\t} else {\r\n\t\t\tthis.attributeName = new Jsonix.XML.QName(this.defaultAttributeNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar attributeCount = input.getAttributeCount();\r\n\t\tvar result = null;\r\n\t\tfor ( var index = 0; index < attributeCount; index++) {\r\n\t\t\tvar attributeNameKey = input.getAttributeNameKey(index);\r\n\t\t\tif (this.attributeName.key === attributeNameKey) {\r\n\t\t\t\tvar attributeValue = input.getAttributeValue(index);\r\n\t\t\t\tif (Jsonix.Util.Type.isString(attributeValue)) {\r\n\t\t\t\t\tresult = this.unmarshalValue(attributeValue, context, input, scope);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeAttribute(this.attributeName, this.print(value, context, output, scope));\r\n\t\t}\r\n\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tJsonix.Util.Ensure.ensureObject(structure.attributes);\r\n\t\tvar key = this.attributeName.key;\r\n\t\t// if (Jsonix.Util.Type.exists(structure.attributes[key])) {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an attribute for the key\r\n\t\t// [\"\r\n\t\t// + key + \"].\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\tstructure.attributes[key] = this;\r\n\t\t// }\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AttributePropertyInfo'\r\n});\r\n\nJsonix.Model.ValuePropertyInfo = Jsonix.Class(Jsonix.Model.SingleTypePropertyInfo, {\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.SingleTypePropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.unmarshalValue(text, context, input, scope);\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\toutput.writeCharacters(this.print(value, context, output, scope));\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\t// if (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines a value\r\n\t\t// property.\");\r\n\t\t// } else\r\n\t\tif (Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines element mappings, it cannot define a value property.\");\r\n\t\t} else {\r\n\t\t\tstructure.value = this;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ValuePropertyInfo'\r\n});\r\n\nJsonix.Model.AbstractElementsPropertyInfo = Jsonix.Class(Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.WrapperElement, Jsonix.Model.PropertyInfo, {\r\n\twrapperElementName : null,\r\n\tallowDom : false,\r\n\tallowTypedObject : true,\r\n\tmixed : false,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar wen = mapping.wrapperElementName||mapping.wen||undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(wen)) {\r\n\t\t\tthis.wrapperElementName = Jsonix.XML.QName.fromObject(wen);\r\n\t\t} else if (Jsonix.Util.Type.isString(wen)) {\r\n\t\t\tthis.wrapperElementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, wen);\r\n\t\t} else {\r\n\t\t\tthis.wrapperElementName = null;\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t} else {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t// Do nothing\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t}\r\n\r\n\t\tif (!this.collection) {\r\n\t\t\tthis.marshalElement(value, context, output, scope);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\t// TODO Exception if not array\r\n\t\t\tfor ( var index = 0; index < value.length; index++) {\r\n\t\t\t\tvar item = value[index];\r\n\t\t\t\t// TODO Exception if item does not exist\r\n\t\t\t\tthis.marshalElement(item, context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeEndElement();\r\n\t\t}\r\n\t},\r\n\tconvertFromTypedNamedValue : function(elementValue, context, input, scope) {\r\n\t\treturn elementValue.value;\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tstructure.elements[this.wrapperElementName.key] = this;\r\n\t\t} else {\r\n\t\t\tthis.buildStructureElements(context, structure);\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructureElements].\");\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AbstractElementsPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, Jsonix.Binding.Marshalls.Element, {\r\n\ttypeInfo : 'String',\r\n\telementName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tif (Jsonix.Util.Type.isObject(ti)) {\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(ti);\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t}\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\treturn this.typeInfo;\r\n\t},\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\treturn {\r\n\t\t\tname : this.elementName,\r\n\t\t\tvalue : value,\r\n\t\t\ttypeInfo : this.typeInfo\r\n\t\t};\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tstructure.elements[this.elementName.key] = this;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementsPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, Jsonix.Binding.Marshalls.Element, {\r\n\telementTypeInfos : null,\r\n\telementTypeInfosMap : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar etis = mapping.elementTypeInfos || mapping.etis || [];\r\n\t\tJsonix.Util.Ensure.ensureArray(etis);\r\n\t\tthis.elementTypeInfos = [];\r\n\t\tfor (var index = 0; index < etis.length; index++) {\r\n\t\t\tthis.elementTypeInfos[index] = Jsonix.Util.Type.cloneObject(etis[index]);\r\n\t\t}\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\treturn this.elementTypeInfosMap[elementName.key];\r\n\t},\r\n\tconvertToTypedNamedValue : function(value, context, output, scope) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tvar typeInfo = elementTypeInfo.typeInfo;\r\n\t\t\tif (typeInfo.isInstance(value, context, scope)) {\r\n\t\t\t\tvar elementName = elementTypeInfo.elementName;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname : elementName,\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If xsi:type is supported\r\n\t\tif (context.supportXsiType) {\r\n\t\t\t// Find the actual type\r\n\t\t\tvar actualTypeInfo = context.getTypeInfoByValue(value);\r\n\t\t\tif (actualTypeInfo && actualTypeInfo.typeName) {\r\n\t\t\t\tfor (var jndex = 0; jndex < this.elementTypeInfos.length; jndex++) {\r\n\t\t\t\t\tvar eti = this.elementTypeInfos[jndex];\r\n\t\t\t\t\tvar ti = eti.typeInfo;\r\n\t\t\t\t\t// TODO Can be optimized\r\n\t\t\t\t\t// Find an element type info which has a type info that is a\r\n\t\t\t\t\t// supertype of the actual type info\r\n\t\t\t\t\tif (actualTypeInfo.isBasedOn(ti)) {\r\n\t\t\t\t\t\tvar en = eti.elementName;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tname : en,\r\n\t\t\t\t\t\t\tvalue : value,\r\n\t\t\t\t\t\t\ttypeInfo : ti\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO harmonize error handling. See also marshallElement. Error must\r\n\t\t// only be on one place.\r\n\t\tthrow new Error(\"Could not find an element with type info supporting the value [\" + value + \"].\");\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.elementTypeInfosMap = {};\r\n\t\tvar etiti, etien;\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tJsonix.Util.Ensure.ensureObject(elementTypeInfo);\r\n\t\t\tetiti = elementTypeInfo.typeInfo || elementTypeInfo.ti || 'String';\r\n\t\t\telementTypeInfo.typeInfo = context.resolveTypeInfo(etiti, module);\r\n\t\t\tetien = elementTypeInfo.elementName || elementTypeInfo.en || undefined;\r\n\t\t\telementTypeInfo.elementName = Jsonix.XML.QName.fromObjectOrString(etien, context, this.defaultElementNamespaceURI);\r\n\t\t\tthis.elementTypeInfosMap[elementTypeInfo.elementName.key] = elementTypeInfo.typeInfo;\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tstructure.elements[elementTypeInfo.elementName.key] = this;\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementsPropertyInfo'\r\n});\r\n\nJsonix.Model.ElementMapPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementsPropertyInfo, {\r\n\telementName : null,\r\n\tkey : null,\r\n\tvalue : null,\r\n\tentryTypeInfo : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar k = mapping.key || mapping.k || undefined;\r\n\t\tJsonix.Util.Ensure.ensureObject(k);\r\n\t\tvar v = mapping.value || mapping.v || undefined;\r\n\t\tJsonix.Util.Ensure.ensureObject(v);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t\tthis.entryTypeInfo = new Jsonix.Model.ClassInfo({\r\n\t\t\tname : 'Map<' + k.name + ',' + v.name + '>',\r\n\t\t\tpropertyInfos : [ k, v ]\r\n\t\t});\r\n\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\r\n\t\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(value, 'Map property requires an object.');\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(result)) {\r\n\t\t\t\t\tresult = {};\r\n\t\t\t\t}\r\n\t\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\t\tif (that.collection) {\r\n\t\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(result[attributeName])) {\r\n\t\t\t\t\t\t\t\tresult[attributeName] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult[attributeName].push(attributeValue);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(result[attributeName])) {\r\n\t\t\t\t\t\t\t\tresult[attributeName] = attributeValue;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\t\t\t\tthrow new Error(\"Value was already set.\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t} else {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tgetTypeInfoByInputElement : function(context, input, scope) {\r\n\t\treturn this.entryTypeInfo;\r\n\t},\r\n\tconvertFromTypedNamedValue : function(elementValue, context, input, scope) {\r\n\t\tvar entry = elementValue.value;\r\n\t\tvar result = {};\r\n\t\tif (Jsonix.Util.Type.isString(entry[this.key.name])) {\r\n\t\t\tresult[entry[this.key.name]] = entry[this.value.name];\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t// Do nothing\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t}\r\n\r\n\t\tthis.marshalElement(value, context, output, scope);\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\toutput.writeEndElement();\r\n\t\t}\r\n\t},\r\n\tmarshalElement : function(value, context, output, scope) {\r\n\t\tif (!!value) {\r\n\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\tif (!this.collection) {\r\n\t\t\t\t\t\tvar singleEntry = {};\r\n\t\t\t\t\t\tsingleEntry[this.key.name] = attributeName;\r\n\t\t\t\t\t\tsingleEntry[this.value.name] = attributeValue;\r\n\t\t\t\t\t\toutput.writeStartElement(this.elementName);\r\n\t\t\t\t\t\tthis.entryTypeInfo.marshal(singleEntry, context, output, scope);\r\n\t\t\t\t\t\toutput.writeEndElement();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var index = 0; index < attributeValue.length; index++) {\r\n\t\t\t\t\t\t\tvar collectionEntry = {};\r\n\t\t\t\t\t\t\tcollectionEntry[this.key.name] = attributeName;\r\n\t\t\t\t\t\t\tcollectionEntry[this.value.name] = attributeValue[index];\r\n\t\t\t\t\t\t\toutput.writeStartElement(this.elementName);\r\n\t\t\t\t\t\t\tthis.entryTypeInfo.marshal(collectionEntry, context, output, scope);\r\n\t\t\t\t\t\t\toutput.writeEndElement();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.entryTypeInfo.build(context, module);\r\n\t\t// TODO get property by name\r\n\t\tthis.key = this.entryTypeInfo.properties[0];\r\n\t\tthis.value = this.entryTypeInfo.properties[1];\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tstructure.elements[this.elementName.key] = this;\r\n\t},\r\n\tsetProperty : function(object, value) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(value, 'Map property requires an object.');\r\n\t\t\tif (!Jsonix.Util.Type.exists(object[this.name])) {\r\n\t\t\t\tobject[this.name] = {};\r\n\t\t\t}\r\n\t\t\tvar map = object[this.name];\r\n\t\t\tfor ( var attributeName in value) {\r\n\t\t\t\tif (value.hasOwnProperty(attributeName)) {\r\n\t\t\t\t\tvar attributeValue = value[attributeName];\r\n\t\t\t\t\tif (this.collection) {\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(map[attributeName])) {\r\n\t\t\t\t\t\t\tmap[attributeName] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var index = 0; index < attributeValue.length; index++) {\r\n\t\t\t\t\t\t\tmap[attributeName].push(attributeValue[index]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmap[attributeName] = attributeValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementMapPropertyInfo'\r\n});\r\n\nJsonix.Model.AbstractElementRefsPropertyInfo = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.WrapperElement, Jsonix.Binding.Unmarshalls.Element.AsElementRef, Jsonix.Model.PropertyInfo, {\r\n\twrapperElementName : null,\r\n\tallowDom : true,\r\n\tallowTypedObject : true,\r\n\tmixed : true,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping, 'Mapping must be an object.');\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar wen = mapping.wrapperElementName || mapping.wen || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(wen)) {\r\n\t\t\tthis.wrapperElementName = Jsonix.XML.QName.fromObject(wen);\r\n\t\t} else if (Jsonix.Util.Type.isString(wen)) {\r\n\t\t\tthis.wrapperElementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, wen);\r\n\t\t} else {\r\n\t\t\tthis.wrapperElementName = null;\r\n\t\t}\r\n\t\tvar dom = Jsonix.Util.Type.defaultValue(mapping.allowDom, mapping.dom, true);\r\n\t\tvar typed = Jsonix.Util.Type.defaultValue(mapping.allowTypedObject, mapping.typed, true);\r\n\t\tvar mx = Jsonix.Util.Type.defaultValue(mapping.mixed, mapping.mx, true);\r\n\t\tthis.allowDom = dom;\r\n\t\tthis.allowTypedObject = typed;\r\n\t\tthis.mixed = mx;\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar et = input.eventType;\r\n\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\tthis.unmarshalWrapperElement(context, input, scope, callback);\r\n\t\t\t} else {\r\n\t\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t\t}\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\tcallback(input.getText());\r\n\t\t} else if (et === Jsonix.XML.Input.SPACE || et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t// Skip whitespace\r\n\t\t} else {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\toutput.writeStartElement(this.wrapperElementName);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.collection) {\r\n\t\t\t\tthis.marshalItem(value, context, output, scope);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureArray(value, 'Collection property requires an array value.');\r\n\t\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\t\tvar item = value[index];\r\n\t\t\t\t\tthis.marshalItem(item, context, output, scope);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t\toutput.writeEndElement();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\tmarshalItem : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.isString(value)) {\r\n\t\t\tif (!this.mixed) {\r\n\t\t\t\t// TODO\r\n\t\t\t\tthrow new Error(\"Property is not mixed, can't handle string values.\");\r\n\t\t\t} else {\r\n\t\t\t\toutput.writeCharacters(value);\r\n\t\t\t}\r\n\t\t} else if (this.allowDom && Jsonix.Util.Type.exists(value.nodeType)) {\r\n\t\t\t// DOM node\r\n\t\t\toutput.writeNode(value);\r\n\t\t} else if (Jsonix.Util.Type.isObject(value)) {\r\n\t\t\tthis.marshalElement(value, context, output, scope);\r\n\r\n\t\t} else {\r\n\t\t\tif (this.mixed) {\r\n\t\t\t\tthrow new Error(\"Unsupported content type, either objects or strings are supported.\");\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Unsupported content type, only objects are supported.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\tgetTypeInfoByElementName : function(elementName, context, scope) {\r\n\t\tvar propertyElementTypeInfo = this.getPropertyElementTypeInfo(elementName, context);\r\n\t\tif (Jsonix.Util.Type.exists(propertyElementTypeInfo)) {\r\n\t\t\treturn propertyElementTypeInfo.typeInfo;\r\n\t\t} else {\r\n\t\t\tvar contextElementTypeInfo = context.getElementInfo(elementName, scope);\r\n\t\t\tif (Jsonix.Util.Type.exists(contextElementTypeInfo)) {\r\n\t\t\t\treturn contextElementTypeInfo.typeInfo;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tthrow new Error(\"Abstract method [getPropertyElementTypeInfo].\");\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif (Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\tstructure.elements[this.wrapperElementName.key] = this;\r\n\t\t} else {\r\n\t\t\tthis.buildStructureElements(context, structure);\r\n\t\t}\r\n\r\n\t\t// if (Jsonix.Util.Type.exists(structure.elements[key]))\r\n\t\t// {\r\n\t\t// // TODO better exception\r\n\t\t// throw new Error(\"The structure already defines an element for\r\n\t\t// the key [\"\r\n\t\t// + key + \"].\");\r\n\t\t// } else\r\n\t\t// {\r\n\t\t// structure.elements[key] = this;\r\n\t\t// }\r\n\r\n\t\tif ((this.allowDom || this.allowTypedObject)) {\r\n\t\t\tstructure.any = this;\r\n\t\t}\r\n\t\tif (this.mixed && !Jsonix.Util.Type.exists(this.wrapperElementName)) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.mixed)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the mixed\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.mixed = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthrow new Error(\"Abstract method [buildStructureElements].\");\r\n\t},\r\n\tbuildStructureElementTypeInfos : function(context, structure, elementTypeInfo) {\r\n\t\tstructure.elements[elementTypeInfo.elementName.key] = this;\r\n\t\tvar substitutionMembers = context.getSubstitutionMembers(elementTypeInfo.elementName);\r\n\t\tif (Jsonix.Util.Type.isArray(substitutionMembers)) {\r\n\t\t\tfor (var jndex = 0; jndex < substitutionMembers.length; jndex++) {\r\n\t\t\t\tvar substitutionElementInfo = substitutionMembers[jndex];\r\n\t\t\t\tthis.buildStructureElementTypeInfos(context, structure, substitutionElementInfo);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AbstractElementRefsPropertyInfo'\r\n});\nJsonix.Model.ElementRefPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementRefsPropertyInfo, {\r\n\ttypeInfo : 'String',\r\n\telementName : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementRefsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct argument\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tif (Jsonix.Util.Type.isObject(ti)) {\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureString(ti);\r\n\t\t\tthis.typeInfo = ti;\r\n\t\t}\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tthis.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthis.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, this.name);\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tvar name = Jsonix.XML.QName.fromObjectOrString(elementName, context);\r\n\r\n\t\tif (name.key === this.elementName.key) {\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tthis.buildStructureElementTypeInfos(context, structure, this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefPropertyInfo'\r\n});\r\nJsonix.Model.ElementRefPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.ElementRefPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefPropertyInfo.Simplified'\r\n});\nJsonix.Model.ElementRefsPropertyInfo = Jsonix.Class(Jsonix.Model.AbstractElementRefsPropertyInfo, {\r\n\telementTypeInfos : null,\r\n\telementTypeInfosMap : null,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.AbstractElementRefsPropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\t// TODO Ensure correct arguments\r\n\t\tvar etis = mapping.elementTypeInfos || mapping.etis || [];\r\n\t\tJsonix.Util.Ensure.ensureArray(etis);\r\n\t\tthis.elementTypeInfos = [];\r\n\t\tfor (var index = 0; index < etis.length; index++)\r\n\t\t{\r\n\t\t\tthis.elementTypeInfos[index] = Jsonix.Util.Type.cloneObject(etis[index]);\r\n\t\t}\r\n\t},\r\n\tgetPropertyElementTypeInfo : function(elementName, context) {\r\n\t\tvar name = Jsonix.XML.QName.fromObjectOrString(elementName, context);\r\n\r\n\t\tvar typeInfo = this.elementTypeInfosMap[name.key];\r\n\t\tif (Jsonix.Util.Type.exists(typeInfo)) {\r\n\t\t\treturn {\r\n\t\t\t\telementName : name,\r\n\t\t\t\ttypeInfo : typeInfo\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\tthis.elementTypeInfosMap = {};\r\n\t\tvar etiti, etien;\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tJsonix.Util.Ensure.ensureObject(elementTypeInfo);\r\n\t\t\tetiti = elementTypeInfo.typeInfo || elementTypeInfo.ti || 'String';\r\n\t\t\telementTypeInfo.typeInfo = context.resolveTypeInfo(etiti, module);\r\n\t\t\tetien = elementTypeInfo.elementName || elementTypeInfo.en || undefined;\r\n\t\t\telementTypeInfo.elementName = Jsonix.XML.QName.fromObjectOrString(etien, context, this.defaultElementNamespaceURI);\r\n\t\t\tthis.elementTypeInfosMap[elementTypeInfo.elementName.key] = elementTypeInfo.typeInfo;\r\n\t\t}\r\n\t},\r\n\tbuildStructureElements : function(context, structure) {\r\n\t\tfor (var index = 0; index < this.elementTypeInfos.length; index++) {\r\n\t\t\tvar elementTypeInfo = this.elementTypeInfos[index];\r\n\t\t\tthis.buildStructureElementTypeInfos(context, structure, elementTypeInfo);\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefsPropertyInfo'\r\n});\r\nJsonix.Model.ElementRefsPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.ElementRefsPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.ElementRefsPropertyInfo.Simplified'\r\n});\r\n\nJsonix.Model.AnyElementPropertyInfo = Jsonix.Class(Jsonix.Binding.Marshalls.Element, Jsonix.Binding.Marshalls.Element.AsElementRef, Jsonix.Binding.Unmarshalls.Element, Jsonix.Binding.Unmarshalls.Element.AsElementRef, Jsonix.Model.PropertyInfo, {\r\n\tallowDom : true,\r\n\tallowTypedObject : true,\r\n\tmixed : true,\r\n\tinitialize : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tJsonix.Model.PropertyInfo.prototype.initialize.apply(this, [ mapping ]);\r\n\t\tvar dom = Jsonix.Util.Type.defaultValue(mapping.allowDom, mapping.dom, true);\r\n\t\tvar typed = Jsonix.Util.Type.defaultValue(mapping.allowTypedObject, mapping.typed, true);\r\n\t\tvar mx = Jsonix.Util.Type.defaultValue(mapping.mixed, mapping.mx, true);\r\n\t\tthis.allowDom = dom;\r\n\t\tthis.allowTypedObject = typed;\r\n\t\tthis.mixed = mx;\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar result = null;\r\n\t\tvar that = this;\r\n\t\tvar callback = function(value) {\r\n\t\t\tif (that.collection) {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = [];\r\n\t\t\t\t}\r\n\t\t\t\tresult.push(value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (result === null) {\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO Report validation error\r\n\t\t\t\t\tthrow new Error(\"Value already set.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar et = input.eventType;\r\n\t\tif (et === Jsonix.XML.Input.START_ELEMENT) {\r\n\t\t\tthis.unmarshalElement(context, input, scope, callback);\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.CHARACTERS || et === Jsonix.XML.Input.CDATA || et === Jsonix.XML.Input.ENTITY_REFERENCE)) {\r\n\t\t\tcallback(input.getText());\r\n\t\t} else if (this.mixed && (et === Jsonix.XML.Input.SPACE)) {\r\n\t\t\t// Whitespace\r\n\t\t\t// return null;\r\n\t\t} else if (et === Jsonix.XML.Input.COMMENT || et === Jsonix.XML.Input.PROCESSING_INSTRUCTION) {\r\n\t\t\t// return null;\r\n\t\t} else {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"Illegal state: unexpected event type [\" + et + \"].\");\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.collection) {\r\n\t\t\tthis.marshalItem(value, context, output, scope);\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\tfor (var index = 0; index < value.length; index++) {\r\n\t\t\t\tthis.marshalItem(value[index], context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmarshalItem : function(value, context, output, scope) {\r\n\t\tif (this.mixed && Jsonix.Util.Type.isString(value)) {\r\n\t\t\t// Mixed\r\n\t\t\toutput.writeCharacters(value);\r\n\t\t} else if (this.allowDom && Jsonix.Util.Type.exists(value.nodeType)) {\r\n\t\t\t// DOM node\r\n\t\t\toutput.writeNode(value);\r\n\r\n\t\t} else {\r\n\t\t\tif (this.allowTypedObject) {\r\n\t\t\t\tthis.marshalElement(value, context, output, scope);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdoBuild : function(context, module) {\r\n\t\t// Nothing to do\r\n\t},\r\n\tbuildStructure : function(context, structure) {\r\n\t\tJsonix.Util.Ensure.ensureObject(structure);\r\n\t\tif (Jsonix.Util.Type.exists(structure.value)) {\r\n\t\t\t// TODO better exception\r\n\t\t\tthrow new Error(\"The structure already defines a value property.\");\r\n\t\t} else if (!Jsonix.Util.Type.exists(structure.elements)) {\r\n\t\t\tstructure.elements = {};\r\n\t\t}\r\n\r\n\t\tif ((this.allowDom || this.allowTypedObject)) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.any)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the any\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.any = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t\tif (this.mixed) {\r\n\t\t\t// if (Jsonix.Util.Type.exists(structure.mixed)) {\r\n\t\t\t// // TODO better exception\r\n\t\t\t// throw new Error(\"The structure already defines the mixed\r\n\t\t\t// property.\");\r\n\t\t\t// } else\r\n\t\t\t// {\r\n\t\t\tstructure.mixed = this;\r\n\t\t\t// }\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.AnyElementPropertyInfo'\r\n});\r\nJsonix.Model.AnyElementPropertyInfo.Simplified = Jsonix.Class(Jsonix.Model.AnyElementPropertyInfo, Jsonix.Binding.Unmarshalls.Element.AsSimplifiedElementRef, {\r\n\tCLASS_NAME : 'Jsonix.Model.AnyElementPropertyInfo.Simplified'\r\n});\nJsonix.Model.Module = Jsonix.Class(Jsonix.Mapping.Styled, {\r\n\tname : null,\r\n\ttypeInfos : null,\r\n\telementInfos : null,\r\n\ttargetNamespace : '',\r\n\tdefaultElementNamespaceURI : '',\r\n\tdefaultAttributeNamespaceURI : '',\r\n\tinitialize : function(mapping, options) {\r\n\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [ options ]);\r\n\t\tthis.typeInfos = [];\r\n\t\tthis.elementInfos = [];\r\n\t\tif (typeof mapping !== 'undefined') {\r\n\t\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\t\tvar n = mapping.name || mapping.n || null;\r\n\t\t\tthis.name = n;\r\n\t\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || mapping.targetNamespace || mapping.tns || '';\r\n\t\t\tthis.defaultElementNamespaceURI = dens;\r\n\t\t\tvar tns = mapping.targetNamespace || mapping.tns || mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\t\tthis.targetNamespace = tns;\r\n\t\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || '';\r\n\t\t\tthis.defaultAttributeNamespaceURI = dans;\r\n\t\t\t// Initialize type infos\r\n\t\t\tvar tis = mapping.typeInfos || mapping.tis || [];\r\n\t\t\tthis.initializeTypeInfos(tis);\r\n\r\n\t\t\t// Backwards compatibility: class infos can also be defined\r\n\t\t\t// as properties of the schema, for instance Schema.MyType\r\n\t\t\tfor ( var typeInfoName in mapping) {\r\n\t\t\t\tif (mapping.hasOwnProperty(typeInfoName)) {\r\n\t\t\t\t\tif (mapping[typeInfoName] instanceof this.mappingStyle.classInfo) {\r\n\t\t\t\t\t\tthis.typeInfos.push(mapping[typeInfoName]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar eis = mapping.elementInfos || mapping.eis || [];\r\n\t\t\t// Initialize element infos\r\n\t\t\tthis.initializeElementInfos(eis);\r\n\t\t}\r\n\t},\r\n\tinitializeTypeInfos : function(typeInfoMappings) {\r\n\t\tJsonix.Util.Ensure.ensureArray(typeInfoMappings);\r\n\t\tvar index, typeInfoMapping, typeInfo;\r\n\t\tfor (index = 0; index < typeInfoMappings.length; index++) {\r\n\t\t\ttypeInfoMapping = typeInfoMappings[index];\r\n\t\t\ttypeInfo = this.createTypeInfo(typeInfoMapping);\r\n\t\t\tthis.typeInfos.push(typeInfo);\r\n\t\t}\r\n\t},\r\n\tinitializeElementInfos : function(elementInfoMappings) {\r\n\t\tJsonix.Util.Ensure.ensureArray(elementInfoMappings);\r\n\t\tvar index, elementInfoMapping, elementInfo;\r\n\t\tfor (index = 0; index < elementInfoMappings.length; index++) {\r\n\t\t\telementInfoMapping = elementInfoMappings[index];\r\n\t\t\telementInfo = this.createElementInfo(elementInfoMapping);\r\n\t\t\tthis.elementInfos.push(elementInfo);\r\n\t\t}\r\n\t},\r\n\tcreateTypeInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar typeInfo;\r\n\t\t// If mapping is already a type info, do nothing\r\n\t\tif (mapping instanceof Jsonix.Model.TypeInfo) {\r\n\t\t\ttypeInfo = mapping;\r\n\t\t}\r\n\t\t// Else create it via generic mapping configuration\r\n\t\telse {\r\n\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\tvar type = mapping.type || mapping.t || 'classInfo';\r\n\t\t\t// Locate the creator function\r\n\t\t\tif (Jsonix.Util.Type.isFunction(this.typeInfoCreators[type])) {\r\n\t\t\t\tvar typeInfoCreator = this.typeInfoCreators[type];\r\n\t\t\t\t// Call the creator function\r\n\t\t\t\ttypeInfo = typeInfoCreator.call(this, mapping);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Unknown type info type [\" + type + \"].\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn typeInfo;\r\n\t},\r\n\tinitializeNames : function(mapping) {\r\n\t\tvar ln = mapping.localName || mapping.ln || null;\r\n\t\tmapping.localName = ln;\r\n\t\tvar n = mapping.name || mapping.n || null;\r\n\t\tmapping.name = n;\r\n\t\t// Calculate both name as well as localName\r\n\t\t// name is provided\r\n\t\tif (Jsonix.Util.Type.isString(mapping.name)) {\r\n\t\t\t// Obsolete code below\r\n\t\t\t// // localName is not provided\r\n\t\t\t// if (!Jsonix.Util.Type.isString(mapping.localName)) {\r\n\t\t\t// // But module name is provided\r\n\t\t\t// if (Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t// // If name starts with module name, use second part\r\n\t\t\t// // as local name\r\n\t\t\t// if (mapping.name.indexOf(this.name + '.') === 0) {\r\n\t\t\t// mapping.localName = mapping.name\r\n\t\t\t// .substring(this.name.length + 1);\r\n\t\t\t// }\r\n\t\t\t// // Else use name as local name\r\n\t\t\t// else {\r\n\t\t\t// mapping.localName = mapping.name;\r\n\t\t\t// }\r\n\t\t\t// }\r\n\t\t\t// // Module name is not provided, use name as local name\r\n\t\t\t// else {\r\n\t\t\t// mapping.localName = mapping.name;\r\n\t\t\t// }\r\n\t\t\t// }\r\n\t\t\tif (mapping.name.length > 0 && mapping.name.charAt(0) === '.' && Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t\tmapping.name = this.name + mapping.name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// name is not provided but local name is provided\r\n\t\telse if (Jsonix.Util.Type.isString(ln)) {\r\n\t\t\t// Module name is provided\r\n\t\t\tif (Jsonix.Util.Type.isString(this.name)) {\r\n\t\t\t\tmapping.name = this.name + '.' + ln;\r\n\t\t\t}\r\n\t\t\t// Module name is not provided\r\n\t\t\telse {\r\n\t\t\t\tmapping.name = ln;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Neither [name/n] nor [localName/ln] was provided for the class info.\");\r\n\t\t}\r\n\t},\r\n\tcreateClassInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tmapping.defaultElementNamespaceURI = dens;\r\n\t\tvar tns = mapping.targetNamespace || mapping.tns || this.targetNamespace;\r\n\t\tmapping.targetNamespace = tns;\r\n\t\tvar dans = mapping.defaultAttributeNamespaceURI || mapping.dans || this.defaultAttributeNamespaceURI;\r\n\t\tmapping.defaultAttributeNamespaceURI = dans;\r\n\t\tthis.initializeNames(mapping);\r\n\t\t// Now both name an local name are initialized\r\n\t\tvar classInfo = new this.mappingStyle.classInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn classInfo;\r\n\t},\r\n\tcreateEnumLeafInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tthis.initializeNames(mapping);\r\n\t\t// Now both name an local name are initialized\r\n\t\tvar enumLeafInfo = new this.mappingStyle.enumLeafInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn enumLeafInfo;\r\n\t},\r\n\tcreateList : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tvar ti = mapping.baseTypeInfo || mapping.typeInfo || mapping.bti || mapping.ti || 'String';\r\n\t\tvar tn = mapping.typeName || mapping.tn || null;\r\n\r\n\t\tif (Jsonix.Util.Type.exists(tn)) {\r\n\t\t\tif (Jsonix.Util.Type.isString(tn)) {\r\n\t\t\t\ttn = new Jsonix.XML.QName(this.targetNamespace, tn);\r\n\t\t\t} else {\r\n\t\t\t\ttn = Jsonix.XML.QName.fromObject(tn);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar s = mapping.separator || mapping.sep || ' ';\r\n\t\tJsonix.Util.Ensure.ensureExists(ti);\r\n\t\treturn new Jsonix.Schema.XSD.List(ti, tn, s);\r\n\t},\r\n\tcreateElementInfo : function(mapping) {\r\n\t\tJsonix.Util.Ensure.ensureObject(mapping);\r\n\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\r\n\t\tvar dens = mapping.defaultElementNamespaceURI || mapping.dens || this.defaultElementNamespaceURI;\r\n\t\tmapping.defaultElementNamespaceURI = dens;\r\n\t\tvar en = mapping.elementName || mapping.en || undefined;\r\n\t\tJsonix.Util.Ensure.ensureExists(en);\r\n\r\n\t\tvar ti = mapping.typeInfo || mapping.ti || 'String';\r\n\t\tJsonix.Util.Ensure.ensureExists(ti);\r\n\r\n\t\tmapping.typeInfo = ti;\r\n\t\tif (Jsonix.Util.Type.isObject(en)) {\r\n\t\t\tmapping.elementName = Jsonix.XML.QName.fromObject(en);\r\n\t\t} else if (Jsonix.Util.Type.isString(en)) {\r\n\t\t\tmapping.elementName = new Jsonix.XML.QName(this.defaultElementNamespaceURI, en);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Element info [' + mapping + '] must provide an element name.');\r\n\t\t}\r\n\r\n\t\tvar sh = mapping.substitutionHead || mapping.sh || null;\r\n\t\tif (Jsonix.Util.Type.exists(sh)) {\r\n\t\t\tif (Jsonix.Util.Type.isObject(sh)) {\r\n\t\t\t\tmapping.substitutionHead = Jsonix.XML.QName.fromObject(sh);\r\n\t\t\t} else {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(sh);\r\n\t\t\t\tmapping.substitutionHead = new Jsonix.XML.QName(this.defaultElementNamespaceURI, sh);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar elementInfo = new this.mappingStyle.elementInfo(mapping, {\r\n\t\t\tmappingStyle : this.mappingStyle\r\n\t\t});\r\n\t\treturn elementInfo;\r\n\t},\r\n\tregisterTypeInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.typeInfos.length; index++) {\r\n\t\t\tvar typeInfo = this.typeInfos[index];\r\n\t\t\tcontext.registerTypeInfo(typeInfo, this);\r\n\t\t}\r\n\t},\r\n\tbuildTypeInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.typeInfos.length; index++) {\r\n\t\t\tvar typeInfo = this.typeInfos[index];\r\n\t\t\ttypeInfo.build(context, this);\r\n\t\t}\r\n\t},\r\n\tregisterElementInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.elementInfos.length; index++) {\r\n\t\t\tvar elementInfo = this.elementInfos[index];\r\n\t\t\tcontext.registerElementInfo(elementInfo, this);\r\n\t\t}\r\n\t},\r\n\tbuildElementInfos : function(context) {\r\n\t\tfor (var index = 0; index < this.elementInfos.length; index++) {\r\n\t\t\tvar elementInfo = this.elementInfos[index];\r\n\t\t\telementInfo.build(context, this);\r\n\t\t}\r\n\t},\r\n\t// Obsolete, retained for backwards compatibility\r\n\tcs : function() {\r\n\t\treturn this;\r\n\t},\r\n\t// Obsolete, retained for backwards compatibility\r\n\tes : function() {\r\n\t\treturn this;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Model.Module'\r\n});\r\nJsonix.Model.Module.prototype.typeInfoCreators = {\r\n\t\"classInfo\" : Jsonix.Model.Module.prototype.createClassInfo,\r\n\t\"c\" : Jsonix.Model.Module.prototype.createClassInfo,\r\n\t\"enumInfo\" : Jsonix.Model.Module.prototype.createEnumLeafInfo,\r\n\t\"enum\" : Jsonix.Model.Module.prototype.createEnumLeafInfo,\r\n\t\"list\" : Jsonix.Model.Module.prototype.createList,\r\n\t\"l\" : Jsonix.Model.Module.prototype.createList\r\n};\nJsonix.Mapping.Style.Standard = Jsonix.Class(Jsonix.Mapping.Style, {\r\n\tmarshaller : Jsonix.Binding.Marshaller,\r\n\tunmarshaller : Jsonix.Binding.Unmarshaller,\r\n\tmodule : Jsonix.Model.Module,\r\n\telementInfo : Jsonix.Model.ElementInfo,\r\n\tclassInfo : Jsonix.Model.ClassInfo,\r\n\tenumLeafInfo : Jsonix.Model.EnumLeafInfo,\r\n\tanyAttributePropertyInfo : Jsonix.Model.AnyAttributePropertyInfo,\r\n\tanyElementPropertyInfo : Jsonix.Model.AnyElementPropertyInfo,\r\n\tattributePropertyInfo : Jsonix.Model.AttributePropertyInfo,\r\n\telementMapPropertyInfo : Jsonix.Model.ElementMapPropertyInfo,\r\n\telementPropertyInfo : Jsonix.Model.ElementPropertyInfo,\r\n\telementsPropertyInfo : Jsonix.Model.ElementsPropertyInfo,\r\n\telementRefPropertyInfo : Jsonix.Model.ElementRefPropertyInfo,\r\n\telementRefsPropertyInfo : Jsonix.Model.ElementRefsPropertyInfo,\r\n\tvaluePropertyInfo : Jsonix.Model.ValuePropertyInfo,\r\n\tinitialize : function() {\r\n\t\tJsonix.Mapping.Style.prototype.initialize.apply(this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style.Standard'\r\n});\r\nJsonix.Mapping.Style.STYLES.standard = new Jsonix.Mapping.Style.Standard();\r\n\nJsonix.Mapping.Style.Simplified = Jsonix.Class(Jsonix.Mapping.Style, {\r\n\tmarshaller : Jsonix.Binding.Marshaller.Simplified,\r\n\tunmarshaller : Jsonix.Binding.Unmarshaller.Simplified,\r\n\tmodule : Jsonix.Model.Module,\r\n\telementInfo : Jsonix.Model.ElementInfo,\r\n\tclassInfo : Jsonix.Model.ClassInfo,\r\n\tenumLeafInfo : Jsonix.Model.EnumLeafInfo,\r\n\tanyAttributePropertyInfo : Jsonix.Model.AnyAttributePropertyInfo.Simplified,\r\n\tanyElementPropertyInfo : Jsonix.Model.AnyElementPropertyInfo.Simplified,\r\n\tattributePropertyInfo : Jsonix.Model.AttributePropertyInfo,\r\n\telementMapPropertyInfo : Jsonix.Model.ElementMapPropertyInfo,\r\n\telementPropertyInfo : Jsonix.Model.ElementPropertyInfo,\r\n\telementsPropertyInfo : Jsonix.Model.ElementsPropertyInfo,\r\n\telementRefPropertyInfo : Jsonix.Model.ElementRefPropertyInfo.Simplified,\r\n\telementRefsPropertyInfo : Jsonix.Model.ElementRefsPropertyInfo.Simplified,\r\n\tvaluePropertyInfo : Jsonix.Model.ValuePropertyInfo,\r\n\tinitialize : function() {\r\n\t\tJsonix.Mapping.Style.prototype.initialize.apply(this);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Mapping.Style.Simplified'\r\n});\r\nJsonix.Mapping.Style.STYLES.simplified = new Jsonix.Mapping.Style.Simplified();\r\n\nJsonix.Schema.XSD = {};\r\nJsonix.Schema.XSD.NAMESPACE_URI = 'http://www.w3.org/2001/XMLSchema';\r\nJsonix.Schema.XSD.PREFIX = 'xsd';\r\nJsonix.Schema.XSD.qname = function(localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\treturn new Jsonix.XML.QName(Jsonix.Schema.XSD.NAMESPACE_URI, localPart,\r\n\t\t\tJsonix.Schema.XSD.PREFIX);\r\n};\r\n\nJsonix.Schema.XSD.AnyType = Jsonix.Class(Jsonix.Model.ClassInfo, {\r\n\ttypeName : Jsonix.Schema.XSD.qname('anyType'),\r\n\tinitialize : function() {\r\n\t\tJsonix.Model.ClassInfo.prototype.initialize.call(this, {\r\n\t\t\tname : 'AnyType',\r\n\t\t\tpropertyInfos : [ {\r\n\t\t\t\ttype : 'anyAttribute',\r\n\t\t\t\tname : 'attributes'\r\n\t\t\t}, {\r\n\t\t\t\ttype : 'anyElement',\r\n\t\t\t\tname : 'content',\r\n\t\t\t\tcollection : true\r\n\t\t\t} ]\r\n\t\t});\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnyType'\r\n});\r\nJsonix.Schema.XSD.AnyType.INSTANCE = new Jsonix.Schema.XSD.AnyType();\nJsonix.Schema.XSD.AnySimpleType = Jsonix.Class(Jsonix.Model.TypeInfo, {\r\n\tname : 'AnySimpleType',\r\n\ttypeName : Jsonix.Schema.XSD.qname('anySimpleType'),\r\n\tinitialize : function() {\r\n\t\tJsonix.Model.TypeInfo.prototype.initialize.apply(this, []);\r\n\t},\t\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn true;\r\n\t},\r\n\treprint : function(value, context, output, scope) {\r\n\t\t// Only reprint when the value is a string but not an instance\r\n\t\tif (Jsonix.Util.Type.isString(value) && !this.isInstance(value, context, scope)) {\r\n\t\t\t// Using null as input as input is not available\r\n\t\t\treturn this.print(this.parse(value, context, null, scope), context, output, scope);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn this.print(value, context, output, scope);\r\n\t\t}\r\n\t},\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\tif (Jsonix.Util.StringUtils.isNotBlank(text)) {\r\n\t\t\treturn this.parse(text, context, input, scope);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\tmarshal : function(value, context, output, scope) {\r\n\t\tif (Jsonix.Util.Type.exists(value)) {\r\n\t\t\toutput.writeCharacters(this.reprint(value, context, output, scope));\r\n\t\t}\r\n\t},\r\n\tbuild: function(context, module)\r\n\t{\r\n\t\t// Nothing to do\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnySimpleType'\r\n});\r\nJsonix.Schema.XSD.AnySimpleType.INSTANCE = new Jsonix.Schema.XSD.AnySimpleType();\nJsonix.Schema.XSD.List = Jsonix\r\n\t\t.Class(\r\n\t\t\t\tJsonix.Schema.XSD.AnySimpleType,\r\n\t\t\t\t{\r\n\t\t\t\t\tname : null,\r\n\t\t\t\t\ttypeName : null,\r\n\t\t\t\t\ttypeInfo : null,\r\n\t\t\t\t\tseparator : ' ',\r\n\t\t\t\t\ttrimmedSeparator : Jsonix.Util.StringUtils.whitespaceCharacters,\r\n\t\t\t\t\tsimpleType : true,\r\n\t\t\t\t\tbuilt : false,\r\n\t\t\t\t\tinitialize : function(typeInfo, typeName, separator) {\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureExists(typeInfo);\r\n\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\tthis.typeInfo = typeInfo;\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(this.name)) {\r\n\t\t\t\t\t\t\tthis.name = typeInfo.name + \"*\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(typeName)) {\r\n\t\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\t\tthis.typeName = typeName;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.isString(separator)) {\r\n\t\t\t\t\t\t\t// TODO Ensure correct argument\r\n\t\t\t\t\t\t\tthis.separator = separator;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.separator = ' ';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar trimmedSeparator = Jsonix.Util.StringUtils\r\n\t\t\t\t\t\t\t\t.trim(this.separator);\r\n\t\t\t\t\t\tif (trimmedSeparator.length === 0) {\r\n\t\t\t\t\t\t\tthis.trimmedSeparator = Jsonix.Util.StringUtils.whitespaceCharacters;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.trimmedSeparator = trimmedSeparator;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbuild : function(context, module) {\r\n\t\t\t\t\t\tif (!this.built) {\r\n\t\t\t\t\t\t\tthis.typeInfo = context.resolveTypeInfo(this.typeInfo, module);\r\n\t\t\t\t\t\t\tthis.built = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tprint : function(value, context, output, scope) {\r\n\t\t\t\t\t\tif (!Jsonix.Util.Type.exists(value)) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// TODO Exception if not an array\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\t\t\t\t\tvar result = '';\r\n\t\t\t\t\t\tfor ( var index = 0; index < value.length; index++) {\r\n\t\t\t\t\t\t\tif (index > 0) {\r\n\t\t\t\t\t\t\t\tresult = result + this.separator;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult = result + this.typeInfo.reprint(value[index], context, output, scope);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tparse : function(text, context, input, scope) {\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\t\t\t\t\tvar items = Jsonix.Util.StringUtils\r\n\t\t\t\t\t\t\t\t.splitBySeparatorChars(text,\r\n\t\t\t\t\t\t\t\t\t\tthis.trimmedSeparator);\r\n\t\t\t\t\t\tvar result = [];\r\n\t\t\t\t\t\tfor ( var index = 0; index < items.length; index++) {\r\n\t\t\t\t\t\t\tresult.push(this.typeInfo\r\n\t\t\t\t\t\t\t\t\t.parse(Jsonix.Util.StringUtils.trim(items[index]), context, input, scope));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// TODO isInstance?\r\n\t\t\t\t\tCLASS_NAME : 'Jsonix.Schema.XSD.List'\r\n\t\t\t\t});\r\n\nJsonix.Schema.XSD.String = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'String',\r\n\ttypeName : Jsonix.Schema.XSD.qname('string'),\r\n\tunmarshal : function(context, input, scope) {\r\n\t\tvar text = input.getElementText();\r\n\t\treturn this.parse(text, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isString(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.String'\r\n});\r\nJsonix.Schema.XSD.String.INSTANCE = new Jsonix.Schema.XSD.String();\r\nJsonix.Schema.XSD.String.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.String.INSTANCE);\nJsonix.Schema.XSD.Strings = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'Strings',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.String.INSTANCE, Jsonix.Schema.XSD.qname('strings'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Strings'\r\n});\r\nJsonix.Schema.XSD.Strings.INSTANCE = new Jsonix.Schema.XSD.Strings();\nJsonix.Schema.XSD.NormalizedString = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'NormalizedString',\r\n\ttypeName : Jsonix.Schema.XSD.qname('normalizedString'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NormalizedString'\r\n});\r\nJsonix.Schema.XSD.NormalizedString.INSTANCE = new Jsonix.Schema.XSD.NormalizedString();\r\nJsonix.Schema.XSD.NormalizedString.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.NormalizedString.INSTANCE);\nJsonix.Schema.XSD.Token = Jsonix.Class(Jsonix.Schema.XSD.NormalizedString, {\r\n\tname : 'Token',\r\n\ttypeName : Jsonix.Schema.XSD.qname('token'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Token'\r\n});\r\nJsonix.Schema.XSD.Token.INSTANCE = new Jsonix.Schema.XSD.Token();\r\nJsonix.Schema.XSD.Token.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Token.INSTANCE);\nJsonix.Schema.XSD.Language = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'Language',\r\n\ttypeName : Jsonix.Schema.XSD.qname('language'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Language'\r\n});\r\nJsonix.Schema.XSD.Language.INSTANCE = new Jsonix.Schema.XSD.Language();\r\nJsonix.Schema.XSD.Language.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Language.INSTANCE);\nJsonix.Schema.XSD.Name = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'Name',\r\n\ttypeName : Jsonix.Schema.XSD.qname('Name'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Name'\r\n});\r\nJsonix.Schema.XSD.Name.INSTANCE = new Jsonix.Schema.XSD.Name();\r\nJsonix.Schema.XSD.Name.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Name.INSTANCE);\nJsonix.Schema.XSD.NCName = Jsonix.Class(Jsonix.Schema.XSD.Name, {\r\n\tname : 'NCName',\r\n\ttypeName : Jsonix.Schema.XSD.qname('NCName'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NCName'\r\n});\r\nJsonix.Schema.XSD.NCName.INSTANCE = new Jsonix.Schema.XSD.NCName();\r\nJsonix.Schema.XSD.NCName.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.NCName.INSTANCE);\nJsonix.Schema.XSD.NMToken = Jsonix.Class(Jsonix.Schema.XSD.Token, {\r\n\tname : 'NMToken',\r\n\ttypeName : Jsonix.Schema.XSD.qname('NMTOKEN'),\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NMToken'\r\n});\r\nJsonix.Schema.XSD.NMToken.INSTANCE = new Jsonix.Schema.XSD.NMToken();\nJsonix.Schema.XSD.NMTokens = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'NMTokens',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.NMToken.INSTANCE, Jsonix.Schema.XSD.qname('NMTOKEN'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NMTokens'\r\n});\r\nJsonix.Schema.XSD.NMTokens.INSTANCE = new Jsonix.Schema.XSD.NMTokens();\nJsonix.Schema.XSD.Boolean = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Boolean',\r\n\ttypeName : Jsonix.Schema.XSD.qname('boolean'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureBoolean(value);\r\n\t\treturn value ? 'true' : 'false';\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text === 'true' || text === '1') {\r\n\t\t\treturn true;\r\n\t\t} else if (text === 'false' || text === '0') {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Either [true], [1], [0] or [false] expected as boolean value.\");\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isBoolean(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Boolean'\r\n});\r\nJsonix.Schema.XSD.Boolean.INSTANCE = new Jsonix.Schema.XSD.Boolean();\r\nJsonix.Schema.XSD.Boolean.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Boolean.INSTANCE);\nJsonix.Schema.XSD.Base64Binary = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Base64Binary',\r\n\ttypeName : Jsonix.Schema.XSD.qname('base64Binary'),\r\n\tcharToByte : {},\r\n\tbyteToChar : [],\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.AnySimpleType.prototype.initialize.apply(this);\r\n\t\t// Initialize charToByte and byteToChar table for fast\r\n\t\t// lookups\r\n\t\tvar charTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t\tfor (var i = 0; i < charTable.length; i++) {\r\n\t\t\tvar _char = charTable.charAt(i);\r\n\t\t\tvar _byte = charTable.charCodeAt(i);\r\n\t\t\tthis.byteToChar[i] = _char;\r\n\t\t\tthis.charToByte[_char] = i;\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\treturn this.encode(value);\r\n\t},\r\n\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn this.decode(text);\r\n\t},\r\n\tencode : function(uarray) {\r\n\t\tvar output = \"\";\r\n\t\tvar byte0;\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar char0;\r\n\t\tvar char1;\r\n\t\tvar char2;\r\n\t\tvar char3;\r\n\t\tvar i = 0;\r\n\t\tvar j = 0;\r\n\t\tvar length = uarray.length;\r\n\r\n\t\tfor (i = 0; i < length; i += 3) {\r\n\t\t\tbyte0 = uarray[i] & 0xFF;\r\n\t\t\tchar0 = this.byteToChar[byte0 >> 2];\r\n\r\n\t\t\tif (i + 1 < length) {\r\n\t\t\t\tbyte1 = uarray[i + 1] & 0xFF;\r\n\t\t\t\tchar1 = this.byteToChar[((byte0 & 0x03) << 4) | (byte1 >> 4)];\r\n\t\t\t\tif (i + 2 < length) {\r\n\t\t\t\t\tbyte2 = uarray[i + 2] & 0xFF;\r\n\t\t\t\t\tchar2 = this.byteToChar[((byte1 & 0x0F) << 2) | (byte2 >> 6)];\r\n\t\t\t\t\tchar3 = this.byteToChar[byte2 & 0x3F];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchar2 = this.byteToChar[(byte1 & 0x0F) << 2];\r\n\t\t\t\t\tchar3 = \"=\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tchar1 = this.byteToChar[(byte0 & 0x03) << 4];\r\n\t\t\t\tchar2 = \"=\";\r\n\t\t\t\tchar3 = \"=\";\r\n\t\t\t}\r\n\t\t\toutput = output + char0 + char1 + char2 + char3;\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\tdecode : function(text) {\r\n\r\n\t\tinput = text.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\tvar length = (input.length / 4) * 3;\r\n\t\tif (input.charAt(input.length - 1) === \"=\") {\r\n\t\t\tlength--;\r\n\t\t}\r\n\t\tif (input.charAt(input.length - 2) === \"=\") {\r\n\t\t\tlength--;\r\n\t\t}\r\n\r\n\t\tvar uarray = new Array(length);\r\n\r\n\t\tvar byte0;\r\n\t\tvar byte1;\r\n\t\tvar byte2;\r\n\t\tvar char0;\r\n\t\tvar char1;\r\n\t\tvar char2;\r\n\t\tvar char3;\r\n\t\tvar i = 0;\r\n\t\tvar j = 0;\r\n\r\n\t\tfor (i = 0; i < length; i += 3) {\r\n\t\t\t// get the 3 octects in 4 ascii chars\r\n\t\t\tchar0 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar1 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar2 = this.charToByte[input.charAt(j++)];\r\n\t\t\tchar3 = this.charToByte[input.charAt(j++)];\r\n\r\n\t\t\tbyte0 = (char0 << 2) | (char1 >> 4);\r\n\t\t\tbyte1 = ((char1 & 0x0F) << 4) | (char2 >> 2);\r\n\t\t\tbyte2 = ((char2 & 0x03) << 6) | char3;\r\n\r\n\t\t\tuarray[i] = byte0;\r\n\t\t\tif (char2 != 64) {\r\n\t\t\t\tuarray[i + 1] = byte1;\r\n\t\t\t}\r\n\t\t\tif (char3 != 64) {\r\n\t\t\t\tuarray[i + 2] = byte2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn uarray;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isArray(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Base64Binary'\r\n});\r\nJsonix.Schema.XSD.Base64Binary.INSTANCE = new Jsonix.Schema.XSD.Base64Binary();\r\nJsonix.Schema.XSD.Base64Binary.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Base64Binary.INSTANCE);\nJsonix.Schema.XSD.HexBinary = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'HexBinary',\r\n\ttypeName : Jsonix.Schema.XSD.qname('hexBinary'),\r\n\tcharToQuartet : {},\r\n\tbyteToDuplet : [],\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.AnySimpleType.prototype.initialize.apply(this);\r\n\t\tvar charTableUpperCase = \"0123456789ABCDEF\";\r\n\t\tvar charTableLowerCase = charTableUpperCase.toLowerCase();\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < 16; i++) {\r\n\t\t\tthis.charToQuartet[charTableUpperCase.charAt(i)] = i;\r\n\t\t\tif (i >= 0xA) {\r\n\t\t\t\tthis.charToQuartet[charTableLowerCase.charAt(i)] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i = 0; i < 256; i++) {\r\n\t\t\tthis.byteToDuplet[i] =\r\n\t\t\t//\r\n\t\t\tcharTableUpperCase[i >> 4] + charTableUpperCase[i & 0xF];\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureArray(value);\r\n\t\treturn this.encode(value);\r\n\t},\r\n\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn this.decode(text);\r\n\t},\r\n\tencode : function(uarray) {\r\n\t\tvar output = \"\";\r\n\t\tfor ( var i = 0; i < uarray.length; i++) {\r\n\t\t\toutput = output + this.byteToDuplet[uarray[i] & 0xFF];\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\tdecode : function(text) {\r\n\t\tvar input = text.replace(/[^A-Fa-f0-9]/g, \"\");\r\n\t\t// Round by two\r\n\t\tvar length = input.length >> 1;\r\n\t\tvar uarray = new Array(length);\r\n\t\tfor ( var i = 0; i < length; i++) {\r\n\t\t\tvar char0 = input.charAt(2 * i);\r\n\t\t\tvar char1 = input.charAt(2 * i + 1);\r\n\t\t\tuarray[i] = this.charToQuartet[char0] << 4\r\n\t\t\t\t\t| this.charToQuartet[char1];\r\n\t\t}\r\n\t\treturn uarray;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isArray(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.HexBinary'\r\n});\r\nJsonix.Schema.XSD.HexBinary.INSTANCE = new Jsonix.Schema.XSD.HexBinary();\r\nJsonix.Schema.XSD.HexBinary.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.HexBinary.INSTANCE);\nJsonix.Schema.XSD.Number = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Number',\r\n\ttypeName : Jsonix.Schema.XSD.qname('number'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureNumberOrNaN(value);\r\n\t\tif (Jsonix.Util.Type.isNaN(value)) {\r\n\t\t\treturn 'NaN';\r\n\t\t} else if (value === Infinity) {\r\n\t\t\treturn 'INF';\r\n\t\t} else if (value === -Infinity) {\r\n\t\t\treturn '-INF';\r\n\t\t} else {\r\n\t\t\tvar text = String(value);\r\n\t\t\treturn text;\r\n\t\t}\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text === '-INF') {\r\n\t\t\treturn -Infinity;\r\n\t\t} else if (text === 'INF') {\r\n\t\t\treturn Infinity;\r\n\t\t} else if (text === 'NaN') {\r\n\t\t\treturn NaN;\r\n\t\t} else {\r\n\t\t\tvar value = Number(text);\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\t\treturn value;\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNumberOrNaN(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Number'\r\n});\r\nJsonix.Schema.XSD.Number.INSTANCE = new Jsonix.Schema.XSD.Number();\r\nJsonix.Schema.XSD.Number.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Number.INSTANCE);\nJsonix.Schema.XSD.Float = Jsonix.Class(Jsonix.Schema.XSD.Number, {\r\n\tname : 'Float',\r\n\ttypeName : Jsonix.Schema.XSD.qname('float'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNaN(value) || value === -Infinity || value === Infinity || (Jsonix.Util.Type.isNumber(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE);\r\n\t},\r\n\tMIN_VALUE : -3.4028235e+38,\r\n\tMAX_VALUE : 3.4028235e+38,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Float'\r\n});\r\nJsonix.Schema.XSD.Float.INSTANCE = new Jsonix.Schema.XSD.Float();\r\nJsonix.Schema.XSD.Float.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Float.INSTANCE);\nJsonix.Schema.XSD.Decimal = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Decimal',\r\n\ttypeName : Jsonix.Schema.XSD.qname('decimal'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\tvar text = String(value);\r\n\t\treturn text;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar value = Number(text);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\treturn value;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNumber(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Decimal'\r\n});\r\nJsonix.Schema.XSD.Decimal.INSTANCE = new Jsonix.Schema.XSD.Decimal();\r\nJsonix.Schema.XSD.Decimal.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Decimal.INSTANCE);\nJsonix.Schema.XSD.Integer = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Integer',\r\n\ttypeName : Jsonix.Schema.XSD.qname('integer'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\tvar text = String(value);\r\n\t\treturn text;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar value = Number(text);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\treturn value;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.NumberUtils.isInteger(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE;\r\n\t},\r\n\tMIN_VALUE : -9223372036854775808,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Integer'\r\n});\r\nJsonix.Schema.XSD.Integer.INSTANCE = new Jsonix.Schema.XSD.Integer();\r\nJsonix.Schema.XSD.Integer.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Integer.INSTANCE);\nJsonix.Schema.XSD.NonPositiveInteger = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'NonPositiveInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('nonPositiveInteger'),\r\n\tMIN_VALUE: -9223372036854775808,\r\n\tMAX_VALUE: 0,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NonPositiveInteger'\r\n});\r\nJsonix.Schema.XSD.NonPositiveInteger.INSTANCE = new Jsonix.Schema.XSD.NonPositiveInteger();\r\nJsonix.Schema.XSD.NonPositiveInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NonPositiveInteger.INSTANCE);\nJsonix.Schema.XSD.NegativeInteger = Jsonix.Class(Jsonix.Schema.XSD.NonPositiveInteger, {\r\n\tname : 'NegativeInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('negativeInteger'),\r\n\tMIN_VALUE: -9223372036854775808,\r\n\tMAX_VALUE: -1,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NegativeInteger'\r\n});\r\nJsonix.Schema.XSD.NegativeInteger.INSTANCE = new Jsonix.Schema.XSD.NegativeInteger();\r\nJsonix.Schema.XSD.NegativeInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NegativeInteger.INSTANCE);\nJsonix.Schema.XSD.Long = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'Long',\r\n\ttypeName : Jsonix.Schema.XSD.qname('long'),\r\n\tMIN_VALUE : -9223372036854775808,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Long'\r\n});\r\nJsonix.Schema.XSD.Long.INSTANCE = new Jsonix.Schema.XSD.Long();\r\nJsonix.Schema.XSD.Long.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.Long.INSTANCE);\nJsonix.Schema.XSD.Int = Jsonix.Class(Jsonix.Schema.XSD.Long, {\r\n\tname : 'Int',\r\n\ttypeName : Jsonix.Schema.XSD.qname('int'),\r\n\tMIN_VALUE : -2147483648,\r\n\tMAX_VALUE : 2147483647,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Int'\r\n});\r\nJsonix.Schema.XSD.Int.INSTANCE = new Jsonix.Schema.XSD.Int();\r\nJsonix.Schema.XSD.Int.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.Int.INSTANCE);\nJsonix.Schema.XSD.Short = Jsonix.Class(Jsonix.Schema.XSD.Int, {\r\n\tname : 'Short',\r\n\ttypeName : Jsonix.Schema.XSD.qname('short'),\r\n\tMIN_VALUE : -32768,\r\n\tMAX_VALUE : 32767,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Short'\r\n});\r\nJsonix.Schema.XSD.Short.INSTANCE = new Jsonix.Schema.XSD.Short();\r\nJsonix.Schema.XSD.Short.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Short.INSTANCE);\nJsonix.Schema.XSD.Byte = Jsonix.Class(Jsonix.Schema.XSD.Short, {\r\n\tname : 'Byte',\r\n\ttypeName : Jsonix.Schema.XSD.qname('byte'),\r\n\tMIN_VALUE : -128,\r\n\tMAX_VALUE : 127,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Byte'\r\n});\r\nJsonix.Schema.XSD.Byte.INSTANCE = new Jsonix.Schema.XSD.Byte();\r\nJsonix.Schema.XSD.Byte.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Byte.INSTANCE);\nJsonix.Schema.XSD.NonNegativeInteger = Jsonix.Class(Jsonix.Schema.XSD.Integer, {\r\n\tname : 'NonNegativeInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('nonNegativeInteger'),\r\n\tMIN_VALUE: 0,\r\n\tMAX_VALUE: 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.NonNegativeInteger'\r\n});\r\nJsonix.Schema.XSD.NonNegativeInteger.INSTANCE = new Jsonix.Schema.XSD.NonNegativeInteger();\r\nJsonix.Schema.XSD.NonNegativeInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.NonNegativeInteger.INSTANCE);\nJsonix.Schema.XSD.UnsignedLong = Jsonix.Class(Jsonix.Schema.XSD.NonNegativeInteger, {\r\n\tname : 'UnsignedLong',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedLong'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 18446744073709551615,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedLong'\r\n});\r\nJsonix.Schema.XSD.UnsignedLong.INSTANCE = new Jsonix.Schema.XSD.UnsignedLong();\r\nJsonix.Schema.XSD.UnsignedLong.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedLong.INSTANCE);\nJsonix.Schema.XSD.UnsignedInt = Jsonix.Class(Jsonix.Schema.XSD.UnsignedLong, {\r\n\tname : 'UnsignedInt',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedInt'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 4294967295,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedInt'\r\n});\r\nJsonix.Schema.XSD.UnsignedInt.INSTANCE = new Jsonix.Schema.XSD.UnsignedInt();\r\nJsonix.Schema.XSD.UnsignedInt.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedInt.INSTANCE);\nJsonix.Schema.XSD.UnsignedShort = Jsonix.Class(Jsonix.Schema.XSD.UnsignedInt, {\r\n\tname : 'UnsignedShort',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedShort'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 65535,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedShort'\r\n});\r\nJsonix.Schema.XSD.UnsignedShort.INSTANCE = new Jsonix.Schema.XSD.UnsignedShort();\r\nJsonix.Schema.XSD.UnsignedShort.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedShort.INSTANCE);\nJsonix.Schema.XSD.UnsignedByte = Jsonix.Class(Jsonix.Schema.XSD.UnsignedShort, {\r\n\tname : 'UnsignedByte',\r\n\ttypeName : Jsonix.Schema.XSD.qname('unsignedByte'),\r\n\tMIN_VALUE : 0,\r\n\tMAX_VALUE : 255,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.UnsignedByte'\r\n});\r\nJsonix.Schema.XSD.UnsignedByte.INSTANCE = new Jsonix.Schema.XSD.UnsignedByte();\r\nJsonix.Schema.XSD.UnsignedByte.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.UnsignedByte.INSTANCE);\nJsonix.Schema.XSD.PositiveInteger = Jsonix.Class(Jsonix.Schema.XSD.NonNegativeInteger, {\r\n\tname : 'PositiveInteger',\r\n\ttypeName : Jsonix.Schema.XSD.qname('positiveInteger'),\r\n\tMIN_VALUE : 1,\r\n\tMAX_VALUE : 9223372036854775807,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.PositiveInteger'\r\n});\r\nJsonix.Schema.XSD.PositiveInteger.INSTANCE = new Jsonix.Schema.XSD.PositiveInteger();\r\nJsonix.Schema.XSD.PositiveInteger.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.PositiveInteger.INSTANCE);\nJsonix.Schema.XSD.Double = Jsonix.Class(Jsonix.Schema.XSD.Number, {\r\n\tname : 'Double',\r\n\ttypeName : Jsonix.Schema.XSD.qname('double'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isNaN(value) || value === -Infinity || value === Infinity || (Jsonix.Util.Type.isNumber(value) && value >= this.MIN_VALUE && value <= this.MAX_VALUE);\r\n\t},\r\n\tMIN_VALUE : -1.7976931348623157e+308,\r\n\tMAX_VALUE : 1.7976931348623157e+308,\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Double'\r\n});\r\nJsonix.Schema.XSD.Double.INSTANCE = new Jsonix.Schema.XSD.Double();\r\nJsonix.Schema.XSD.Double.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Double.INSTANCE);\nJsonix.Schema.XSD.AnyURI = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'AnyURI',\r\n\ttypeName : Jsonix.Schema.XSD.qname('anyURI'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\treturn value;\r\n\t},\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\treturn text;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isString(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.AnyURI'\r\n});\r\nJsonix.Schema.XSD.AnyURI.INSTANCE = new Jsonix.Schema.XSD.AnyURI();\r\nJsonix.Schema.XSD.AnyURI.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.AnyURI.INSTANCE);\nJsonix.Schema.XSD.QName = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'QName',\r\n\ttypeName : Jsonix.Schema.XSD.qname('QName'),\r\n\tprint : function(value, context, output, scope) {\r\n\t\tvar qName = Jsonix.XML.QName.fromObject(value);\r\n\t\tvar prefix;\r\n\t\tvar localPart = qName.localPart;\r\n\t\tif (output) {\r\n\t\t\t// If QName does not provide the prefix, let it be generated\r\n\t\t\tprefix = output.getPrefix(qName.namespaceURI, qName.prefix||null);\r\n\t\t\toutput.declareNamespace(qName.namespaceURI, prefix);\r\n\t\t} else {\r\n\t\t\tprefix = qName.prefix;\r\n\t\t}\r\n\t\treturn !prefix ? localPart : (prefix + ':' + localPart);\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(value);\r\n\t\tvalue = Jsonix.Util.StringUtils.trim(value);\r\n\t\tvar prefix;\r\n\t\tvar localPart;\r\n\t\tvar colonPosition = value.indexOf(':');\r\n\t\tif (colonPosition === -1) {\r\n\t\t\tprefix = '';\r\n\t\t\tlocalPart = value;\r\n\t\t} else if (colonPosition > 0 && colonPosition < (value.length - 1)) {\r\n\t\t\tprefix = value.substring(0, colonPosition);\r\n\t\t\tlocalPart = value.substring(colonPosition + 1);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid QName [' + value + '].');\r\n\t\t}\r\n\t\tvar namespaceContext = input || context || null;\r\n\t\tif (!namespaceContext)\r\n\t\t{\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar namespaceURI = namespaceContext.getNamespaceURI(prefix);\r\n\t\t\tif (Jsonix.Util.Type.isString(namespaceURI))\r\n\t\t\t{\r\n\t\t\t\treturn new Jsonix.XML.QName(namespaceURI, localPart, prefix);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('Prefix [' + prefix + '] of the QName [' + value + '] is not bound in this context.');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn (value instanceof Jsonix.XML.QName) || (Jsonix.Util.Type.isObject(value) && Jsonix.Util.Type.isString(value.localPart || value.lp));\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.QName'\r\n});\r\nJsonix.Schema.XSD.QName.INSTANCE = new Jsonix.Schema.XSD.QName();\r\nJsonix.Schema.XSD.QName.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.QName.INSTANCE);\nJsonix.Schema.XSD.Calendar = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Calendar',\r\n\ttypeName : Jsonix.Schema.XSD.qname('calendar'),\r\n\tparse : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tif (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATETIME_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseDateTime(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATE_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseDate(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIME_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseTime(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGYearMonth(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGYear(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGMonthDay(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGMonth(text, context, input, scope);\r\n\t\t} else if (text.match(new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GDAY_PATTERN + \"$\"))) {\r\n\t\t\treturn this.parseGDay(text, context, input, scope);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + text + '] does not match xs:dateTime, xs:date, xs:time, xs:gYearMonth, xs:gYear, xs:gMonthDay, xs:gMonth or xs:gDay patterns.');\r\n\t\t}\r\n\t},\r\n\tparseGYearMonth : function(value, context, input, scope) {\r\n\t\tvar gYearMonthExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN + \"$\");\r\n\t\tvar results = value.match(gYearMonthExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[7])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gYearMonth pattern.');\r\n\t},\r\n\tparseGYear : function(value, context, input, scope) {\r\n\t\tvar gYearExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GYEAR_PATTERN + \"$\");\r\n\t\tvar results = value.match(gYearExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[5])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gYear pattern.');\r\n\t},\r\n\tparseGMonthDay : function(value, context, input, scope) {\r\n\t\tvar gMonthDayExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN + \"$\");\r\n\t\tvar results = value.match(gMonthDayExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tmonth : parseInt(results[2], 10),\r\n\t\t\t\tday : parseInt(results[3], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[5])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gMonthDay pattern.');\r\n\t},\r\n\tparseGMonth : function(value, context, input, scope) {\r\n\t\tvar gMonthExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GMONTH_PATTERN + \"$\");\r\n\t\tvar results = value.match(gMonthExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tmonth : parseInt(results[2], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[3])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gMonth pattern.');\r\n\t},\r\n\tparseGDay : function(value, context, input, scope) {\r\n\t\tvar gDayExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.GDAY_PATTERN + \"$\");\r\n\t\tvar results = value.match(gDayExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tday : parseInt(results[2], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[3])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:gDay pattern.');\r\n\t},\r\n\tparseDateTime : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATETIME_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\tday : parseInt(results[7], 10),\r\n\t\t\t\thour : parseInt(results[9], 10),\r\n\t\t\t\tminute : parseInt(results[10], 10),\r\n\t\t\t\tsecond : parseInt(results[11], 10),\r\n\t\t\t\tfractionalSecond : (results[12] ? parseFloat(results[12]) : 0),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[14])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:date pattern.');\r\n\t},\r\n\tparseDate : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.DATE_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\tyear : parseInt(results[1], 10),\r\n\t\t\t\tmonth : parseInt(results[5], 10),\r\n\t\t\t\tday : parseInt(results[7], 10),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[9])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:date pattern.');\r\n\t},\r\n\tparseTime : function(text, context, input, scope) {\r\n\t\tJsonix.Util.Ensure.ensureString(text);\r\n\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIME_PATTERN + \"$\");\r\n\t\tvar results = text.match(expression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar data = {\r\n\t\t\t\thour : parseInt(results[1], 10),\r\n\t\t\t\tminute : parseInt(results[2], 10),\r\n\t\t\t\tsecond : parseInt(results[3], 10),\r\n\t\t\t\tfractionalSecond : (results[4] ? parseFloat(results[4]) : 0),\r\n\t\t\t\ttimezone : this.parseTimezoneString(results[6])\r\n\t\t\t};\r\n\t\t\treturn new Jsonix.XML.Calendar(data);\r\n\t\t}\r\n\t\tthrow new Error('Value [' + value + '] does not match the xs:time pattern.');\r\n\t},\r\n\tparseTimezoneString : function(text) {\r\n\t\t// (('+' | '-') hh ':' mm) | 'Z'\r\n\t\tif (!Jsonix.Util.Type.isString(text)) {\r\n\t\t\treturn NaN;\r\n\t\t} else if (text === '') {\r\n\t\t\treturn NaN;\r\n\t\t} else if (text === 'Z') {\r\n\t\t\treturn 0;\r\n\t\t} else if (text === '+14:00') {\r\n\t\t\treturn 14 * 60;\r\n\t\t} else if (text === '-14:00') {\r\n\t\t\treturn -14 * 60;\r\n\t\t} else {\r\n\t\t\tvar expression = new RegExp(\"^\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \"$\");\r\n\t\t\tvar results = text.match(expression);\r\n\t\t\tif (results !== null) {\r\n\t\t\t\tvar sign = results[1] === '+' ? 1 : -1;\r\n\t\t\t\tvar hour = parseInt(results[4], 10);\r\n\t\t\t\tvar minute = parseInt(results[5], 10);\r\n\t\t\t\treturn sign * (hour * 60 + minute);\r\n\t\t\t}\r\n\t\t\tthrow new Error('Value [' + value + '] does not match the timezone pattern.');\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day) && Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)) {\r\n\t\t\treturn this.printDateTime(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printDate(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)) {\r\n\t\t\treturn this.printTime(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month)) {\r\n\t\t\treturn this.printGYearMonth(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printGMonthDay(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.year)) {\r\n\t\t\treturn this.printGYear(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.month)) {\r\n\t\t\treturn this.printGMonth(value);\r\n\t\t} else if (Jsonix.Util.NumberUtils.isInteger(value.day)) {\r\n\t\t\treturn this.printGDay(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + value + '] is not recognized as dateTime, date or time.');\r\n\t\t}\r\n\t},\r\n\tprintDateTime : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalString)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalString);\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\t\tvar result = this.printDateString(value);\r\n\t\tresult = result + 'T';\r\n\t\tresult = result + this.printTimeString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintDate : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.year);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.month);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.day);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\t\tvar result = this.printDateString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintTime : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureNumber(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalString)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalString);\r\n\t\t}\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone) && !Jsonix.Util.Type.isNaN(value.timezone)) {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.timezone);\r\n\t\t}\r\n\r\n\t\tvar result = this.printTimeString(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.timezone)) {\r\n\t\t\tresult = result + this.printTimezoneString(value.timezone);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintDateString : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\treturn (value.year < 0 ? ('-' + this.printYear(-value.year)) : this.printYear(value.year)) + '-' + this.printMonth(value.month) + '-' + this.printDay(value.day);\r\n\t},\r\n\tprintTimeString : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.hour);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.minute);\r\n\t\tJsonix.Util.Ensure.ensureInteger(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalSecond)) {\r\n\t\t\tJsonix.Util.Ensure.ensureNumber(value.fractionalSecond);\r\n\t\t}\r\n\t\tvar result = this.printHour(value.hour);\r\n\t\tresult = result + ':';\r\n\t\tresult = result + this.printMinute(value.minute);\r\n\t\tresult = result + ':';\r\n\t\tresult = result + this.printSecond(value.second);\r\n\t\tif (Jsonix.Util.Type.exists(value.fractionalSecond)) {\r\n\t\t\tresult = result + this.printFractionalSecond(value.fractionalSecond);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprintTimezoneString : function(value) {\r\n\t\tif (!Jsonix.Util.Type.exists(value) || Jsonix.Util.Type.isNaN(value)) {\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\r\n\t\t\tvar sign = value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n\t\t\tvar data = value * sign;\r\n\t\t\tvar minute = data % 60;\r\n\t\t\tvar hour = Math.floor(data / 60);\r\n\r\n\t\t\tvar result;\r\n\t\t\tif (sign === 0) {\r\n\t\t\t\treturn 'Z';\r\n\t\t\t} else {\r\n\t\t\t\tif (sign > 0) {\r\n\t\t\t\t\tresult = '+';\r\n\t\t\t\t} else if (sign < 0) {\r\n\t\t\t\t\tresult = '-';\r\n\t\t\t\t}\r\n\t\t\t\tresult = result + this.printHour(hour);\r\n\t\t\t\tresult = result + ':';\r\n\t\t\t\tresult = result + this.printMinute(minute);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tprintGDay : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar day = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tday = value.getDate();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\t\tday = value.day;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateDay(day);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"---\" + this.printDay(day) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGMonth : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar month = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\t\tmonth = value.month;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateMonth(month);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"--\" + this.printMonth(month) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGMonthDay : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar month = undefined;\r\n\t\tvar day = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t\tday = value.getDate();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.month);\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.day);\r\n\t\t\tmonth = value.month;\r\n\t\t\tday = value.day;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateMonthDay(month, day);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn \"--\" + this.printMonth(month) + \"-\" + this.printDay(day) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGYear : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar year = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tyear = value.getFullYear();\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\t\tyear = value.year;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateYear(year);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn this.printSignedYear(year) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintGYearMonth : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tvar year = undefined;\r\n\t\tvar month = undefined;\r\n\t\tvar timezone = undefined;\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tyear = value.getFullYear();\r\n\t\t\tmonth = value.getMonth() + 1;\r\n\t\t} else {\r\n\t\t\tJsonix.Util.Ensure.ensureInteger(value.year);\r\n\t\t\tyear = value.year;\r\n\t\t\tmonth = value.month;\r\n\t\t\ttimezone = value.timezone;\r\n\t\t}\r\n\t\tJsonix.XML.Calendar.validateYear(year);\r\n\t\tJsonix.XML.Calendar.validateMonth(month);\r\n\t\tJsonix.XML.Calendar.validateTimezone(timezone);\r\n\t\treturn this.printSignedYear(year) + \"-\" + this.printMonth(month) + this.printTimezoneString(timezone);\r\n\t},\r\n\tprintSignedYear : function(value) {\r\n\t\treturn value < 0 ? (\"-\" + this.printYear(value * -1)) : (this.printYear(value));\r\n\t},\r\n\tprintYear : function(value) {\r\n\t\treturn this.printInteger(value, 4);\r\n\t},\r\n\tprintMonth : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintDay : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintHour : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintMinute : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintSecond : function(value) {\r\n\t\treturn this.printInteger(value, 2);\r\n\t},\r\n\tprintFractionalSecond : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureNumber(value);\r\n\t\tif (value < 0 || value >= 1) {\r\n\t\t\tthrow new Error('Fractional second [' + value + '] must be between 0 and 1.');\r\n\t\t} else if (value === 0) {\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\tvar string = String(value);\r\n\t\t\tvar dotIndex = string.indexOf('.');\r\n\t\t\tif (dotIndex < 0) {\r\n\t\t\t\treturn '';\r\n\t\t\t} else {\r\n\t\t\t\treturn string.substring(dotIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tprintInteger : function(value, length) {\r\n\t\tJsonix.Util.Ensure.ensureInteger(value);\r\n\t\tJsonix.Util.Ensure.ensureInteger(length);\r\n\t\tif (length <= 0) {\r\n\t\t\tthrow new Error('Length [' + value + '] must be positive.');\r\n\t\t}\r\n\t\tif (value < 0) {\r\n\t\t\tthrow new Error('Value [' + value + '] must not be negative.');\r\n\t\t}\r\n\t\tvar result = String(value);\r\n\t\tfor (var i = result.length; i < length; i++) {\r\n\t\t\tresult = '0' + result;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isObject(value) && ((Jsonix.Util.NumberUtils.isInteger(value.year) && Jsonix.Util.NumberUtils.isInteger(value.month) && Jsonix.Util.NumberUtils.isInteger(value.day)) || (Jsonix.Util.NumberUtils.isInteger(value.hour) && Jsonix.Util.NumberUtils.isInteger(value.minute) && Jsonix.Util.NumberUtils.isInteger(value.second)));\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Calendar'\r\n});\r\n\r\nJsonix.Schema.XSD.Calendar.YEAR_PATTERN = \"-?([1-9][0-9]*)?((?!(0000))[0-9]{4})\";\r\nJsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN = \"Z|([\\\\-\\\\+])(((0[0-9]|1[0-3]):([0-5][0-9]))|(14:00))\";\r\nJsonix.Schema.XSD.Calendar.MONTH_PATTERN = \"(0[1-9]|1[0-2])\";\r\nJsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN = \"\\\\-\\\\-\" + Jsonix.Schema.XSD.Calendar.MONTH_PATTERN;\r\nJsonix.Schema.XSD.Calendar.DAY_PATTERN = \"(0[1-9]|[12][0-9]|3[01])\";\r\nJsonix.Schema.XSD.Calendar.SINGLE_DAY_PATTERN = \"\\\\-\\\\-\\\\-\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN;\r\nJsonix.Schema.XSD.Calendar.GYEAR_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GMONTH_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GDAY_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GYEAR_MONTH_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.GMONTH_DAY_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.SINGLE_MONTH_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\" + \"(\" + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + \")?\";\r\nJsonix.Schema.XSD.Calendar.DATE_PART_PATTERN = \"(\" + Jsonix.Schema.XSD.Calendar.YEAR_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.MONTH_PATTERN + \")\" + \"-\" + \"(\" + Jsonix.Schema.XSD.Calendar.DAY_PATTERN + \")\";\r\nJsonix.Schema.XSD.Calendar.TIME_PART_PATTERN = \"([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\\\.([0-9]+))?\";\r\nJsonix.Schema.XSD.Calendar.TIME_PATTERN = Jsonix.Schema.XSD.Calendar.TIME_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.DATE_PATTERN = Jsonix.Schema.XSD.Calendar.DATE_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.DATETIME_PATTERN = Jsonix.Schema.XSD.Calendar.DATE_PART_PATTERN + 'T' + Jsonix.Schema.XSD.Calendar.TIME_PART_PATTERN + '(' + Jsonix.Schema.XSD.Calendar.TIMEZONE_PATTERN + ')?';\r\nJsonix.Schema.XSD.Calendar.INSTANCE = new Jsonix.Schema.XSD.Calendar();\r\nJsonix.Schema.XSD.Calendar.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Calendar.INSTANCE);\nJsonix.Schema.XSD.Duration = Jsonix.Class(Jsonix.Schema.XSD.AnySimpleType, {\r\n\tname : 'Duration',\r\n\ttypeName : Jsonix.Schema.XSD.qname('duration'),\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isObject(value) && (\r\n\t\t\t\t(Jsonix.Util.Type.exists(value.sign) ? (value.sign === -1 || value.sign === 1) : true)\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.years) && value.years >=0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.months) && value.months >=0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.days) && value.days >= 0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.hours) && value.hours >= 0) ||\r\n\t\t\t\t(Jsonix.Util.NumberUtils.isInteger(value.minutes) && value.minutes >= 0) ||\r\n\t\t\t\t(Jsonix.Util.Type.isNumber(value.seconds) && value.seconds >= 0) );\r\n\t},\r\n\tvalidate : function(value) {\r\n\t\tJsonix.Util.Ensure.ensureObject(value);\r\n\t\tif (Jsonix.Util.Type.exists(value.sign)) {\r\n\t\t\tif (!(value.sign === 1 || value.sign === -1)) {\r\n\t\t\t\tthrow new Error(\"Sign of the duration [\" + value.sign + \"] must be either [1] or [-1].\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar empty = true;\r\n\t\tvar ifExistsEnsureUnsignedInteger = function(v, message) {\r\n\t\t\tif (Jsonix.Util.Type.exists(v)) {\r\n\t\t\t\tif (!(Jsonix.Util.NumberUtils.isInteger(v) && v >= 0)) {\r\n\t\t\t\t\tthrow new Error(message.replace(\"{0}\", v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\tvar ifExistsEnsureUnsignedNumber = function(v, message) {\r\n\t\t\tif (Jsonix.Util.Type.exists(v)) {\r\n\t\t\t\tif (!(Jsonix.Util.Type.isNumber(v) && v >= 0)) {\r\n\t\t\t\t\tthrow new Error(message.replace(\"{0}\", v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.years, \"Number of years [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.months, \"Number of months [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.days, \"Number of days [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.hours, \"Number of hours [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedInteger(value.minutes, \"Number of minutes [{0}] must be an unsigned integer.\");\r\n\t\tempty = empty && !ifExistsEnsureUnsignedNumber(value.seconds, \"Number of seconds [{0}] must be an unsigned number.\");\r\n\t\tif (empty) {\r\n\t\t\tthrow new Error(\"At least one of the components (years, months, days, hours, minutes, seconds) must be set.\");\r\n\t\t}\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tthis.validate(value);\r\n\t\tvar result = '';\r\n\t\tif (value.sign === -1)\r\n\t\t{\r\n\t\t\tresult += '-';\r\n\t\t}\r\n\t\tresult += 'P';\r\n\t\tif (value.years) {\r\n\t\t\tresult += (value.years + 'Y');\r\n\t\t}\r\n\t\tif (value.months) {\r\n\t\t\tresult += (value.months + 'M');\r\n\t\t}\r\n\t\tif (value.days) {\r\n\t\t\tresult += (value.days + 'D');\r\n\t\t}\r\n\t\tif (value.hours || value.minutes || value.seconds)\r\n\t\t{\r\n\t\t\tresult += 'T';\r\n\t\t\tif (value.hours) {\r\n\t\t\t\tresult += (value.hours + 'H');\r\n\t\t\t}\r\n\t\t\tif (value.minutes) {\r\n\t\t\t\tresult += (value.minutes + 'M');\r\n\t\t\t}\r\n\t\t\tif (value.seconds) {\r\n\t\t\t\tresult += (value.seconds + 'S');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar durationExpression = new RegExp(\"^\" + Jsonix.Schema.XSD.Duration.PATTERN + \"$\");\r\n\t\tvar results = value.match(durationExpression);\r\n\t\tif (results !== null) {\r\n\t\t\tvar empty = true;\r\n\t\t\tvar duration = {};\r\n\t\t\tif (results[1]) { duration.sign = -1; }\r\n\t\t\tif (results[3]) { duration.years = parseInt(results[3], 10); empty = false; }\r\n\t\t\tif (results[5]) { duration.months = parseInt(results[5], 10); empty = false; }\r\n\t\t\tif (results[7]) { duration.days = parseInt(results[7], 10); empty = false; }\r\n\t\t\tif (results[10]) { duration.hours = parseInt(results[10], 10); empty = false; }\r\n\t\t\tif (results[12]) { duration.minutes = parseInt(results[12], 10); empty = false; }\r\n\t\t\tif (results[14]) { duration.seconds = Number(results[14]); empty = false; }\r\n\t\t\treturn duration;\r\n\t\t} else {\r\n\t\t\tthrow new Error('Value [' + value + '] does not match the duration pattern.');\r\n\t\t}\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Duration'\r\n});\r\nJsonix.Schema.XSD.Duration.PATTERN = '(-)?P(([0-9]+)Y)?(([0-9]+)M)?(([0-9]+)D)?(T(([0-9]+)H)?(([0-9]+)M)?(([0-9]+(\\\\.[0-9]+)?)S)?)?';\r\nJsonix.Schema.XSD.Duration.INSTANCE = new Jsonix.Schema.XSD.Duration();\r\nJsonix.Schema.XSD.Duration.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Duration.INSTANCE);\nJsonix.Schema.XSD.DateTime = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateTime',\r\n\ttypeName : Jsonix.Schema.XSD.qname('dateTime'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseDateTime(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printDateTime(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateTime'\r\n});\r\nJsonix.Schema.XSD.DateTime.INSTANCE = new Jsonix.Schema.XSD.DateTime();\r\nJsonix.Schema.XSD.DateTime.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateTime.INSTANCE);\r\n\nJsonix.Schema.XSD.DateTimeAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateTimeAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('dateTime'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseDateTime(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(calendar.year);\r\n\t\tdate.setMonth(calendar.month - 1);\r\n\t\tdate.setDate(calendar.day);\r\n\t\tdate.setHours(calendar.hour);\r\n\t\tdate.setMinutes(calendar.minute);\r\n\t\tdate.setSeconds(calendar.second);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * (- timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = calendar.timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar timezone;\r\n\t\tvar localTimezone = - value.getTimezoneOffset();\r\n\t\tvar correctedValue;\r\n\t\t// If original time zone was unknown, print the given value without\r\n\t\t// the timezone\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printDateTime(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\tday : value.getDate(),\r\n\t\t\t\thour : value.getHours(),\r\n\t\t\t\tminute : value.getMinutes(),\r\n\t\t\t\tsecond : value.getSeconds(),\r\n\t\t\t\tfractionalSecond : (value.getMilliseconds() / 1000)\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// If original timezone was known, correct and print the value with the timezone\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\ttimezone = value.originalTimezone;\r\n\t\t\t\tcorrectedValue = new Date(value.getTime() - (60000 * ( - timezone + localTimezone)));\r\n\t\t\t}\r\n\t\t\t// If original timezone was not specified, do not correct and use the local time zone\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttimezone = localTimezone;\r\n\t\t\t\tcorrectedValue = value;\r\n\t\t\t}\r\n\t\t\tvar x = this.printDateTime(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : correctedValue.getFullYear(),\r\n\t\t\t\tmonth : correctedValue.getMonth() + 1,\r\n\t\t\t\tday : correctedValue.getDate(),\r\n\t\t\t\thour : correctedValue.getHours(),\r\n\t\t\t\tminute : correctedValue.getMinutes(),\r\n\t\t\t\tsecond : correctedValue.getSeconds(),\r\n\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\ttimezone: timezone\r\n\t\t\t}));\r\n\t\t\treturn x;\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateTimeAsDate'\r\n});\r\nJsonix.Schema.XSD.DateTimeAsDate.INSTANCE = new Jsonix.Schema.XSD.DateTimeAsDate();\r\nJsonix.Schema.XSD.DateTimeAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateTimeAsDate.INSTANCE);\r\n\nJsonix.Schema.XSD.Time = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'Time',\r\n\ttypeName : Jsonix.Schema.XSD.qname('time'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseTime(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printTime(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Time'\r\n});\r\nJsonix.Schema.XSD.Time.INSTANCE = new Jsonix.Schema.XSD.Time();\r\nJsonix.Schema.XSD.Time.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Time.INSTANCE);\nJsonix.Schema.XSD.TimeAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'TimeAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('time'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseTime(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(1970);\r\n\t\tdate.setMonth(0);\r\n\t\tdate.setDate(1);\r\n\t\tdate.setHours(calendar.hour);\r\n\t\tdate.setMinutes(calendar.minute);\r\n\t\tdate.setSeconds(calendar.second);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * ( - timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar time = value.getTime();\r\n\t\tif (time <= -86400000 && time >= 86400000) {\r\n\t\t\tthrow new Error('Invalid time [' + value + '].');\r\n\t\t}\r\n\t\t// Original timezone was unknown, just use current time, no timezone\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\thour : value.getHours(),\r\n\t\t\t\tminute : value.getMinutes(),\r\n\t\t\t\tsecond : value.getSeconds(),\r\n\t\t\t\tfractionalSecond : (value.getMilliseconds() / 1000)\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar correctedValue;\r\n\t\t\tvar timezone;\r\n\t\t\tvar localTimezone = - value.getTimezoneOffset();\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\ttimezone = value.originalTimezone;\r\n\t\t\t\tcorrectedValue = new Date(value.getTime() - (60000 * ( - timezone + localTimezone)));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttimezone = localTimezone;\r\n\t\t\t\tcorrectedValue = value;\r\n\t\t\t}\r\n\t\t\tvar correctedTime = correctedValue.getTime();\r\n\t\t\tif (correctedTime >= (- localTimezone * 60000)) {\r\n\t\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\t\thour : correctedValue.getHours(),\r\n\t\t\t\t\tminute : correctedValue.getMinutes(),\r\n\t\t\t\t\tsecond : correctedValue.getSeconds(),\r\n\t\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\t\ttimezone: timezone\r\n\t\t\t\t}));\r\n\t\t\t} else {\r\n\t\t\t\tvar timezoneHours = Math.ceil(-correctedTime / 3600000);\r\n\t\t\t\t\r\n\t\t\t\tvar correctedTimeInSeconds = correctedValue.getSeconds() +\r\n\t\t\t\t\tcorrectedValue.getMinutes() * 60 +\r\n\t\t\t\t\tcorrectedValue.getHours() * 3600 +\r\n\t\t\t\t\ttimezoneHours * 3600 -\r\n\t\t\t\t\ttimezone * 60;\r\n\t\t\t\t\r\n\t\t\t\treturn this.printTime(new Jsonix.XML.Calendar({\r\n\t\t\t\t\thour : correctedTimeInSeconds % 86400,\r\n\t\t\t\t\tminute : correctedTimeInSeconds % 3600,\r\n\t\t\t\t\tsecond : correctedTimeInSeconds % 60,\r\n\t\t\t\t\tfractionalSecond : (correctedValue.getMilliseconds() / 1000),\r\n\t\t\t\t\ttimezone : timezoneHours * 60\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value) && value.getTime() > -86400000 && value.getTime() < 86400000;\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.TimeAsDate'\r\n});\r\nJsonix.Schema.XSD.TimeAsDate.INSTANCE = new Jsonix.Schema.XSD.TimeAsDate();\r\nJsonix.Schema.XSD.TimeAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.TimeAsDate.INSTANCE);\nJsonix.Schema.XSD.Date = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'Date',\r\n\ttypeName : Jsonix.Schema.XSD.qname('date'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseDate(value);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.Date'\r\n});\r\nJsonix.Schema.XSD.Date.INSTANCE = new Jsonix.Schema.XSD.Date();\r\nJsonix.Schema.XSD.Date.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.Date.INSTANCE);\nJsonix.Schema.XSD.DateAsDate = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'DateAsDate',\r\n\ttypeName : Jsonix.Schema.XSD.qname('date'),\r\n\tparse : function(value, context, input, scope) {\r\n\t\tvar calendar = this.parseDate(value);\r\n\t\tvar date = new Date();\r\n\t\tdate.setFullYear(calendar.year);\r\n\t\tdate.setMonth(calendar.month - 1);\r\n\t\tdate.setDate(calendar.day);\r\n\t\tdate.setHours(0);\r\n\t\tdate.setMinutes(0);\r\n\t\tdate.setSeconds(0);\r\n\t\tdate.setMilliseconds(0);\r\n\t\tif (Jsonix.Util.Type.isNumber(calendar.fractionalSecond)) {\r\n\t\t\tdate.setMilliseconds(Math.floor(1000 * calendar.fractionalSecond));\r\n\t\t}\r\n\t\tvar timezone;\r\n\t\tvar unknownTimezone;\r\n\t\tvar localTimezone = - date.getTimezoneOffset();\r\n\t\tif (Jsonix.Util.NumberUtils.isInteger(calendar.timezone))\r\n\t\t{\r\n\t\t\ttimezone = calendar.timezone;\r\n\t\t\tunknownTimezone = false;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Unknown timezone\r\n\t\t\ttimezone = localTimezone;\r\n\t\t\tunknownTimezone = true;\r\n\t\t}\r\n\t\t//\r\n\t\tvar result = new Date(date.getTime() + (60000 * ( - timezone + localTimezone)));\r\n\t\tif (unknownTimezone)\r\n\t\t{\r\n\t\t\t// null denotes \"unknown timezone\"\r\n\t\t\tresult.originalTimezone = null;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tresult.originalTimezone = timezone;\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\tJsonix.Util.Ensure.ensureDate(value);\r\n\t\tvar localDate = new Date(value.getTime());\r\n\t\tlocalDate.setHours(0);\r\n\t\tlocalDate.setMinutes(0);\r\n\t\tlocalDate.setSeconds(0);\r\n\t\tlocalDate.setMilliseconds(0);\r\n\t\t\r\n\t\t// Original timezone is unknown\r\n\t\tif (value.originalTimezone === null)\r\n\t\t{\r\n\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\tday : value.getDate()\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// If original timezone was known, correct and print the value with the timezone\r\n\t\t\tif (Jsonix.Util.NumberUtils.isInteger(value.originalTimezone))\r\n\t\t\t{\r\n\t\t\t\tvar correctedValue = new Date(value.getTime() - (60000 * (- value.originalTimezone - value.getTimezoneOffset())));\r\n\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\tyear : correctedValue.getFullYear(),\r\n\t\t\t\t\tmonth : correctedValue.getMonth() + 1,\r\n\t\t\t\t\tday : correctedValue.getDate(),\r\n\t\t\t\t\ttimezone : value.originalTimezone\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t// If original timezone was not specified, do not correct and use the local time zone\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// We assume that the difference between the date value and local midnight\r\n\t\t\t\t// should be interpreted as a timezone offset.\r\n\t\t\t\t// In case there's no difference, we assume default/unknown timezone\r\n\t\t\t\tvar localTimezone = - value.getTime() + localDate.getTime();\r\n\t\t\t\tif (localTimezone === 0) {\r\n\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\t\t\tday : value.getDate()\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar timezone = localTimezone - (60000 * value.getTimezoneOffset());\r\n\t\t\t\t\tif (timezone >= -43200000) {\r\n\t\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\t\tyear : value.getFullYear(),\r\n\t\t\t\t\t\t\tmonth : value.getMonth() + 1,\r\n\t\t\t\t\t\t\tday : value.getDate(),\r\n\t\t\t\t\t\t\ttimezone : Math.floor(timezone / 60000)\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar nextDay = new Date(value.getTime() + 86400000);\r\n\t\t\t\t\t\treturn this.printDate(new Jsonix.XML.Calendar({\r\n\t\t\t\t\t\t\tyear : nextDay.getFullYear(),\r\n\t\t\t\t\t\t\tmonth : nextDay.getMonth() + 1,\r\n\t\t\t\t\t\t\tday : nextDay.getDate(),\r\n\t\t\t\t\t\t\ttimezone : (Math.floor(timezone / 60000) + 1440)\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tisInstance : function(value, context, scope) {\r\n\t\treturn Jsonix.Util.Type.isDate(value);\r\n\t},\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.DateAsDate'\r\n});\r\nJsonix.Schema.XSD.DateAsDate.INSTANCE = new Jsonix.Schema.XSD.DateAsDate();\r\nJsonix.Schema.XSD.DateAsDate.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.DateAsDate.INSTANCE);\nJsonix.Schema.XSD.GYearMonth = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GYearMonth',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gYearMonth'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GYearMonth',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGYearMonth(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGYearMonth(value, context, output, scope);\r\n\t}\r\n\r\n});\r\nJsonix.Schema.XSD.GYearMonth.INSTANCE = new Jsonix.Schema.XSD.GYearMonth();\r\nJsonix.Schema.XSD.GYearMonth.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GYearMonth.INSTANCE);\nJsonix.Schema.XSD.GYear = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GYear',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gYear'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GYear',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGYear(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGYear(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GYear.INSTANCE = new Jsonix.Schema.XSD.GYear();\r\nJsonix.Schema.XSD.GYear.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GYear.INSTANCE);\nJsonix.Schema.XSD.GMonthDay = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GMonthDay',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gMonthDay'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GMonthDay',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGMonthDay(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGMonthDay(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GMonthDay.INSTANCE = new Jsonix.Schema.XSD.GMonthDay();\r\nJsonix.Schema.XSD.GMonthDay.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GMonthDay.INSTANCE);\nJsonix.Schema.XSD.GDay = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GDay',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gDay'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GDay',\r\n\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGDay(value, context, input, scope);\r\n\t},\r\n\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGDay(value, context, output, scope);\r\n\t}\r\n\r\n});\r\nJsonix.Schema.XSD.GDay.INSTANCE = new Jsonix.Schema.XSD.GDay();\r\nJsonix.Schema.XSD.GDay.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GDay.INSTANCE);\nJsonix.Schema.XSD.GMonth = Jsonix.Class(Jsonix.Schema.XSD.Calendar, {\r\n\tname : 'GMonth',\r\n\ttypeName : Jsonix.Schema.XSD.qname('gMonth'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.GMonth',\r\n\tparse : function(value, context, input, scope) {\r\n\t\treturn this.parseGMonth(value, context, input, scope);\r\n\t},\r\n\tprint : function(value, context, output, scope) {\r\n\t\treturn this.printGMonth(value, context, output, scope);\r\n\t}\r\n});\r\nJsonix.Schema.XSD.GMonth.INSTANCE = new Jsonix.Schema.XSD.GMonth();\r\nJsonix.Schema.XSD.GMonth.INSTANCE.LIST = new Jsonix.Schema.XSD.List(Jsonix.Schema.XSD.GMonth.INSTANCE);\nJsonix.Schema.XSD.ID = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'ID',\r\n\ttypeName : Jsonix.Schema.XSD.qname('ID'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.ID'\r\n});\r\nJsonix.Schema.XSD.ID.INSTANCE = new Jsonix.Schema.XSD.ID();\r\nJsonix.Schema.XSD.ID.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.ID.INSTANCE);\nJsonix.Schema.XSD.IDREF = Jsonix.Class(Jsonix.Schema.XSD.String, {\r\n\tname : 'IDREF',\r\n\ttypeName : Jsonix.Schema.XSD.qname('IDREF'),\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.IDREF'\r\n});\r\nJsonix.Schema.XSD.IDREF.INSTANCE = new Jsonix.Schema.XSD.IDREF();\r\nJsonix.Schema.XSD.IDREF.INSTANCE.LIST = new Jsonix.Schema.XSD.List(\r\n\t\tJsonix.Schema.XSD.IDREF.INSTANCE);\nJsonix.Schema.XSD.IDREFS = Jsonix.Class(Jsonix.Schema.XSD.List, {\r\n\tname : 'IDREFS',\r\n\tinitialize : function() {\r\n\t\tJsonix.Schema.XSD.List.prototype.initialize.apply(this, [ Jsonix.Schema.XSD.IDREF.INSTANCE, Jsonix.Schema.XSD.qname('IDREFS'), ' ' ]);\r\n\t},\r\n\t// TODO Constraints\r\n\tCLASS_NAME : 'Jsonix.Schema.XSD.IDREFS'\r\n});\r\nJsonix.Schema.XSD.IDREFS.INSTANCE = new Jsonix.Schema.XSD.IDREFS();\nJsonix.Schema.XSI = {};\r\nJsonix.Schema.XSI.NAMESPACE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\nJsonix.Schema.XSI.PREFIX = 'xsi';\r\nJsonix.Schema.XSI.TYPE = 'type';\r\nJsonix.Schema.XSI.NIL = 'nil';\r\nJsonix.Schema.XSI.qname = function(localPart) {\r\n\tJsonix.Util.Ensure.ensureString(localPart);\r\n\treturn new Jsonix.XML.QName(Jsonix.Schema.XSI.NAMESPACE_URI, localPart,\r\n\t\t\tJsonix.Schema.XSI.PREFIX);\r\n};\r\nJsonix.Schema.XSI.TYPE_QNAME = Jsonix.Schema.XSI.qname(Jsonix.Schema.XSI.TYPE);\r\n\nJsonix.Context = Jsonix\r\n\t\t.Class(Jsonix.Mapping.Styled, {\r\n\t\t\tmodules : [],\r\n\t\t\ttypeInfos : null,\r\n\t\t\ttypeNameKeyToTypeInfo : null,\r\n\t\t\telementInfos : null,\r\n\t\t\toptions : null,\r\n\t\t\tsubstitutionMembersMap : null,\r\n\t\t\tscopedElementInfosMap : null,\r\n\t\t\tsupportXsiType : true,\r\n\t\t\tinitialize : function(mappings, options) {\r\n\t\t\t\tJsonix.Mapping.Styled.prototype.initialize.apply(this, [options]);\r\n\t\t\t\tthis.modules = [];\r\n\t\t\t\tthis.elementInfos = [];\r\n\t\t\t\tthis.typeInfos = {};\r\n\t\t\t\tthis.typeNameKeyToTypeInfo = {};\r\n\t\t\t\tthis.registerBuiltinTypeInfos();\r\n\t\t\t\tthis.namespacePrefixes = {};\r\n\t\t\t\tthis.prefixNamespaces = {};\r\n\t\t\t\tthis.substitutionMembersMap = {};\r\n\t\t\t\tthis.scopedElementInfosMap = {};\r\n\r\n\t\t\t\t// Initialize options\r\n\t\t\t\tif (Jsonix.Util.Type.exists(options)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(options);\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isObject(options.namespacePrefixes)) {\r\n\t\t\t\t\t\tthis.namespacePrefixes = \r\n\t\t\t\t\t\t\tJsonix.Util.Type.cloneObject(options.namespacePrefixes, {});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (Jsonix.Util.Type\r\n\t\t\t\t\t\t\t.isBoolean(options.supportXsiType)) {\r\n\t\t\t\t\t\tthis.supportXsiType = options.supportXsiType; \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Initialize prefix/namespace mapping\r\n\t\t\t\tfor (var ns in this.namespacePrefixes)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this.namespacePrefixes.hasOwnProperty(ns))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tp = this.namespacePrefixes[ns];\r\n\t\t\t\t\t\tthis.prefixNamespaces[p] = ns;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Initialize modules\r\n\t\t\t\tif (Jsonix.Util.Type.exists(mappings)) {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureArray(mappings);\r\n\t\t\t\t\t// Initialize modules\r\n\t\t\t\t\tvar index, mapping, module;\r\n\t\t\t\t\tfor (index = 0; index < mappings.length; index++) {\r\n\t\t\t\t\t\tmapping = mappings[index];\r\n\t\t\t\t\t\tmodule = this.createModule(mapping);\r\n\t\t\t\t\t\tthis.modules[index] = module;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.processModules();\r\n\t\t\t},\r\n\t\t\tcreateModule : function(mapping) {\r\n\t\t\t\tvar module;\r\n\t\t\t\tif (mapping instanceof this.mappingStyle.module) {\r\n\t\t\t\t\tmodule = mapping;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmapping = Jsonix.Util.Type.cloneObject(mapping);\r\n\t\t\t\t\tmodule = new this.mappingStyle.module(mapping, \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmappingStyle : this.mappingStyle\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn module;\r\n\t\t\t},\r\n\t\t\tregisterBuiltinTypeInfos : function() {\r\n\t\t\t\tfor ( var index = 0; index < this.builtinTypeInfos.length; index++) {\r\n\t\t\t\t\tthis.registerTypeInfo(this.builtinTypeInfos[index]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprocessModules : function() {\r\n\t\t\t\tvar index, module;\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.registerTypeInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.buildTypeInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.registerElementInfos(this);\r\n\t\t\t\t}\r\n\t\t\t\tfor (index = 0; index < this.modules.length; index++) {\r\n\t\t\t\t\tmodule = this.modules[index];\r\n\t\t\t\t\tmodule.buildElementInfos(this);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tregisterTypeInfo : function(typeInfo) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(typeInfo);\r\n\t\t\t\tvar n = typeInfo.name||typeInfo.n||null;\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(n);\r\n\t\t\t\tthis.typeInfos[n] = typeInfo;\r\n\t\t\t\tif (typeInfo.typeName && typeInfo.typeName.key)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.typeNameKeyToTypeInfo[typeInfo.typeName.key] = typeInfo;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tresolveTypeInfo : function(mapping, module) {\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(mapping)) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t} else if (mapping instanceof Jsonix.Model.TypeInfo) {\r\n\t\t\t\t\treturn mapping;\r\n\t\t\t\t} else if (Jsonix.Util.Type.isString(mapping)) {\r\n\t\t\t\t\tvar typeInfoName;\r\n\t\t\t\t\t// If mapping starts with '.' consider it to be a local type name in this module\r\n\t\t\t\t\tif (mapping.length > 0 && mapping.charAt(0) === '.')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar n = module.name || module.n || undefined;\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureObject(module, 'Type info mapping can only be resolved if module is provided.');\r\n\t\t\t\t\t\tJsonix.Util.Ensure.ensureString(n, 'Type info mapping can only be resolved if module name is provided.');\r\n\t\t\t\t\t\ttypeInfoName = n + mapping;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypeInfoName = mapping;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.typeInfos[typeInfoName]) {\r\n\t\t\t\t\t\tthrow new Error('Type info [' + typeInfoName + '] is not known in this context.');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.typeInfos[typeInfoName];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tJsonix.Util.Ensure.ensureObject(module, 'Type info mapping can only be resolved if module is provided.');\r\n\t\t\t\t\tvar typeInfo = module.createTypeInfo(mapping);\r\n\t\t\t\t\ttypeInfo.build(this, module);\r\n\t\t\t\t\treturn typeInfo;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tregisterElementInfo : function(elementInfo, module) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureObject(elementInfo);\r\n\t\t\t\tthis.elementInfos.push(elementInfo);\r\n\r\n\t\t\t\tif (Jsonix.Util.Type.exists(elementInfo.substitutionHead)) {\r\n\t\t\t\t\tvar substitutionHead = elementInfo.substitutionHead;\r\n\t\t\t\t\tvar substitutionHeadKey = substitutionHead.key;\r\n\t\t\t\t\tvar substitutionMembers = this.substitutionMembersMap[substitutionHeadKey];\r\n\r\n\t\t\t\t\tif (!Jsonix.Util.Type.isArray(substitutionMembers)) {\r\n\t\t\t\t\t\tsubstitutionMembers = [];\r\n\t\t\t\t\t\tthis.substitutionMembersMap[substitutionHeadKey] = substitutionMembers;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubstitutionMembers.push(elementInfo);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopeKey;\r\n\t\t\t\tif (Jsonix.Util.Type.exists(elementInfo.scope)) {\r\n\t\t\t\t\tscopeKey = this.resolveTypeInfo(elementInfo.scope, module).name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscopeKey = '##global';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scopedElementInfos = this.scopedElementInfosMap[scopeKey];\r\n\r\n\t\t\t\tif (!Jsonix.Util.Type.isObject(scopedElementInfos)) {\r\n\t\t\t\t\tscopedElementInfos = {};\r\n\t\t\t\t\tthis.scopedElementInfosMap[scopeKey] = scopedElementInfos;\r\n\t\t\t\t}\r\n\t\t\t\tscopedElementInfos[elementInfo.elementName.key] = elementInfo;\r\n\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByValue : function(value)\r\n\t\t\t{\r\n\t\t\t\tif (!Jsonix.Util.Type.exists(value))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (Jsonix.Util.Type.isObject(value))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar typeName = value.TYPE_NAME;\r\n\t\t\t\t\tif (Jsonix.Util.Type.isString(typeName))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar typeInfoByName = this.getTypeInfoByName(typeName);\r\n\t\t\t\t\t\tif (typeInfoByName)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn typeInfoByName;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t},\r\n\t\t\t// TODO public API\r\n\t\t\tgetTypeInfoByName : function(name) {\r\n\t\t\t\treturn this.typeInfos[name];\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByTypeName : function(typeName) {\r\n\t\t\t\tvar tn = Jsonix.XML.QName.fromObjectOrString(typeName, this);\r\n\t\t\t\treturn this.typeNameKeyToTypeInfo[tn.key];\r\n\t\t\t},\r\n\t\t\tgetTypeInfoByTypeNameKey : function(typeNameKey) {\r\n\t\t\t\treturn this.typeNameKeyToTypeInfo[typeNameKey];\r\n\t\t\t},\r\n\t\t\tgetElementInfo : function(name, scope) {\r\n\t\t\t\tif (Jsonix.Util.Type.exists(scope)) {\r\n\t\t\t\t\tvar scopeKey = scope.name;\r\n\t\t\t\t\tvar scopedElementInfos = this.scopedElementInfosMap[scopeKey];\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(scopedElementInfos)) {\r\n\t\t\t\t\t\tvar scopedElementInfo = scopedElementInfos[name.key];\r\n\t\t\t\t\t\tif (Jsonix.Util.Type.exists(scopedElementInfo)) {\r\n\t\t\t\t\t\t\treturn scopedElementInfo;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar globalScopeKey = '##global';\r\n\t\t\t\tvar globalScopedElementInfos = this.scopedElementInfosMap[globalScopeKey];\r\n\t\t\t\tif (Jsonix.Util.Type.exists(globalScopedElementInfos)) {\r\n\t\t\t\t\tvar globalScopedElementInfo = globalScopedElementInfos[name.key];\r\n\t\t\t\t\tif (Jsonix.Util.Type.exists(globalScopedElementInfo)) {\r\n\t\t\t\t\t\treturn globalScopedElementInfo;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t\t//\r\n\t\t\t\t// throw new Error(\"Element [\" + name.key\r\n\t\t\t\t// + \"] could not be found in the given context.\");\r\n\t\t\t},\r\n\t\t\tgetSubstitutionMembers : function(name) {\r\n\t\t\t\treturn this.substitutionMembersMap[Jsonix.XML.QName\r\n\t\t\t\t\t\t.fromObject(name).key];\r\n\t\t\t},\r\n\t\t\tcreateMarshaller : function() {\r\n\t\t\t\treturn new this.mappingStyle.marshaller(this);\r\n\t\t\t},\r\n\t\t\tcreateUnmarshaller : function() {\r\n\t\t\t\treturn new this.mappingStyle.unmarshaller(this);\r\n\t\t\t},\r\n\t\t\tgetNamespaceURI : function(prefix) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(prefix);\r\n\t\t\t\treturn this.prefixNamespaces[prefix];\r\n\t\t\t},\r\n\t\t\tgetPrefix : function(namespaceURI, defaultPrefix) {\r\n\t\t\t\tJsonix.Util.Ensure.ensureString(namespaceURI);\r\n\t\t\t\tvar prefix = this.namespacePrefixes[namespaceURI];\r\n\t\t\t\tif (Jsonix.Util.Type.isString(prefix))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn prefix;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\treturn defaultPrefix;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Builtin type infos.\r\n\t\t\t */\r\n\t\t\tbuiltinTypeInfos : [\r\n\t\t\t        Jsonix.Schema.XSD.AnyType.INSTANCE,\r\n\t\t\t        Jsonix.Schema.XSD.AnySimpleType.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.AnyURI.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Base64Binary.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Boolean.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Byte.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Calendar.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Date.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateTimeAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.DateTime.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Decimal.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Double.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Duration.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Float.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GDay.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GMonth.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GMonthDay.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GYear.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.GYearMonth.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.HexBinary.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.ID.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.IDREF.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.IDREFS.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Int.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Integer.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Language.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Long.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Name.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NCName.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NegativeInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NMToken.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NMTokens.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NonNegativeInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NonPositiveInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.NormalizedString.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Number.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.PositiveInteger.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.QName.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Short.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.String.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Strings.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.TimeAsDate.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Time.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.Token.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedByte.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedInt.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedLong.INSTANCE,\r\n\t\t\t\t\tJsonix.Schema.XSD.UnsignedShort.INSTANCE ],\r\n\t\t\tCLASS_NAME : 'Jsonix.Context'\r\n\t\t});\n\t// Complete Jsonix script is included above\r\n\treturn { Jsonix: Jsonix };\r\n};\r\n\r\n// If the require function exists ...\r\nif (typeof require === 'function') {\r\n\t// ... but the define function does not exists\r\n\tif (typeof define !== 'function') {\r\n\t\t// Load the define function via amdefine\r\n\t\tvar define = require('amdefine')(module);\r\n\t\t// If we're not in browser\r\n\t\tif (typeof window === 'undefined')\r\n\t\t{\r\n\t\t\t// Require xmldom, xmlhttprequest and fs\r\n\t\t\tdefine([\"xmldom\", \"xmlhttprequest\", \"fs\"], _jsonix_factory);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// We're probably in browser, maybe browserify\r\n\t\t\t// Do not require xmldom, xmlhttprequest as they'r provided by the browser\r\n\t\t\t// Do not require fs since file system is not available anyway\r\n\t\t\tdefine([], _jsonix_factory);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Otherwise assume we're in the browser/RequireJS environment\r\n\t\t// Load the module without xmldom and xmlhttprequests dependencies\r\n\t\tdefine([], _jsonix_factory);\r\n\t}\r\n}\r\n// If the require function does not exists, we're not in Node.js and therefore in browser environment\r\nelse\r\n{\r\n\t// Just call the factory and set Jsonix as global.\r\n\tvar Jsonix = _jsonix_factory().Jsonix;\r\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jsonix/jsonix.js\n// module id = 74\n// module chunks = 4 5","var XLink_1_0_Module_Factory = function () {\n  var XLink_1_0 = {\n    n: 'XLink_1_0',\n    dens: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    dans: 'http:\\/\\/www.w3.org\\/1999\\/xlink',\n    tis: [{\n        ln: 'ResourceType',\n        tn: 'resourceType',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'label',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        ln: 'LocatorType',\n        tn: 'locatorType',\n        ps: [{\n            n: 'locatorTitle',\n            mno: 0,\n            col: true,\n            en: 'title',\n            ti: '.TitleEltType'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'href',\n            rq: true,\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'label',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        ln: 'Extended',\n        tn: 'extended',\n        ps: [{\n            n: 'extendedModel',\n            mno: 0,\n            col: true,\n            etis: [{\n                en: 'title',\n                ti: '.TitleEltType'\n              }, {\n                en: 'resource',\n                ti: '.ResourceType'\n              }, {\n                en: 'locator',\n                ti: '.LocatorType'\n              }, {\n                en: 'arc',\n                ti: '.ArcType'\n              }],\n            t: 'es'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }]\n      }, {\n        ln: 'Simple',\n        tn: 'simple',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'href',\n            t: 'a'\n          }, {\n            n: 'role',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'Token',\n            t: 'a'\n          }]\n      }, {\n        ln: 'TitleEltType',\n        tn: 'titleEltType',\n        ps: [{\n            n: 'content',\n            col: true,\n            t: 'ae'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'lang',\n            an: {\n              lp: 'lang',\n              ns: 'http:\\/\\/www.w3.org\\/XML\\/1998\\/namespace'\n            },\n            t: 'a'\n          }]\n      }, {\n        ln: 'ArcType',\n        tn: 'arcType',\n        ps: [{\n            n: 'locatorTitle',\n            mno: 0,\n            col: true,\n            en: 'title',\n            ti: '.TitleEltType'\n          }, {\n            n: 'type',\n            rq: true,\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'arcrole',\n            t: 'a'\n          }, {\n            n: 'title',\n            t: 'a'\n          }, {\n            n: 'show',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'actuate',\n            ti: 'Token',\n            t: 'a'\n          }, {\n            n: 'from',\n            ti: 'NCName',\n            t: 'a'\n          }, {\n            n: 'to',\n            ti: 'NCName',\n            t: 'a'\n          }]\n      }, {\n        t: 'enum',\n        ln: 'TypeType',\n        bti: 'Token',\n        vs: ['simple', 'extended', 'title', 'resource', 'locator', 'arc']\n      }, {\n        t: 'enum',\n        ln: 'ShowType',\n        bti: 'Token',\n        vs: ['new', 'replace', 'embed', 'other', 'none']\n      }, {\n        t: 'enum',\n        ln: 'ActuateType',\n        bti: 'Token',\n        vs: ['onLoad', 'onRequest', 'other', 'none']\n      }],\n    eis: [{\n        en: 'arc',\n        ti: '.ArcType'\n      }, {\n        en: 'resource',\n        ti: '.ResourceType'\n      }, {\n        en: 'locator',\n        ti: '.LocatorType'\n      }, {\n        en: 'title',\n        ti: '.TitleEltType'\n      }]\n  };\n  return {\n    XLink_1_0: XLink_1_0\n  };\n};\nif (typeof define === 'function' && define.amd) {\n  define([], XLink_1_0_Module_Factory);\n}\nelse {\n  var XLink_1_0_Module = XLink_1_0_Module_Factory();\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports.XLink_1_0 = XLink_1_0_Module.XLink_1_0;\n  }\n  else {\n    var XLink_1_0 = XLink_1_0_Module.XLink_1_0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/w3c-schemas/lib/XLink_1_0.js\n// module id = 99\n// module chunks = 4 5"],"sourceRoot":""}